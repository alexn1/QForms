- логировать unhandled promise rejection
- сделать возможность устанавливать стиль значений
- устанавливать курсор на новую строку в гриде
- сделать paging
- переписать мезанизм refresh для RowForm, синхронизация не нужна
- создать микросервис логирования ошибок со своим конфигом подключения к бд
- залить на хостинг
- добавить новую тему дизайна
- реализовать транзакции в postrgres
- баг: скрол сбивается у строчной формы, если переключить таб и вернутся назад
- баг: заменяет слеши в адресе на коды при обновлении. оказалось это в table форме
- протестировать когда обновление проиходит в другом фрейме
- сделать возможность копировать данные из grid контрола
- если колонки нет в выборке, то надо писать адекватное сообщение об ошибке, а не просто need column or value
- database link
- когда переключаешься мышью между страницами, фокус грида не сохраняется

0.1.0
------------------------------------------------------------------------------------------------------------------------
Feature #310: Сделать возможность указывать связи между таблицами и перед удалением строки проверять на зависимые строки.
Feature #315: иметь возможность устанавливать режим открытия страницы по умолчанию
Feature #316: таблица у источника данных обязательно
Feature #320: логон на уровне сервера, параметр в package.json
Feature #321: создавать демо приложение с помощью скрипта
Feature #326: запрашивать создание apps

no version
------------------------------------------------------------------------------------------------------------------------
Feature #265: Сделать админку для сервера, чтобы можно было смотреть запущенны приложения, пулы и выключать сервер.
Feature #264: Не показывать formatVersion в редакторе.
Feature #255: TODO: добавить проверку формата запрашиваемого файла
Feature #250: Сделать строку состояние у редактора
Feature #249: Сделать возможность отключать шаблон в редакторе
Feature #248: Менять имя файла страницы и шаблоны при смене имени
Feature #245: Выделять болдом в редакторе если есть кастом вью.
Feature #244: Placeholder для текстовых полей.
Feature #243: Выяснить что происходит когда меняем в табличной форме ключевое поле строки.
Feature #242: Кнопку открытия списка Combobox с возможностью выбора после закрытия окна
Feature #241: Маску для текстового поля
Feature #240: Фиксировать размер таблицы при изменении размера колонок
Feature #239: Запрашивать разрешение при закрытии несохранённой страницы
Feature #237: Сделать универсальный ограничитель диапазона даты для табличной формы
Feature #234: Установить нормальный курсор у readOnly элементов.
Feature #233: В табличной форме центрировать заголовок для поля CheckBox
Feature #232: Сделать SidebarControl в виде вертикального таба
Feature #231: Сделать WizardControl
Feature #228: Иключить двойной клик при клике на +- у TreeControl
Feature #227: Поддерживать иерархию источника данных в ComboBox
Feature #226: Запретить менять поля первичного ключа.
Feature #224: Сделать контрол RadioButtonControl

------------------------------------------------------------------------------------------------------------------------
+ управление клавишами в гриде, enter открываем, вверх вниз курсор
+ избавиться от qTab с помощью функциеи поиска pageController в ApplicationController
+ при обновлении page с row form с табличными данными, не надо обновлять все табличные формы, так как там нет изменений
+ отдельный буфер для реадктирования данных, вместе с оригинальными, чтобы
+ красным цветом несохраненные поля в редакторе и форме
+ лочить кнопку save после сохранения
+ сделать кнопку refresh для строчной формы
+ добавить кнопку Discard для сброса изменений
+ если в json юзер постит пустую строку, то присваивать полю null
+ сделать форму для вызова rpc
+ поле объект json менять только при потере фокуса, чтобы не было ошибок парсинга json
+ если на странице есть row форма, то отображать в заголовке таба ключ Domain #10
+ брать приложение из hostApp когда нужно editor подключится к базе, избавиться от Application.create2
+ при каждом запросе css происходит чтения файла приложения, надо брать инфу из памяти
+ приложение должно быть одно. бд одна, различие в env конфигурации.
+ добавить env в application, чтобы хранить хост backend сервиса
+ переменные окружения должны быть плоскими, без точек и без eval, только по имени, в имени можно допустить точку
+ не позволяется существование приложения одновременно в двух env
+ написать монитор, где можно смотреть все созданные приложения
+ создавать приложения при любом запросе, чтобы не вылетало после перезапуска и команды на обновление
+ login to loginGet/loginPost
+ не хранить row в контроллерах, получать методом из модели
+ разобраться, чтобы ключ нигде не хранился и при изменении изменялся в табе страницы
+ при обновлении data source на row form, возвращать обновленную строку, чтобы обновить данные в форме
+ починить save and close
+ DataSource.update больше не возвращает ключ и setKey после обновления странице будет undefined, надо возвращать ключ строки для row form
+ вызывать checkAndCalcColumns для обновлённой строки
+ код генерации запросов в классы субд
+ сделать single и multiple query для каждого источника данных
+ посмотреть индекс в grid контроле, надо чтобы его не было
+ перезагружать в табличной форме только измененные строки, а не все каждый раз
+ QForms.currentDateTime() надо чтобы независимо на клиент или сенвере одни набор функций и один класс
+ избавиться от then в frontend
+ избавиться от promise
+ убрать разделители методов
+ создать класс Database на фронте
+ грузить таблицы на клиента, чтобы там можно было определить тип
+ кнопка save активна только если форма валидна
+ все событийные связи на уровень контроллера, по возвможности у модели не должно быть событий
+ сделать валидацию в зависимости от типа, общую для всех полей.
+ перенести переменные из server.set( в HostApp, начать с 'public'
+ при закрытии строчной формы просит подтвердить, но изменений нет, баг
+ hostApp в каждый запрос, чтобы не ставить переменные в server.set(
+ избавиться от query. уже перешли на single и multiple
+ расширить систему привязки pageControl к табу, чтобы таб следил за изменением заголовка
+ перед записью нового значения в data source, если это объект то проверять, не равно ли его содержимое объекту в ds
+ сделать валидатор объектов, если они не парсятся, то красным, но без msgbox
+ баг: qKey хранит ключ в табличной форме, а ключ может менятбся
+ влить код в qforms
+ баг: при сохранении в форме, если не валидный, то не подсвечивает поле красным
+ баг: изменение undefined на null не подсвечивается синим (changed класс)
+ текущее значение undefined не менять на null
+ разобратся со вставкой строк в новой модели
+ разобратся со удалением строк в новой модели
+ insertRow для mysql если auto поля болшее одного
+ протестировать вставку строк с auto полем (Accounts)
+ обновление для mysql не работает
+ создать класс SqlDataSource на фронте
+ пересоздавать приложение заново при загрузке в редакторе
+ сделать выбор класса бд при создании, чтобы не создавать database
+ избавится от query в формате
+ в заголовке отображать имя папки приложения
+ исправить ошибку в редакторе при клике на Forms TypeError: controller is undefined
+ сделать actions, пока отображать обычными кнопками, потом будет в выпадающем меню
- убрать controls
+ сделать выпадающее меню для action
+ передавать в обработчик action строку
+ опубликовать версию qforms
+ возможность запускать из модуля npm
+ возможность запускать приложения с выборонным env
+ баг: если в комбо выбрать пустое значение для integer, то ставит 0 вместо null
+ скрывать крестик на date picker если дата не выбрана
+ в дебаге показывать в табе id страницы
+ в событии обновления таблицы, слать ключ записи, которая обновилась
+ placeholder в дебаге
+ баг: при discard похоже что если значение валидные они берётся из измененных в DataSource, а не оригинального значения
+ разработать функцию для форматирования даты '{yyyy}-{mm}-{dd} {month} {day} {hh} {mm} {ss}'
+ баг: при создании новой записи ключ возвращается в строковом формате [\"30\"]
- создать StatusbarWidget
+ сделать стили для кнопок qforms
- вынести стили тем для виджетов в стили виджетов
+ стили для валидации, просто подсвечивать поле красным, всё поле
+ отображать тип поля js во view таблицы
+ Feature #238: Сделать возможность открывать страницу модально
+ сделать элементы для ошибки поля, кружок (!) при наведении на который появляется пояснение
+ избавиться от bootstrap
+ в строчной форме сделать кнопку edit и позволять редактировать после нажатия
+ сделать изменение размера колонок
+ выделять строку в gird по ключу, это значит что текущее выделение это prop
+ удалять FieldView из списка при удалении, чтобы потом ошибки не было
+ показывать новую строку при добавлении в списке (Grid)
+ баг: если создать строку и сразу её обновить то в табличной форме она где-то не прописана, поэтому cannot find row: [4]
+ избавиться от RowFormFieldView
+ read only только для auto полей
