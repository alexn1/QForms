{"version":3,"sources":["IndexView/IndexView.jsx"],"names":["IndexView","ReactComponent","renderModals","ctrl","props","modals","map","modal","id","toString","closeModal","onFolderNameCreate","onFolderNameChange","onAppNameChange","onCreateClick","render","console","log","backgroundColor","margin","currentAppFullName","getAppItems","width","run","onAppChange","currentAppEnv","getEnvItems","onEnvChange","data","nodeEnv","edit","btnCreate_Click"],"mappings":"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","file":"app-jsx.56395d845a8828ed9f98a8fc07de5c39.js","sourcesContent":["class IndexView extends ReactComponent {\n    renderModals() {\n        const ctrl = this.props.ctrl;\n        return (\n            <div>\n                {ctrl.modals.map(modal =><Modal key={modal.id.toString()}>\n                    <div className=\"modal-dialog modal-sm\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <Button classList={['close']} onClick={ctrl.closeModal}>\n                                    <span>&times;</span>\n                                </Button>\n                                <h4 className=\"modal-title\">New Application</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"folderName\">Folder Name</label>\n                                    <TextBox id=\"folderName\" classList={['form-control']} onCreate={ctrl.onFolderNameCreate} onChange={ctrl.onFolderNameChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"appName\">Application Name</label>\n                                    <TextBox id=\"appName\" classList={['form-control']} onChange={ctrl.onAppNameChange}/>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                {/*<button name=\"create\" type=\"button\" className=\"btn btn-primary\">Create</button>*/}\n                                <Button name=\"create\" classList={['btn', 'btn-primary']} onClick={ctrl.onCreateClick}>Create</Button>\n                                <Button classList={['btn', 'btn-default']} onClick={ctrl.closeModal}>Close</Button>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>)}\n            </div>\n        );\n    }\n    render() {\n        console.log('IndexView.render');\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"IndexView\">\n                <div className=\"container\" style={{backgroundColor: '#eee'}}>\n                    <div className=\"row\" style={{margin: '50px 0'}}>\n                        <div>\n                            <ComboBox\n                                value={ctrl.currentAppFullName}\n                                items={ctrl.getAppItems()}\n                                size={15}\n                                style={{width: '100%'}}\n                                onDoubleClick={ctrl.run}\n                                onChange={ctrl.onAppChange}\n                            />\n                        </div>\n                        <div>\n                            <div className=\"form-group\">\n                                <ComboBox\n                                    value={ctrl.currentAppEnv}\n                                    classList={['form-control']}\n                                    items={ctrl.getEnvItems()}\n                                    onChange={ctrl.onEnvChange}\n                                />\n                            </div>\n                            <Button classList={['btn', 'btn-primary', 'btn-block']} onClick={ctrl.run}>Run</Button>\n                            {ctrl.data.nodeEnv === 'development' &&\n                                <Button classList={['btn', 'btn-default', 'btn-block']} onClick={ctrl.edit}>Edit</Button>\n                            }\n                            {ctrl.data.nodeEnv === 'development' &&\n                                <Button classList={['btn', 'btn-default', 'btn-block']} onClick={ctrl.btnCreate_Click}>New...</Button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {this.renderModals()}\n            </div>\n        );\n    }\n}\n"]}