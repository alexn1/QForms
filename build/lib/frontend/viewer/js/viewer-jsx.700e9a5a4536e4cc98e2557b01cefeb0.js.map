{"version":3,"sources":["Controller/View.jsx","Controller/ApplicationController/ApplicationView.jsx","Controller/FormController/FormView.jsx","Controller/PageController/PageView.jsx","Controller/PageController/PageView2.jsx","Controller/ApplicationController/MdiApplicationController/MdiApplicationView.jsx","Controller/ApplicationController/SdiApplicationController/SdiApplicationView.jsx","Controller/FieldController/RowFormFieldController/RowFormFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormFieldView.jsx","Controller/FormController/RowFormController/RowFormView.jsx","Controller/FormController/TableFormController/TableFormView.jsx","Controller/FieldController/RowFormFieldController/RowFormCheckBoxFieldController/RowFormCheckBoxFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormComboBoxFieldController/RowFormComboBoxFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormDatePickerFieldController/RowFormDatePickerFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormDateTimeFieldController/RowFormDateTimeFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormFileFieldController/RowFormFileFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormImageFieldController/RowFormImageFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormLinkFieldController/RowFormLinkFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormTextAreaFieldController/RowFormTextAreaFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormTextBoxFieldController/RowFormTextBoxFieldView.jsx","Controller/FieldController/RowFormFieldController/RowFormTimeFieldController/RowFormTimeFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormCheckBoxFieldController/TableFormCheckBoxFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormComboBoxFieldController/TableFormComboBoxFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormDatePickerFieldController/TableFormDatePickerFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormLinkFieldController/TableFormLinkFieldView.jsx","Controller/FieldController/TableFormFieldController/TableFormTextBoxFieldController/TableFormTextBoxFieldView.jsx"],"names":["View","ReactComponent","getActionsForDropdownButton","props","ctrl","model","data","actions","map","name","Model","getName","title","getAttr","ApplicationView","renderActivePage","activePage","renderPage","pageCtrl","React","createElement","getViewClass","onCreate","onViewCreate","renderModalPages","modalPages","getId","FormView","li","dataset","action","result","onActionClick","getActiveRow","alert","PageView","getTabs","forms","filter","form","getClassName","getCaption","content","renderForm","formCtrl","key","updated","getUpdated","renderRowForms","renderCaption","getKey","caption","ApplicationController","isInDebugMode","isChanged","hasNew","renderToolbar","width","hasRowFormWithDefaultSqlDataSource","getApp","getText","page","saveAndClose","onSaveAndCloseClick","isValid","isModal","close","onClosePageClick","hasActions","onActionsClick","shouldComponentUpdate","nextProps","nextState","render","console","log","getFullName","hasRowFormWithDefaultDs","hasRowForm","hasTableForm","PageView2","getAllTabs","MdiApplicationView","pages","getMenuItemsProp","onMenuItemClick","onTabClose","onTabCreate","getActivePageIndex","onTabMouseDown","onStatusbarCreate","SdiApplicationView","RowFormFieldView","getClassList","getErrorMessage","TableFormFieldView","constructor","span","createRef","getSpanOffsetWidth","current","offsetWidth","RowFormView","hasDefaultSqlDataSource","onEditClick","getMode","state","changed","valid","onSaveClick","onCancelClick","onDiscardClick","onRefreshClick","renderLabel","fieldCtrl","isNotNull","color","renderField","classList","renderError","renderFields","Object","keys","fields","isVisible","TableFormView","row","column","onUnmount","dataSource","getDefaultDataSource","refreshButton","refresh","parent","newRowMode","new","onNewClick","deleteRowMode","delete","onDeleteClick","isRowSelected","renderPaging","text","getRowsLength","getLimit","getCount","canPrev","onPreviousClick","previous","getFrame","toString","onFrameChanged","Array","getFramesCount","fill","val","i","value","canNext","onNextClick","next","getGridColumns","field","getWidth","getRows","getRowKey","onGridCellDblClick","onSelectionChange","getActiveRowIndex","renderGridCellView","RowFormCheckBoxFieldView","getValueForView","isEditable","onChange","RowFormComboBoxFieldView","getItems","getPlaceholder","RowFormDatePickerFieldView","getFormat","oldDates","getMinDate","RowFormDateTimeFieldView","e","view2","setState","onChange2","isCloseVisible","readOnly","undefined","renderViewStyle","getRow","onView2Create","getValueForTime","onBlur2","getPlaceholder2","onCloseDown","RowFormFileFieldView","file","target","files","viewValue","Helper","readFileAsDataURL","image","div","getImage","getDiv","updateSize","ns","getNaturalSize","innerText","length","onClearClick","componentDidMount","setTimeout","componentDidUpdate","prevProps","prevState","snapshot","RowFormImageFieldView","RowFormLinkFieldView","onClick","RowFormTextAreaFieldView","getCols","RowFormTextBoxFieldView","view","onCloseClick","RowFormTimeFieldView","onBlur","TableFormCheckBoxFieldView","TableFormComboBoxFieldView","TableFormDatePickerFieldView","TableFormLinkFieldView","TableFormTextBoxFieldView"],"mappings":"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","file":"viewer-jsx.700e9a5a4536e4cc98e2557b01cefeb0.js","sourcesContent":["class View extends ReactComponent {\n    getActionsForDropdownButton() {\n        return this.props.ctrl.model.data.actions.map(data => ({\n            name : Model.getName(data),\n            title: Model.getAttr(data, 'caption')\n        }));\n    }\n}\n","class ApplicationView extends ReactComponent {\n    renderActivePage() {\n        const ctrl = this.props.ctrl;\n        if (ctrl.activePage) {\n            return ApplicationView.renderPage(ctrl.activePage);\n        }\n    }\n    static renderPage(pageCtrl) {\n        return React.createElement(pageCtrl.getViewClass(), {\n            ctrl    : pageCtrl,\n            onCreate: pageCtrl.onViewCreate\n        });\n    }\n    renderModalPages() {\n        return this.props.ctrl.modalPages.map(pageCtrl =>\n            <Modal key={pageCtrl.model.getId()}>\n                {ApplicationView.renderPage(pageCtrl)}\n            </Modal>\n        );\n    }\n    /*render() {\n        console.log('ApplicationView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        return (\n            <div className={`ApplicationView ${model.data.theme}`}>\n                {this.renderActivePage()}\n                {this.renderModalPages()}\n            </div>\n        );\n    }*/\n}\n","class FormView extends View {\n    onActionsClick = async li => {\n        // console.log('FormView.onActionsClick:', li);\n        const ctrl = this.props.ctrl;\n        const name = li.dataset.action;\n        const result = await ctrl.onActionClick(name, ctrl.getActiveRow(true));\n        if (!result) alert(`no handler for action '${name}'`);\n    }\n}\n","class PageView extends View {\n    getTabs() {\n        const ctrl = this.props.ctrl;\n        return ctrl.forms.filter(form => form.model.getClassName() === 'TableForm').map(form => {\n            return {\n                name   : form.model.getName(),\n                title  : form.model.getCaption(),\n                content: PageView.renderForm(form)\n            };\n        });\n    }\n    static renderForm(formCtrl) {\n        return React.createElement(formCtrl.getViewClass(), {\n            key     : formCtrl.model.getName(),\n            ctrl    : formCtrl,\n            onCreate: formCtrl.onViewCreate,\n            updated : formCtrl.getUpdated()\n        });\n    }\n    renderRowForms() {\n        const ctrl = this.props.ctrl;\n        return ctrl.forms.filter(form => form.model.getClassName() === 'RowForm').map(form => {\n            return PageView.renderForm(form);\n        });\n    }\n    renderCaption() {\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        const key = model.getKey();\n        let caption = ctrl.getCaption();\n        if (ApplicationController.isInDebugMode()) {\n            caption += ` (${model.getId()})`;\n        }\n        if (key) {\n            caption += ` ${key}`;\n        }\n        if (ctrl.isChanged() || model.hasNew()) {\n            return [caption, ' ', <span key={'star'} className=\"star\">*</span>];\n        }\n        return caption;\n    }\n    onActionsClick = async li => {\n        // console.log('PageView.onActionsClick:', li);\n        const ctrl = this.props.ctrl;\n        const name = li.dataset.action;\n        const result = await ctrl.onActionClick(name);\n        if (!result) alert(`no handler for action '${name}'`);\n    }\n    renderToolbar() {\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        const width = 150;\n        return (\n            <div className={'PageView__toolbar'}>\n                {model.hasRowFormWithDefaultSqlDataSource() &&\n                    <Button\n                        key=\"saveAndClose\"\n                        width={width}\n                        title={model.getApp().getText().page.saveAndClose}\n                        onClick={ctrl.onSaveAndCloseClick}\n                        enabled={ctrl.isValid() && (model.hasNew() || (ctrl.isChanged()))}\n                    />\n                }\n                {model.isModal() &&\n                    <Button\n                        key=\"close\"\n                        width={width}\n                        title={model.getApp().getText().page.close}\n                        onClick={ctrl.onClosePageClick}\n                    />\n                }\n                {model.hasActions() &&\n                    <DropdownButton actions={this.getActionsForDropdownButton()} onClick={this.onActionsClick}/>\n                }\n            </div>\n        );\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n    render() {\n        console.log('PageView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        return (\n            <div className=\"PageView full frame\">\n                <div className=\"frame__content flex-rows\">\n                    <h3 className=\"PageView__caption\">{this.renderCaption()}</h3>\n                    {(model.hasRowFormWithDefaultDs() || model.hasActions()) && this.renderToolbar()}\n                    {model.hasRowForm() && this.renderRowForms()}\n                    {model.hasTableForm() &&\n                        <div className=\"PageView__table-forms flex-max frame\">\n                            <div className=\"frame__content\">\n                                <Tab tabs={this.getTabs()} classList={['Tab-blue', 'full']}/>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","class PageView2 extends PageView {\n    getAllTabs() {\n        const ctrl = this.props.ctrl;\n        return ctrl.forms.map(form => {\n            return {\n                name   : form.model.getName(),\n                title  : form.model.getCaption(),\n                content: PageView.renderForm(form)\n            };\n        });\n    }\n    render() {\n        console.log('PageView2.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        return (\n            <div className=\"PageView full frame\">\n                <div className=\"frame__content flex-rows\">\n                    <h3 className=\"PageView__caption\">{this.renderCaption()}</h3>\n                    {(model.hasRowFormWithDefaultDs() || model.hasActions()) && this.renderToolbar()}\n                    <div className=\"PageView__table-forms flex-max frame\">\n                        <div className=\"frame__content\">\n                            <Tab tabs={this.getAllTabs()} classList={['Tab-blue', 'full']}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","class MdiApplicationView extends ApplicationView {\n    getTabs() {\n        return this.props.ctrl.pages.map(pageCtrl => {\n            return {\n                name   : pageCtrl.model.getId(),\n                title  : pageCtrl.model.getCaption(),\n                content: React.createElement(pageCtrl.getViewClass(), {\n                    ctrl    : pageCtrl,\n                    onCreate: pageCtrl.onViewCreate\n                })\n            };\n        });\n    }\n    render() {\n        console.log('MdiApplicationView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        return (\n            <div className={`MdiApplicationView ${model.getAttr('theme')}`}>\n                <Menu items={ctrl.getMenuItemsProp()} onClick={ctrl.onMenuItemClick}/>\n                <Tab\n                    tabs={this.getTabs()}\n                    canClose={true}\n                    onTabClose={ctrl.onTabClose}\n                    onCreate={ctrl.onTabCreate}\n                    getActive={ctrl.getActivePageIndex}\n                    onTabMouseDown={ctrl.onTabMouseDown}\n                />\n                <Statusbar onCreate={ctrl.onStatusbarCreate}/>\n                {this.renderModalPages()}\n            </div>\n        );\n    }\n}\n","class SdiApplicationView extends ApplicationView {\n    render() {\n        console.log('SdiApplicationView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        return (\n            <div className={`SdiApplicationView__container ${model.getAttr('theme')}`}>\n                <header>\n                    <Menu items={ctrl.getMenuItemsProp()} onClick={ctrl.onMenuItemClick}/>\n                </header>\n                <main className=\"SdiApplicationView__main\">\n                    {this.renderActivePage()}\n                </main>\n                <footer>\n                    <Statusbar onCreate={ctrl.onStatusbarCreate}/>\n                </footer>\n                {this.renderModalPages()}\n            </div>\n        );\n    }\n}\n","class RowFormFieldView extends ReactComponent {\n    getClassList() {\n        const ctrl = this.props.ctrl;\n        return [\n            ...super.getClassList(),\n            ...(ctrl.isChanged()        ? ['changed'] : []),\n            ...(ctrl.getErrorMessage() !== null ? ['error']   : [])\n        ];\n    }\n}\n","class TableFormFieldView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.span = React.createRef();\n    }\n    getSpanOffsetWidth() {\n        return this.span.current.offsetWidth;\n    }\n}","class RowFormView extends FormView {\n    renderToolbar() {\n        // console.log('RowFormView.renderToolbar');\n        const ctrl = this.props.ctrl;\n        const width = '90px';\n        return (\n            <div className={'RowFormView__toolbar'}>\n                {ctrl.model.hasDefaultSqlDataSource() &&\n                    <Button\n                        key=\"edit\"\n                        title=\"Edit\"\n                        onClick={ctrl.onEditClick}\n                        visible={ctrl.getMode() === 'view'}\n                        width={width}\n                    />\n                }\n                {ctrl.model.hasDefaultSqlDataSource() &&\n                    <Button\n                        key=\"save\"\n                        title=\"Save\"\n                        enabled={(ctrl.state.changed || ctrl.state.hasNew) && ctrl.state.valid}\n                        onClick={ctrl.onSaveClick}\n                        visible={ctrl.getMode() === 'edit'}\n                        width={width}\n                    />\n                }\n                {ctrl.model.hasDefaultSqlDataSource() &&\n                    <Button\n                        key=\"cancel\"\n                        title=\"Finish\"\n                        visible={ctrl.getMode() === 'edit' && !ctrl.state.changed && ctrl.state.valid}\n                        onClick={ctrl.onCancelClick}\n                        width={width}\n                    />\n                }\n                {ctrl.model.hasDefaultSqlDataSource() &&\n                    <Button\n                        key=\"discard\"\n                        title=\"Discard\"\n                        enabled={ctrl.state.changed || !ctrl.isValid()}\n                        onClick={ctrl.onDiscardClick}\n                        visible={ctrl.getMode() === 'edit' && (ctrl.state.changed || !ctrl.state.valid)}\n                        width={width}\n                    />\n                }\n                {ctrl.model.hasDefaultSqlDataSource() &&\n                    <Button\n                        key=\"refresh\"\n                        title=\"Refresh\"\n                        enabled={!ctrl.state.changed && !ctrl.state.hasNew}\n                        onClick={ctrl.onRefreshClick}\n                        visible={ctrl.getMode() === 'view'}\n                        width={width}\n                    />\n                }\n                {ctrl.model.hasActions() &&\n                    <DropdownButton actions={this.getActionsForDropdownButton()} onClick={this.onActionsClick}/>\n                }\n            </div>\n        );\n    }\n    static renderLabel(fieldCtrl, key) {\n        const model = fieldCtrl.model;\n        return (\n            <div key={key} className=\"label\">\n                {model.getCaption()}:\n                {model.isNotNull() && <span style={{color: 'red'}}>*</span>}\n            </div>\n        );\n    }\n    static renderField(fieldCtrl, props = {}) {\n        // console.log('RowFormView.renderField', fieldCtrl.model.getClassName());\n        return React.createElement(fieldCtrl.getViewClass(), {\n            classList: ['field'],\n            ctrl: fieldCtrl,\n            ...props\n        });\n    }\n    static renderError(fieldCtrl, key) {\n        // console.log('RowFormView.renderError:', fieldCtrl.state);\n        return (\n            <div key={key} className=\"tooltip\">\n                <Tooltip position=\"left\" type=\"alert\" hidden={fieldCtrl.getErrorMessage() === null} tip={fieldCtrl.getErrorMessage()}/>\n            </div>\n        );\n    }\n    renderFields() {\n        // console.log('RowFormView.renderFields');\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"RowFormView__form-grid\">\n                {Object.keys(ctrl.fields).filter(name => ctrl.fields[name].model.isVisible()).map(name => {\n                    const fieldCtrl = ctrl.fields[name];\n                    return [\n                        RowFormView.renderLabel(fieldCtrl, `label.${fieldCtrl.model.getName()}`),\n                        RowFormView.renderField(fieldCtrl, {key: `field.${fieldCtrl.model.getName()}`}),\n                        RowFormView.renderError(fieldCtrl, `tooltip.${fieldCtrl.model.getName()}`)\n                    ];\n                })}\n            </div>\n        );\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        // console.log('RowFormView.shouldComponentUpdate', nextProps.updated - this.props.updated);\n        if (nextProps.updated - this.props.updated) return true;\n        return false;\n    }\n    render() {\n        console.log('RowFormView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"RowFormView flex-rows\">\n                {(ctrl.model.hasDefaultSqlDataSource() || ctrl.model.hasActions()) && this.renderToolbar()}\n                {this.renderFields()}\n            </div>\n        );\n    }\n}\n","class TableFormView extends FormView {\n    renderToolbar() {\n        const ctrl = this.props.ctrl;\n        const model = ctrl.model;\n        const dataSource = model.getDefaultDataSource();\n        const width = '90px';\n        return (\n            <div className={'TableFormView__toolbar'}>\n                {model.data.refreshButton === 'true' && dataSource.constructor.name === 'SqlDataSource' &&\n                    <Button\n                        key=\"refresh\"\n                        width={width}\n                        title={model.getApp().getText().form.refresh}\n                        onClick={ctrl.onRefreshClick}\n                        enabled={!ctrl.parent.model.hasNew()}\n                    />\n                }\n                {model.data.newRowMode !== 'disabled' &&\n                    <Button\n                        key=\"new\"\n                        width={width}\n                        title={model.getApp().getText().form.new}\n                        onClick={ctrl.onNewClick}\n                        enabled={!ctrl.parent.model.hasNew()}\n                    />\n                }\n                {model.data.deleteRowMode !== 'disabled' &&\n                    <Button\n                        key=\"delete\"\n                        width={width}\n                        title={model.getApp().getText().form.delete}\n                        onClick={ctrl.onDeleteClick}\n                        enabled={ctrl.isRowSelected()}\n                    />\n                }\n                {ctrl.model.hasActions() &&\n                    <DropdownButton\n                        actions={this.getActionsForDropdownButton()}\n                        onClick={this.onActionsClick}\n                        enabled={ctrl.isRowSelected()}\n                    />\n                }\n            </div>\n        );\n    }\n    renderPaging() {\n        const ctrl = this.props.ctrl;\n        const model = this.props.ctrl.model;\n        const dataSource = model.getDefaultDataSource();\n        const text = model.getApp().getText();\n        return (\n            <div className=\"paging\">\n                <div className=\"paging__countBlock\">\n                    <span className=\"count\">{dataSource.getRowsLength()} {dataSource.getLimit() && `of ${dataSource.getCount()}`}</span>\n                </div>\n                {dataSource.getLimit() &&\n                    <div className=\"paging__gotoBlock\">\n                        <Button enabled={ctrl.canPrev()} onClick={ctrl.onPreviousClick} width=\"100px\">{text.form.previous}</Button>\n                        <ComboBox\n                            value={ctrl.model.getDefaultDataSource().getFrame().toString()}\n                            onChange={ctrl.onFrameChanged}\n                            items={new Array(dataSource.getFramesCount()).fill().map((val, i) =>\n                            ({value: (i+1).toString(), title: (i+1).toString()})\n                        )}/>\n                        <Button enabled={ctrl.canNext()} onClick={ctrl.onNextClick} width=\"100px\">{text.form.next}</Button>\n                    </div>\n                }\n            </div>\n        );\n    }\n    renderGridCellView = (row, column, onCreate, onUnmount) => {\n        // console.log('TableFormView.renderGridCellView');\n        const ctrl = this.props.ctrl.fields[column.name];\n        // console.log(column.name, ctrl.constructor.name);\n        /*if ([\n            'TextBoxField',\n            'DatePickerField',\n            'ComboBoxField',\n            'CheckBoxField',\n            'LinkField',\n            'TimeField',\n        ].includes(ctrl.model.getClassName())) {\n            return React.createElement(ctrl.getViewClass(), {row, column, onCreate, onUnmount, ctrl});\n        }\n        return null;*/\n        return React.createElement(ctrl.getViewClass(), {row, column, onCreate, onUnmount, ctrl});\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        // console.log('TableFormView.shouldComponentUpdate', nextProps.updated - this.props.updated);\n        if (nextProps.updated - this.props.updated) return true;\n        return false;\n    }\n    getGridColumns() {\n        const ctrl = this.props.ctrl;\n        return Object.keys(ctrl.fields).filter(name => ctrl.fields[name].model.isVisible()).map(name => {\n            const field = ctrl.fields[name];\n            return {\n                name : field.model.getName(),\n                title: field.model.getCaption(),\n                width: field.model.getWidth()\n            };\n        });\n    }\n    getRows() {\n        const ctrl = this.props.ctrl;\n        return ctrl.model.getDefaultDataSource().getRows();\n    }\n    render() {\n        console.log('TableFormView.render', this.props.ctrl.model.getFullName());\n        const ctrl = this.props.ctrl;\n        const dataSource = ctrl.model.getDefaultDataSource();\n        return (\n            <div className=\"TableFormView full flex-rows\">\n                {this.renderToolbar()}\n                <Grid\n                    classList={['flex-max']}\n                    name={ctrl.model.getFullName()}\n                    columns={this.getGridColumns()}\n                    rows={this.getRows()}\n                    getRowKey={row => ctrl.model.getDefaultDataSource().getRowKey(row)}\n                    onDoubleClick={ctrl.onGridCellDblClick}\n                    onSelectionChange={ctrl.onSelectionChange}\n                    getActiveRowIndex={ctrl.getActiveRowIndex}\n                    renderGridCellView={this.renderGridCellView}\n                    updated={ctrl.getUpdated()}\n                />\n                {dataSource.constructor.name === 'SqlDataSource' && this.renderPaging()}\n            </div>\n        );\n    }\n}\n","class RowFormCheckBoxFieldView extends RowFormFieldView {\n    render() {\n        // console.log('RowFormCheckBoxFieldView.render');\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()}>\n            <CheckBox\n                onCreate={ctrl.onViewCreate}\n                checked={ctrl.getValueForView()}\n                readOnly={!ctrl.isEditable()}\n                onChange={ctrl.onChange}\n            />\n        </div>;\n    }\n}\n","class RowFormComboBoxFieldView extends RowFormFieldView {\n    render() {\n        const ctrl = this.props.ctrl;\n        return (\n            <div className={this.getClassName()}>\n                <ComboBox\n                    onCreate={ctrl.onViewCreate}\n                    nullable={true}\n                    value={ctrl.getValueForView()}\n                    readOnly={!ctrl.isEditable()}\n                    onChange={ctrl.onChange}\n                    items={ctrl.getItems()}\n                    placeholder={ctrl.getPlaceholder()}\n                />\n            </div>\n        );\n    }\n}","class RowFormDatePickerFieldView extends RowFormFieldView {\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()}>\n            <DropdownDatePicker\n                onCreate={ctrl.onViewCreate}\n                value={ctrl.getValueForView()}\n                readOnly={!ctrl.isEditable()}\n                onChange={ctrl.onChange}\n                placeholder={ctrl.getPlaceholder()}\n                format={ctrl.model.getFormat()}\n                oldDates={this.props.oldDates}\n                getMinDate={this.props.getMinDate}\n            />\n        </div>;\n    }\n}\n","class RowFormDateTimeFieldView extends RowFormFieldView {\n    onCloseDown = async e => {\n        console.log('RowFormDateTimeFieldView.onCloseDown');\n        const ctrl = this.props.ctrl;\n        ctrl.view2.setState({value: ''}, () => {\n            ctrl.onChange2(null);\n        });\n    }\n    isCloseVisible() {\n        if (this.props.readOnly) return false;\n        const ctrl = this.props.ctrl;\n        if (!ctrl.view2) {\n            return this.props.value !== undefined;\n        }\n        return ctrl.view2.state.value !== '';\n    }\n    getClassName() {\n        return `${super.getClassName()} ${this.props.ctrl.state.value ? 'datetime' : 'date'}`;\n    }\n    render() {\n        // console.log('RowFormDateTimeFieldView.render');\n        const ctrl = this.props.ctrl;\n        return (\n            <div className={this.getClassName()} style={ctrl.renderViewStyle(ctrl.getRow())}>\n                <DropdownDatePicker\n                    onCreate={ctrl.onViewCreate}\n                    value={ctrl.getValueForView()}\n                    readOnly={!ctrl.isEditable()}\n                    onChange={ctrl.onChange}\n                    placeholder={ctrl.getPlaceholder()}\n                    format={ctrl.model.getFormat()}\n                    oldDates={this.props.oldDates}\n                    getMinDate={this.props.getMinDate}\n                />\n                <div className={'time'}>\n                    <TimeBox\n                        onCreate={ctrl.onView2Create}\n                        readOnly={!ctrl.isEditable()}\n                        value={ctrl.getValueForTime()}\n                        onChange={ctrl.onChange2}\n                        onBlur={ctrl.onBlur2}\n                        placeholder={ctrl.getPlaceholder2()}\n                    />\n                    <div className={`close ${this.isCloseVisible() ? 'visible' : ''}`} onMouseDown={this.onCloseDown}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n                            <line x1=\"2\" y1=\"2\" x2=\"8\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                                  strokeMiterlimit=\"10\"></line>\n                            <line x1=\"8\" y1=\"2\" x2=\"2\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                                  strokeMiterlimit=\"10\"></line>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","class RowFormFileFieldView extends RowFormFieldView {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n        this.div   = React.createRef();\n    }\n    getImage() {\n        return this.image.current;\n    }\n    getDiv() {\n        return this.div.current;\n    }\n    updateSize() {\n        if (this.getImage()) {\n            const ns = this.getImage().getNaturalSize();\n            this.getDiv().innerText = `${ns[0]}×${ns[1]}`;\n        }\n    }\n    onClearClick = e => {\n        this.props.ctrl.onChange('');\n    }\n    onChange = async e => {\n        const file = e.target.files[0];\n        const viewValue = await Helper.readFileAsDataURL(file);\n        // console.log('viewValue:', viewValue);\n        this.props.ctrl.onChange(viewValue);\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        const value = ctrl.getValueForView();\n        return <div className={this.getClassName()} style={ctrl.renderViewStyle(ctrl.getRow())}>\n            {!!value &&\n                <div>\n                    <Image ref={this.image} src={value}/>\n                    <span className=\"size\" ref={this.div}></span>\n                    <span className=\"length\">{value.length}</span>\n                </div>\n            }\n            <input type=\"file\" onChange={this.onChange} disabled={!ctrl.isEditable()}/>\n            {!!value && <Button onClick={this.onClearClick} enabled={ctrl.isEditable()}>Clear</Button>}\n        </div>;\n    }\n    componentDidMount() {\n        // console.log('RowFormFileFieldView.componentDidMount', this.props.ctrl.model.getFullName());\n        setTimeout(() => this.updateSize(), 0);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log('RowFormFileFieldView.componentDidUpdate', this.props.ctrl.model.getFullName(), snapshot);\n        setTimeout(() => this.updateSize(), 0);\n    }\n}\n","class RowFormImageFieldView extends RowFormFieldView {\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()} style={ctrl.renderViewStyle(ctrl.getRow())}>\n            <Image src={ctrl.getValueForView()}/>\n        </div>;\n    }\n}\n","class RowFormLinkFieldView extends RowFormFieldView {\n    render() {\n        const ctrl = this.props.ctrl;\n        return (\n            <div className={this.getClassName()}>\n                <a href=\"#\" onClick={ctrl.onClick}>{ctrl.getValueForView()}</a>\n            </div>\n        );\n    }\n}\n","class RowFormTextAreaFieldView extends RowFormFieldView {\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()}>\n            <TextArea\n                onCreate={ctrl.onViewCreate}\n                value={ctrl.getValueForView()}\n                readOnly={!ctrl.isEditable()}\n                onChange={ctrl.onChange}\n                placeholder={ctrl.getPlaceholder()}\n                rows={ctrl.model.getRows()}\n                cols={ctrl.model.getCols()}\n            />\n        </div>;\n    }\n}\n","class RowFormTextBoxFieldView extends RowFormFieldView {\n    onCloseClick = async e => {\n        console.log('RowFormTextBoxFieldView.onCloseClick');\n        const ctrl = this.props.ctrl;\n        ctrl.view.state.value = '';\n        ctrl.view.setState({value: ''});\n        ctrl.onChange('');\n    }\n    isCloseVisible() {\n        // console.log('RowFormTextBoxFieldView.isCloseVisible', this.props.value);\n        const ctrl = this.props.ctrl;\n        if (!ctrl.isEditable()) return false;\n        if (!ctrl.view) {\n            return this.props.value !== undefined;\n        }\n        // console.log('ctrl.view.state.value:', ctrl.view.state.value);\n        return ctrl.view.state.value !== '';\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()}>\n            <TextBox\n                onCreate={ctrl.onViewCreate}\n                value={ctrl.getValueForView()}\n                readOnly={!ctrl.isEditable()}\n                onChange={ctrl.onChange}\n                placeholder={ctrl.getPlaceholder()}\n            />\n            <div className={`close ${this.isCloseVisible() ? 'visible' : ''}`} onClick={this.onCloseClick}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n                    <line x1=\"2\" y1=\"2\" x2=\"8\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                          strokeMiterlimit=\"10\"></line>\n                    <line x1=\"8\" y1=\"2\" x2=\"2\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                          strokeMiterlimit=\"10\"></line>\n                </svg>\n            </div>\n        </div>;\n    }\n}\n","class RowFormTimeFieldView extends RowFormFieldView {\n    onCloseClick = async e => {\n        console.log('RowFormTimeFieldView.onCloseClick');\n        /*const ctrl = this.props.ctrl;\n        ctrl.view.state.value = '';\n        ctrl.view.setState({value: ''});\n        ctrl.onChange(null);*/\n    }\n    isCloseVisible() {\n        // console.log('RowFormTimeFieldView.isCloseVisible', this.props.value);\n        if (this.props.readOnly) return false;\n        const ctrl = this.props.ctrl;\n        if (!ctrl.view) {\n            return this.props.value !== undefined;\n        }\n        // console.log('ctrl.view.state.value:', ctrl.view.state.value);\n        return ctrl.view.state.value !== '';\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getClassName()}>\n            <TimeBox\n                onCreate={ctrl.onViewCreate}\n                value={ctrl.getValueForView()}\n                readOnly={!ctrl.isEditable()}\n                onChange={ctrl.onChange}\n                onBlur={ctrl.onBlur}\n                placeholder={ctrl.getPlaceholder()}\n            />\n            <div className={`close ${this.isCloseVisible() ? 'visible' : ''}`} onClick={this.onCloseClick}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n                    <line x1=\"2\" y1=\"2\" x2=\"8\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                          strokeMiterlimit=\"10\"></line>\n                    <line x1=\"8\" y1=\"2\" x2=\"2\" y2=\"8\" stroke=\"#aaa\" strokeWidth=\"1.1\" strokeLinecap=\"round\"\n                          strokeMiterlimit=\"10\"></line>\n                </svg>\n            </div>\n        </div>\n    }\n}\n","class TableFormCheckBoxFieldView extends TableFormFieldView {\n    render() {\n        const row = this.props.row;\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"TableFormCheckBoxFieldView\" style={ctrl.renderViewStyle(row)}>\n                <CheckBox\n                    checked={ctrl.getValueForView(row)}\n                    readOnly={true}\n                    // disabled={true}\n                />\n            </div>\n        );\n    }\n}\n","class TableFormComboBoxFieldView extends TableFormFieldView {\n    render() {\n        const row = this.props.row;\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"TableFormComboBoxFieldView\" style={ctrl.renderViewStyle(row)}>\n                <span ref={this.span}>{ctrl.getValueForView(row)}</span>\n            </div>\n        );\n    }\n}","class TableFormDatePickerFieldView extends TableFormFieldView {\n    render() {\n        const row = this.props.row;\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"TableFormDatePickerFieldView\" style={ctrl.renderViewStyle(row)}>\n                <span ref={this.span}>{ctrl.getValueForView(row)}</span>\n            </div>\n        );\n    }\n}\n","class TableFormLinkFieldView extends TableFormFieldView {\n    render() {\n        const row = this.props.row;\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"TableFormLinkFieldView\" style={ctrl.renderViewStyle(row)}>\n                <a href=\"#\" onClick={ctrl.onClick}>{ctrl.getValueForView(row)}</a>\n            </div>\n        );\n    }\n}\n","class TableFormTextBoxFieldView extends TableFormFieldView {\n    render() {\n        const row = this.props.row;\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"TableFormTextBoxFieldView\" style={ctrl.renderViewStyle(row)}>\n                <span ref={this.span}>{ctrl.getValueForView(row)}</span>\n            </div>\n        );\n    }\n}\n"]}