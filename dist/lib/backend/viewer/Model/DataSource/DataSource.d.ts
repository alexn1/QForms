import Result = require("../../../Result");
import Model = require('../Model');
import Context = require('../../../Context');
import Application = require('../Application/Application');
import Database = require('../Database/Database');
import Form = require('../Form/Form');
declare class DataSource extends Model {
    keyColumns: any;
    rows: any[];
    constructor(data: any, parent: any);
    getDirPath(): any;
    getJsonFilePath(): any;
    init(context: any): Promise<void>;
    getKeyColumns(): string[];
    prepareRows(context: Context, rows: any[]): void;
    checkColumns(row: any): void;
    encodeRows(rows: any): void;
    encodeRow(row: any): void;
    getApp(): Application;
    getKeyValuesFromKey(key: any): {};
    getKeyFromValues(values: any): string;
    getFullName(): string;
    static keyToParams(key: any, paramName?: string): {};
    calcNewKeyValues(originalKeyValues: any, values: any): any;
    calcNewKey(key: any, values: any): string;
    fillAttributes(response: any): void;
    fill(context: Context): Promise<any>;
    getRows(): Promise<any[]>;
    isOnForm(): boolean;
    isDefaultOnForm(): boolean;
    isDefaultOnRowForm(): boolean;
    isDefaultOnTableForm(): boolean;
    getDatabase(): Database;
    insert(context: Context, _values?: any): Promise<Result>;
    update(context: Context): Promise<Result>;
    delete(context: Context): Promise<Result>;
    getForm(): Form;
}
export = DataSource;
