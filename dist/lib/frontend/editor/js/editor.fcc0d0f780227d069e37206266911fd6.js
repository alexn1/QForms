class Editor{constructor(e,t=null){if(!e)throw new Error("no data");this.data=e,this.parent=t}init(){}getClassName(){return this.data["@class"]}getName(){return this.getAttr("name")}getFullName(e="."){let t;return t=this.form?""+this.form.page.getName()+e+this.form.getName()+e+this.getName():this.page?""+this.page.getName()+e+this.getName():this.getName(),t}async setValue(e,t){throw new Error(this.constructor.name+".setValue not implemented")}getAttr(e){return this.data["@attributes"][e]}getAttributes(){return this.data["@attributes"]}setAttr(e,t){this.data["@attributes"][e]=t}createDataSource(e){const t=new DataSourceEditor(e,this);return t.init(),this.dataSources.push(t),t}removeDataSource(e){e=this.dataSources.indexOf(e);if(-1===e)throw new Error("no such dataSource");this.dataSources.splice(e,1)}createAction(e){const t=new ActionEditor(e,this);return t.init(),this.actions.push(t),t}removeAction(e){e=this.actions.indexOf(e);if(-1===e)throw new Error("no such action");this.actions.splice(e,1)}}class ActionEditor extends Editor{getParams(){return this.parent instanceof FormEditor?{pageFileName:this.parent.page.pageLink.getAttr("fileName"),form:this.parent.getAttr("name"),action:this.getAttr("name")}:this.parent instanceof PageEditor?{pageFileName:this.parent.pageLink.getAttr("fileName"),action:this.getAttr("name")}:{action:this.getAttr("name")}}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Action",action:"save",params:{...this.getParams(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Action",action:"delete",params:{...this.getParams()}})}async delete(){console.log("ActionEditor.delete",this.getName()),await this.deleteData(),this.parent.removeAction(this)}moveUp(){return FrontHostApp.doHttpRequest({controller:"Action",action:"moveUp",params:{...this.getParams()}})}moveDown(){return FrontHostApp.doHttpRequest({controller:"Action",action:"moveDown",params:{...this.getParams()}})}}class ApplicationEditor extends Editor{constructor(e){super(e),this.databases=[],this.dataSources=[],this.actions=[],this.pageLinks=[]}init(){console.log("ApplicationEditor.init",this.data);for(const e of this.data.databases)this.createDatabase(e);for(const t of this.data.dataSources)this.createDataSource(t);for(const a of this.data.actions)this.createAction(a);for(const o of this.data.pageLinks)this.createPageLink(o)}createDatabase(e){const t=new DatabaseEditor(e,this);return t.init(),this.databases.push(t),t}createPageLink(e){const t=new PageLinkEditor(e,this);return t.init(),this.pageLinks.push(t),t}removeDatabase(e){console.log("ApplicationEditor.removeDatabase",e.getName());e=this.databases.indexOf(e);if(-1===e)throw new Error("no such database");this.databases.splice(e,1)}removePageLink(e){console.log("ApplicationEditor.removePageLink",e.getName());e=this.pageLinks.indexOf(e);if(-1===e)throw new Error("no such pageLink");this.pageLinks.splice(e,1)}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Application",action:"save",params:{attr:e,value:t}});return this.setAttr(e,t),a}async newPageAndPageLinkData(e){return e.menu="true"===e.startup?"Pages":"",FrontHostApp.doHttpRequest({controller:"Page",action:"_new",params:e})}async newPage(e){var{page:t,pageLink:e}=await this.newPageAndPageLinkData(e),e=this.createPageLink(e);return new PageEditor(t,e)}async newDatabase(e){e=await FrontHostApp.doHttpRequest({controller:"Database",action:"_new",params:e});return this.createDatabase(e)}async getView(e){return FrontHostApp.doHttpRequest({controller:"Application",action:"getView",params:{app:this.getName(),view:e}})}async saveView(e,t){return FrontHostApp.doHttpRequest({controller:"Application",action:"saveView",params:{app:this.getName(),view:t,text:e}})}async saveController(e){return FrontHostApp.doHttpRequest({controller:"Application",action:"saveController",params:{app:this.getName(),text:e}})}async createView(){return FrontHostApp.doHttpRequest({controller:"Application",action:"createView",params:{app:this.getName()}})}async createController(){return FrontHostApp.doHttpRequest({controller:"Application",action:"createController",params:{app:this.getName()}})}async createModelBackJs(){return FrontHostApp.doHttpRequest({controller:"Application",action:"createModelBackJs",params:{app:this.getName()}})}async newDataSource(e){e=await FrontHostApp.doHttpRequest({controller:"DataSource",action:"_new",params:e});return this.createDataSource(e)}async newAction(e){e=await FrontHostApp.doHttpRequest({controller:"Action",action:"_new",params:e});return this.createAction(e)}}class ColumnEditor extends Editor{constructor(e,t){super(e,t),this.table=t}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Column",action:"save",params:{database:this.table.database.getName(),table:this.table.getName(),column:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Column",action:"delete",params:{database:this.table.database.getName(),table:this.table.getName(),column:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeColumn(this)}}class DataSourceEditor extends Editor{constructor(e,t){super(e,t),this.keyColumns=[]}init(){for(const e of this.data.keyColumns)this.createKeyColumn(e)}createKeyColumn(e){const t=new KeyColumnEditor(e,this);return t.init(),this.keyColumns.push(t),t}removeKeyColumn(e){console.log("DatabaseEditor.removeParam",e.getName());e=this.keyColumns.indexOf(e);if(-1===e)throw new Error("no such keyColumn");this.keyColumns.splice(e,1)}static async create(e,t){if(e instanceof FormEditor){const a=e;t.page=a.page.pageLink.getFileName(),t.form=a.getName()}if(e instanceof PageEditor){const o=e;t.page=o.pageLink.getFileName()}return FrontHostApp.doHttpRequest({controller:"DataSource",action:"_new",params:t})}async setValue(e,t){const a={controller:"DataSource",action:"save",params:{dataSource:this.getName(),attr:e,value:t}};this.parent instanceof PageEditor&&(a.params.pageFileName=this.parent.pageLink.getFileName()),this.parent instanceof FormEditor&&(a.params.form=this.parent.getName(),a.params.pageFileName=this.parent.page.pageLink.getFileName());var o=await FrontHostApp.doHttpRequest(a);return this.setAttr(e,t),o}async deleteData(){const e={controller:"DataSource",action:"delete",params:{dataSource:this.getName()}};this.parent instanceof PageEditor&&(e.params.page=this.parent.pageLink.getFileName()),this.parent instanceof FormEditor&&(e.params.form=this.parent.getName(),e.params.page=this.parent.page.pageLink.getFileName()),await FrontHostApp.doHttpRequest(e)}async createModelBackJs(){return FrontHostApp.doHttpRequest({controller:"DataSource",action:"createModelBackJs",params:{...this.parent instanceof PageEditor?{page:this.parent.getName(),pageFileName:this.parent.pageLink.getFileName()}:{},...this.parent instanceof FormEditor?{form:this.parent.getName(),page:this.parent.page.getName(),pageFileName:this.parent.page.pageLink.getFileName()}:{},dataSource:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeDataSource(this)}async moveUp(){const e={controller:"DataSource",action:"moveUp",params:{dataSource:this.getName()}};return this.parent instanceof PageEditor&&(e.params.page=this.parent.pageLink.getFileName()),this.parent instanceof FormEditor&&(e.params.form=this.parent.getName(),e.params.page=this.parent.page.pageLink.getFileName()),FrontHostApp.doHttpRequest(e)}async moveDown(){const e={controller:"DataSource",action:"moveDown",params:{dataSource:this.getName()}};return this.parent instanceof PageEditor&&(e.params.page=this.parent.pageLink.getFileName()),this.parent instanceof FormEditor&&(e.params.form=this.parent.getName(),e.params.page=this.parent.page.pageLink.getFileName()),FrontHostApp.doHttpRequest(e)}async newKeyColumnData(e){const t={controller:"KeyColumn",action:"_new",params:{dataSource:this.getName(),class:"KeyColumn",name:e}};return this.parent instanceof FormEditor&&(t.params.page=this.parent.page.pageLink.getFileName(),t.params.form=this.parent.getName()),this.parent instanceof PageEditor&&(t.params.page=this.parent.pageLink.getFileName()),FrontHostApp.doHttpRequest(t)}async newKeyColumn(e){e=await this.newKeyColumnData(e);return this.createKeyColumn(e)}async getView(e){const t={controller:"DataSource",action:"getView",params:{dataSource:this instanceof DataSourceEditor?this.getName():void 0,view:e}};return this.parent instanceof PageEditor&&(t.params.pageFileName=this instanceof DataSourceEditor?this.parent.pageLink.getFileName():void 0),this.parent instanceof FormEditor&&(t.params.pageFileName=this instanceof DataSourceEditor?this.parent.page.pageLink.getFileName():void 0,t.params.form=this instanceof DataSourceEditor?this.parent.getName():void 0),FrontHostApp.doHttpRequest(t)}async saveController(e){const t={controller:"DataSource",action:"saveController",params:{dataSource:this.getName(),text:e}};return this.parent instanceof PageEditor&&(t.params.pageFileName=this.parent.pageLink.getFileName()),this.parent instanceof FormEditor&&(t.params.pageFileName=this.parent.page.pageLink.getFileName(),t.params.form=this.parent.getName()),FrontHostApp.doHttpRequest(t)}async createController(){var e={controller:"DataSource",action:"createController",params:{page:this.parent.page.getName(),pageFileName:this.parent.page.pageLink.getFileName(),form:this.parent.getName(),dataSource:this.getName()}};return FrontHostApp.doHttpRequest(e)}getFullName(){return this.parent instanceof FormEditor?[this.parent.parent.getName(),this.parent.getName(),this.getName()].join("."):this.parent instanceof PageEditor?[this.parent.getName(),this.getName()].join("."):this.parent instanceof ApplicationEditor?this.getName():void 0}}class DatabaseEditor extends Editor{constructor(e,t){super(e,t),this.params=[],this.tables=[]}init(){for(const e of this.data.params)this.createParam(e);for(const t of this.data.tables)this.createTable(t)}createParam(e){const t=new ParamEditor(e,this);return t.init(),this.params.push(t),t}createTable(e){const t=new TableEditor(e,this);return t.init(),this.tables.push(t),t}removeParam(e){console.log("DatabaseEditor.removeParam",e.getName());e=this.params.indexOf(e);if(-1===e)throw new Error("no such param");this.params.splice(e,1)}removeTable(e){console.log("DatabaseEditor.removeTable",e.getName());e=this.tables.indexOf(e);if(-1===e)throw new Error("no such table");this.tables.splice(e,1)}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Database",action:"save",params:{database:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){return FrontHostApp.doHttpRequest({controller:"Database",action:"delete",params:{database:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeDatabase(this)}async newParam(e){e=await FrontHostApp.doHttpRequest({controller:"Param",action:"_new",params:{database:this.getName(),class:"Param",name:e}});return this.createParam(e)}async newTable(e){if(!e.name)throw new Error("newTable: no name");e=await FrontHostApp.doHttpRequest({controller:"Table",action:"_new",params:{database:this.getName(),class:"Table",name:e.name,columns:e.columns}});return this.createTable(e)}async getView(e){return console.log("DatabaseEditor.getView",e),FrontHostApp.doHttpRequest({controller:"Database",action:"getView",params:{view:e,database:void 0!==this.data?this.getName():null}})}async getTableInfo(e){return FrontHostApp.doHttpRequest({controller:"Database",action:"getTableInfo",params:{database:void 0!==this.data?this.getName():null,table:e}})}moveUp(){return FrontHostApp.doHttpRequest({controller:"Database",action:"moveUp",params:{database:this.getName()}})}moveDown(){return FrontHostApp.doHttpRequest({controller:"Database",action:"moveDown",params:{database:this.getName()}})}}class FieldEditor extends Editor{constructor(e,t){super(e,t),this.form=t}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Field",action:"save",params:{pageFileName:this.form.page.pageLink.getFileName(),form:this.form.getName(),field:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Field",action:"delete",params:{pageFileName:this.form.page.pageLink.getFileName(),form:this.form.getName(),field:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeField(this)}async getView(e){return FrontHostApp.doHttpRequest({controller:"Field",action:"getView",params:{view:e,page:void 0!==this.data?this.form.page.getName():null,form:void 0!==this.data?this.form.getName():null,field:void 0!==this.data?this.getName():null}})}async saveView(e,t){return FrontHostApp.doHttpRequest({controller:"Field",action:"saveView",params:{page:this.form.page.getName(),form:this.form.getName(),field:this.getName(),view:t,text:e}})}async saveController(e){return FrontHostApp.doHttpRequest({controller:"Field",action:"saveController",params:{page:this.form.page.getName(),form:this.form.getName(),field:this.getName(),text:e}})}async createView(){return FrontHostApp.doHttpRequest({controller:"Field",action:"createView",params:{page:this.form.page.getName(),form:this.form.getName(),field:this.getName(),class:this.getClassName()}})}async createStyle(){return FrontHostApp.doHttpRequest({controller:"Field",action:"createStyle",params:{page:this.form.page.getName(),form:this.form.getName(),field:this.getName(),class:this.getClassName()}})}async createController(){return FrontHostApp.doHttpRequest({controller:"Field",action:"createController",params:{page:this.form.page.getName(),form:this.form.getName(),field:this.getName(),class:this.getClassName()}})}async changeClass(e){e.page=this.form.page.getName(),e.form=this.form.getName(),e.field=this.getName();e=await FrontHostApp.doHttpRequest({controller:"Field",action:"changeClass",params:e});return this.data=e}moveUp(){return FrontHostApp.doHttpRequest({controller:"Field",action:"moveUp",params:{pageFileName:this.form.page.pageLink.getFileName(),form:this.form.getName(),field:this.getName()}})}moveDown(){return FrontHostApp.doHttpRequest({controller:"Field",action:"moveDown",params:{pageFileName:this.form.page.pageLink.getFileName(),form:this.form.getName(),field:this.getName()}})}}class FormEditor extends Editor{constructor(e,t){super(e,t),this.page=t,this.dataSources=[],this.fields=[],this.actions=[]}init(){for(const e of this.data.dataSources)this.createDataSource(e);for(const t of this.data.actions)this.createAction(t);for(const a of this.data.fields)this.createField(a)}createField(e){const t=new FieldEditor(e,this);return t.init(),this.fields.push(t),t}removeField(e){console.log("FormEditor.removeField",e.getName());e=this.fields.indexOf(e);if(-1===e)throw new Error("no such field");this.fields.splice(e,1)}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Form",action:"save",params:{pageFileName:this.page.pageLink.getFileName(),form:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Form",action:"delete",params:{pageFileName:this.page.pageLink.getFileName(),form:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeForm(this)}moveUp(){var e={controller:"Form",action:"moveUp",params:{pageFileName:this.page.pageLink.getFileName(),form:this.getName()}};return FrontHostApp.doHttpRequest(e)}moveDown(){var e={controller:"Form",action:"moveDown",params:{pageFileName:this.page.pageLink.getFileName(),form:this.getName()}};return FrontHostApp.doHttpRequest(e)}async newField(e){e.pageFileName=this.page.pageLink.getFileName(),e.form=this.getName();e=await FrontHostApp.doHttpRequest({controller:"Field",action:"_new",params:e});return this.createField(e)}async newAction(e){e.pageFileName=this.page.pageLink.getFileName(),e.form=this.getName();e=await FrontHostApp.doHttpRequest({controller:"Action",action:"_new",params:e});return this.createAction(e)}async newDataSource(e){e.page=this.page.pageLink.getFileName(),e.form=this.getName();e=await FrontHostApp.doHttpRequest({controller:"DataSource",action:"_new",params:e});return this.createDataSource(e)}async getView(e){return FrontHostApp.doHttpRequest({controller:"Form",action:"getView",params:{view:e,page:void 0!==this.data?this.page.getName():null,form:void 0!==this.data?this.getName():null}})}async saveView(e,t){return FrontHostApp.doHttpRequest({controller:"Form",action:"saveView",params:{page:this.page.getName(),form:this.getName(),view:t,text:e}})}async saveController(e){return FrontHostApp.doHttpRequest({controller:"Form",action:"saveController",params:{page:this.page.getName(),form:this.getName(),text:e}})}async createModelBackJs(){return FrontHostApp.doHttpRequest({controller:"Form",action:"createModelBackJs",params:{page:this.page.getName(),form:this.getName()}})}async createView(){return FrontHostApp.doHttpRequest({controller:"Form",action:"createView",params:{page:this.page.getName(),form:this.getName(),class:this.getClassName()}})}async createController(){return FrontHostApp.doHttpRequest({controller:"Form",action:"createController",params:{page:this.page.getName(),form:this.getName(),class:this.getClassName()}})}async createStyle(){return FrontHostApp.doHttpRequest({controller:"Form",action:"createStyle",params:{page:this.page.getName(),form:this.getName(),class:this.getClassName()}})}}class KeyColumnEditor extends Editor{constructor(e,t){super(e,t),this.dataSource=t}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"KeyColumn",action:"save",params:{form:this.dataSource.parent.getName(),pageFileName:this.dataSource.parent.page.pageLink.getFileName(),dataSource:this.dataSource.getName(),keyColumn:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"KeyColumn",action:"delete",params:{...this.getPage()?{page:this.getPage().pageLink.getFileName()}:{},...this.getForm()?{form:this.getForm().getName()}:{},dataSource:this.dataSource.getName(),keyColumn:this.getName()}})}getPage(){return"FormEditor"===this.dataSource.parent.constructor.name?this.dataSource.parent.page:"PageEditor"===this.dataSource.parent.constructor.name?this.dataSource.parent:null}getForm(){return"FormEditor"===this.dataSource.parent.constructor.name?this.dataSource.parent:null}async delete(){await this.deleteData(),this.parent.removeKeyColumn(this)}}class PageEditor extends Editor{constructor(e,t){super(e),this.pageLink=t,this.dataSources=[],this.actions=[],this.forms=[]}init(){for(const e of this.data.dataSources)this.createDataSource(e);for(const t of this.data.actions)this.createAction(t);for(const a of this.data.forms)this.createForm(a)}createForm(e){const t=new FormEditor(e,this);return t.init(),this.forms.push(t),t}removeForm(e){console.log("Page.removeForm",e.getName());e=this.forms.indexOf(e);if(-1===e)throw new Error("no such form");this.forms.splice(e,1)}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Page",action:"save",params:{fileName:this.pageLink.getFileName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Page",action:"delete",params:{page:this.getName()}})}async delete(){console.log("PageEditor.delete",this.getName()),await this.deleteData(),this.pageLink.remove()}async newForm(e){e.pageFileName=this.pageLink.getFileName();e=await FrontHostApp.doHttpRequest({controller:"Form",action:"_new",params:e});return this.createForm(e)}async getView(e){return FrontHostApp.doHttpRequest({controller:"Page",action:"getView",params:{view:e,page:void 0!==this.data?this.getName():null}})}async saveView(e,t){return FrontHostApp.doHttpRequest({controller:"Page",action:"saveView",params:{page:this.getName(),view:t,text:e}})}async saveController(e){return FrontHostApp.doHttpRequest({controller:"Page",action:"saveController",params:{page:this.getName(),text:e}})}async createView(){return FrontHostApp.doHttpRequest({controller:"Page",action:"createView",params:{page:this.getName()}})}async createController(){return FrontHostApp.doHttpRequest({controller:"Page",action:"createController",params:{page:this.getName()}})}async createStyle(){return FrontHostApp.doHttpRequest({controller:"Page",action:"createStyle",params:{page:this.getName()}})}async createModelBackJs(){return FrontHostApp.doHttpRequest({controller:"Page",action:"createModelBackJs",params:{page:this.getName()}})}async newAction(e){e.pageFileName=this.pageLink.getFileName();e=await FrontHostApp.doHttpRequest({controller:"Action",action:"_new",params:e});return this.createAction(e)}}class PageLinkEditor extends Editor{constructor(e,t){super(e,t),this.application=t}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"PageLink",action:"save",params:{pageLink:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async moveUp(){return FrontHostApp.doHttpRequest({controller:"PageLink",action:"moveUp",params:{page:this.getName()}})}async moveDown(){return FrontHostApp.doHttpRequest({controller:"PageLink",action:"moveDown",params:{page:this.getName()}})}getFileName(){return this.data["@attributes"].fileName}remove(){console.log("PageLinkEditor.remove",this.getName()),this.parent.removePageLink(this)}}class ParamEditor extends Editor{constructor(e,t){super(e,t),this.database=t}async setValue(e,t){var a=await FrontHostApp.doHttpRequest({controller:"Param",action:"save",params:{database:this.database.getName(),param:this.getName(),attr:e,value:t}});return this.setAttr(e,t),a}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Param",action:"delete",params:{database:this.database.getName(),param:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeParam(this)}}class TableEditor extends Editor{constructor(e,t){super(e,t),this.database=t,this.columns=[]}init(){for(const e of this.data.columns)this.createColumn(e)}createColumn(e){const t=new ColumnEditor(e,this);return t.init(),this.columns.push(t),t}removeColumn(e){console.log("TableEditor.removeColumn",e.getName());e=this.columns.indexOf(e);if(-1===e)throw new Error("no such column");this.columns.splice(e,1)}async newColumn(e){if(!e)throw new Error("newColumn: no name");e=await FrontHostApp.doHttpRequest({controller:"Column",action:"_new",params:{database:this.database.getName(),table:this.getName(),name:e}});return this.createColumn(e)}async deleteData(){await FrontHostApp.doHttpRequest({controller:"Table",action:"delete",params:{database:this.database.getName(),table:this.getName()}})}async delete(){await this.deleteData(),this.parent.removeTable(this)}moveUp(){return FrontHostApp.doHttpRequest({controller:"Table",action:"moveUp",params:{database:this.database.getName(),table:this.getName()}})}moveDown(){return FrontHostApp.doHttpRequest({controller:"Table",action:"moveDown",params:{database:this.database.getName(),table:this.getName()}})}}class EditorFrontHostApp extends FrontHostApp{constructor(e,t){if(console.log("EditorFrontHostApp.constructor",e),!e)throw new Error("no data");super(),this.data=e,(EditorFrontHostApp.editorApp=this).runAppLink=t,this.view=null,this.actionList=null,this.treeWidget2=null,this.pg=null,this.items=null,this.tabWidget=null,this.documents=[],this.modal=null}async run(){console.log("EditorFrontHostApp.run");const e=new ApplicationEditor(this.data.app);e.init();const t=new ApplicationController(e,this);t.init(),this.items=[t],this.view=Helper.createReactComponent(document.querySelector(".editor__root"),EditorFrontHostAppView,{ctrl:this})}deinit(){}onItemOpen2=async e=>{console.log("EditorFrontHostApp.onItemOpen2",e.getTitle()),e instanceof PageLinkController&&!e.hasPage()&&await e.loadPage()};onItemSelect2=async e=>{console.log("EditorFrontHostApp.onItemSelect2",e?e.getTitle():null),e instanceof ModelController?(e instanceof PageLinkController&&!e.hasPage()&&await e.loadPage(),this.fillActions(e),this.fillPropertyGrid(e)):(this.clearActions(),this.endEdit())};fillPropertyGrid(e){e=e.getPropList();this.beginEdit(e.list,e.options)}onPropertyGrid2Change=(e,t)=>{console.log("EditorFrontHostApp.onPropertyGrid2Change",e,t);const a=this.treeWidget2.getSelectedItem();a.setProperty(e,t)};beginEdit(e,t){console.log("EditorFrontHostApp.beginEdit",e,t),this.pg.setState({object:{obj:e,options:t}})}endEdit(){console.log("EditorFrontHostApp.endEdit"),this.pg.setState({object:null})}static async fetchPageData(e){return console.log("EditorFrontHostApp.fetchPageData",e),FrontHostApp.doHttpRequest({controller:"Page",action:"get",params:{fileName:e}})}fillActions(e){this.actionList.setState({item:e})}clearActions(){this.actionList.setState({item:null})}onItemDoubleClick2=async e=>{console.log("EditorFrontHostApp.onItemDoubleClick2",e.getTitle());e=e instanceof PageLinkController?e.pageController:e;e&&e instanceof DocumentController&&await this.openDocument(e)};async openDocument(e){console.log("EditorFrontHostApp.openDocument",e.getTitle());let t=this.findDocument(e);t||(t=await e.createDocument(),this.documents.push(t)),this.tabWidget.state.active=this.documents.indexOf(t),await this.view.rerender()}findDocument(t){return this.documents.find(e=>e.controller===t)||null}onDocumentClose=e=>{console.log("EditorFrontHostApp.onDocumentClose",e,this.tabWidget.state.active);const t=this.documents[e];var a=this.documents[this.tabWidget.state.active];this.documents.splice(e,1),t.controller.onDocumentClose(),t===a?this.documents.length?this.tabWidget.state.active>=this.documents.length&&(this.tabWidget.state.active=this.documents.length-1):this.tabWidget.state.active=null:this.tabWidget.state.active=this.documents.indexOf(a),this.view.rerender()};async openModal(e){console.log("EditorFrontHostApp.openModal"),this.modal=e,await this.view.rerender()}async onModalClose(){console.log("EditorFrontHostApp.onModalClose"),this.modal=null,await this.view.rerender()}onActionClick=async e=>{console.log("EditorFrontHostApp.onActionClick",e);var t=this.treeWidget2.getSelectedItem();const a=t instanceof PageLinkController?t.pageController:t;await a.doAction(e)}}class FormWizard{static create(e){switch(console.log("FormWizard.create",e),e.model.database.getClassName()){case"MySqlDatabase":return new MySqlFormWizard(e);case"PostgreSqlDatabase":return new PostgreSqlFormWizard(e);default:throw new Error("unknown database class: "+e.model.database.getClassName())}}constructor(t){console.log("FormWizard.constructor",t),this.params=t,this.model=t.model,this.databaseName=t.model.database.getName(),this.tableName=t.model.getName(),this.tableColumns=Object.keys(t.model.data.columns).map(e=>t.model.data.columns[e]["@attributes"])}getDataSources(){return[{class:"SqlDataSource",name:"default",database:this.databaseName,table:this.tableName,limit:"TableForm"===this.params.className?"100":"",countQuery:this.getCountQuery(),singleQuery:this.getSingleQuery(),multipleQuery:this.getMultipleQuery()}]}getFieldClass(e){if("date"===e.type)return"DateField";if("boolean"===e.type)return"CheckBoxField";if("RowForm"===this.params.className){if("text"===e.dbType)return"TextAreaField";if("json"===e.dbType)return"TextAreaField"}return"TextBoxField"}getField(e){let t={class:this.getFieldClass(e),name:e.name,caption:e.caption||e.name};return"true"===e.key?"false"===e.auto&&(t.notNull="true"):"false"===e.nullable&&(t.notNull="true",t.readOnly="false"),"true"===e.auto&&(t.readOnly="true"),"date"===e.type&&"timestamp without time zone"===e.dbType&&(t.timezone="false"),t}getFields(){return this.getColumns().map(e=>this.getField(e))}getColumns(){return this.tableColumns.filter(e=>{if("TableForm"===this.params.className){if("text"===e.dbType)return!1;if("bytea"===e.dbType)return!1}return!0})}getFormParams(){return{name:this.params.formName,caption:this.params.formCaption,class:this.params.className,dataSources:this.getDataSources(),fields:this.getFields()}}}class MySqlFormWizard extends FormWizard{getSingleQuery(){const e=this.tableColumns.map(e=>e.name);return"select\n{columns}\nfrom `{table}`\nwhere id = {key}".replace("{table}",this.tableName).replace("{columns}",e.map(e=>"    `"+e+"`").join(",\n"))}getMultipleQuery(){const e=this.tableColumns.map(e=>e.name);return"select\n{columns}\nfrom `{table}`\nlimit {offset}, {limit}".replace("{table}",this.tableName).replace("{columns}",e.map(e=>"    `"+e+"`").join(",\n"))}getCountQuery(){return console.log("MySqlFormWizard.getCountQuery"),"select count(*) from `{table}`".replace("{table}",this.tableName)}}class PostgreSqlFormWizard extends FormWizard{getSingleQuery(){console.log("PostgreSqlFormWizard.getSingleQuery");const e=this.getColumns().map(e=>e.name);return'select\n{columns}\nfrom "{table}"\nwhere id = {key}'.replace("{table}",this.tableName).replace("{columns}",e.map(e=>`    "${e}"`).join(",\n"))}getMultipleQuery(){console.log("PostgreSqlFormWizard.getMultipleQuery");const e=this.getColumns().map(e=>e.name);return`select
${e.map(e=>`    "${e}"`).join(",\n")}
from "${this.tableName}"
limit {limit}
offset {offset}`}getCountQuery(){return console.log("PostgreSqlFormWizard.getCountQuery"),`select count(*) from "${this.tableName}"`}}class ModalController{constructor(e){this.options=e}onClose=async e=>{console.log("ModalController.onClose"),await this.close()};onCreate=async e=>{console.log("ModalController.onCreate",e),await this.close(),this.options.onCreate&&await this.options.onCreate(e)};async close(){await EditorFrontHostApp.editorApp.onModalClose()}getViewClass(){throw new Error("ModalController.getViewClass not implemented")}}class ChangeClassController extends ModalController{getViewClass(){return ChangeClassView}}class NewActionController extends ModalController{getViewClass(){return NewActionView}}class NewColumnController extends ModalController{getViewClass(){return NewColumnView}}class NewDataSourceController extends ModalController{getViewClass(){return NewDataSourceView}}class NewDatabaseController extends ModalController{getViewClass(){return NewDatabaseView}}class NewFieldController extends ModalController{getViewClass(){return NewFieldView}}class NewFormController extends ModalController{getViewClass(){return NewFormView}}class NewFormFromTableController extends ModalController{getViewClass(){return NewFormFromTableView}}class NewKeyColumnController extends ModalController{getViewClass(){return NewKeyColumnView}}class NewPageController extends ModalController{getViewClass(){return NewPageView}}class NewParamController extends ModalController{getViewClass(){return NewParamView}}class NewTableController extends ModalController{getViewClass(){return NewTableView}}class ModelController{constructor(e,t=null){this.model=e,this.parent=t,this.view=null}init(){}getTitle(){return this.model.getName()}getStyle(){return{}}getPropList(){return{list:this.model.data["@attributes"],options:{}}}async setProperty(e,t){await this.model.setValue(e,t)}async doAction(e){throw new Error(this.constructor.name+`.doAction('${e}') not implemented`)}getDocumentViewClass(){return console.log(this.constructor.name+".getDocumentViewClass"),null}moveColItem(e,t,a){Helper.moveArrItem(this[e],t,a)}}class ActionController extends ModelController{getActions(){return[{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"delete":await this.delete();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("actions",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("actions",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}async delete(){await this.model.delete(),this.parent.removeAction(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}class ColumnController extends ModelController{getActions(){return[{action:"delete",caption:"Delete"}]}async doAction(e){"delete"===e&&await this.delete()}static async getView(e){return FrontHostApp.doHttpRequest({controller:"Column",action:"getView",params:{view:e}})}getPropList(){const e=super.getPropList();return e.options.key=["true","false"],e.options.auto=["true","false"],e.options.nullable=["true","false"],e.options.type=["","string","number","boolean","object","date"],e}async delete(){await this.model.delete(),this.parent.removeColumn(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}class DocumentController extends ModelController{constructor(e,t){super(e,t),this.document=null}async createDocument(){return this.document={controller:this,view:null}}onDocumentClose(){console.log("DocumentController.onDocumentClose",this.getTitle()),this.document=null}}class DataSourceController extends DocumentController{constructor(e,t){super(e,t),this.keyColumns=[],this.items=[{getTitle:()=>"Key Columns",items:this.keyColumns}]}getTitle(){return this.model.getClassName()+": "+this.model.getName()}getStyle(){return{color:"brown"}}init(){this.model.keyColumns.forEach(e=>this.createKeyColumn(e))}createKeyColumn(e){const t=new KeyColumnController(e,this);return t.init(),this.keyColumns.push(t),t}removeKeyColumn(e){console.log("DataSourceController.removeKeyColumn",e.getTitle());e=this.keyColumns.indexOf(e);if(-1===e)throw new Error("no such keyColumnController");this.keyColumns.splice(e,1)}getActions(){return[{action:"newItem",caption:"New Key Column"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"newItem":await this.actionNewKeyColumn();break;case"delete":await this.delete();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("dataSources",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("dataSources",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}async actionNewKeyColumn(){await EditorFrontHostApp.editorApp.openModal(new NewKeyColumnController({onCreate:async e=>{e=await this.model.newKeyColumn(e.name);const t=this.createKeyColumn(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}getPropList(){const e={list:{},options:{}};for(const t in this.model.data["@attributes"])["countQuery","singleQuery","multipleQuery"].includes(t)||(e.list[t]=this.model.data["@attributes"][t]);return e}getDocumentViewClass(){return"SqlDataSource"===this.model.getClassName()?SqlDataSourceView:super.getDocumentViewClass()}async onSaveClick(e,t){await this.model.setValue(e,t)}async delete(){await this.model.delete(),this.parent.removeDataSource(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}onCreateModelBack=async e=>{await this.model.createModelBackJs()}}class DatabaseController extends DocumentController{constructor(e,t){super(e,t),this.tableName=null,this.tableInfo=null,this.params=[],this.tables=[],this.items=[{getTitle:()=>"Params",items:this.params},{getTitle:()=>"Tables",items:this.tables}]}getTitle(){return this.model.getClassName()+": "+this.model.getName()}getStyle(){return{color:"purple"}}init(){this.model.params.forEach(e=>this.createParam(e)),this.model.tables.forEach(e=>this.createTable2(e))}createParam(e){const t=new ParamController(e,this);return t.init(),this.params.push(t),t}createTable2(e){const t=new TableController(e,this);return t.init(),this.tables.push(t),t}removeParam(e){console.log("DatabaseController.removeParam",e.getTitle());e=this.params.indexOf(e);if(-1===e)throw new Error("no such paramController");this.params.splice(e,1)}removeTable2(e){console.log("DatabaseController.removeTable2",e.getTitle());e=this.tables.indexOf(e);if(-1===e)throw new Error("no such tableController");this.tables.splice(e,1)}getActions(){return[{action:"newParam",caption:"New Param"},{action:"newTable",caption:"New Table"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"newParam":await this.actionNewParam();break;case"newTable":await this.actionNewTable();break;case"delete":await this.delete();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("databases",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("databases",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;default:throw new Error("unknown action: "+e)}}async actionNewParam(){await EditorFrontHostApp.editorApp.openModal(new NewParamController({onCreate:async e=>{e=await this.model.newParam(e.name);const t=this.createParam(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async actionNewTable(){await EditorFrontHostApp.editorApp.openModal(new NewTableController({onCreate:async e=>{e=await this.model.newTable({name:e.name});const t=this.createTable2(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async createDocument(){const e=await super.createDocument(),t=await this.model.getView("DatabaseView/DatabaseView.html");return e.treeWidgetItems=t.data.tables.sort().map(e=>({getTitle:()=>e})),e}onTableSelect2=async e=>{console.log("DatabaseController.onTableSelect2",e.getTitle());e=e.getTitle();this.tableName=e;e=await this.model.getTableInfo(e);this.tableInfo=e.tableInfo,this.document.view.rerender()};onCreateTableClick=e=>{console.log("DatabaseController.onCreateTableClick"),this.newTableAction(this.tableName,this.tableInfo)};async newTableAction(e,t){console.log("DatabaseController.newTableAction",e,t);t=await this.model.newTable({class:"Table",name:e,columns:t.map(e=>({class:"Column",name:e.name,caption:e.name,type:e.type,dbType:e.dbType,key:e.key.toString(),auto:e.auto.toString(),nullable:e.nullable.toString()}))});const a=this.createTable2(t);await EditorFrontHostApp.editorApp.treeWidget2.select(a),a.view.parent.open(),this.view.rerender()}async delete(){console.log("DatabaseController.delete",this.getTitle()),await this.model.delete(),this.parent.removeDatabase(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}getDocumentViewClass(){return DatabaseView}}class TableController extends DocumentController{constructor(e,t){super(e,t),this.columns=[],this.items=[{getTitle:()=>"Columns",items:this.columns}]}init(){this.model.columns.forEach(e=>this.createColumn(e))}createColumn(e){const t=new ColumnController(e,this);return t.init(),this.columns.push(t),t}removeColumn(e){console.log("TableController.removeColumn",e.getTitle());e=this.columns.indexOf(e);if(-1===e)throw new Error("no such columnController");this.columns.splice(e,1)}getActions(){return[{action:"newColumn",caption:"New Column"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"delete":await this.delete();break;case"newColumn":await this.actionNewColumn();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("tables",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("tables",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;default:throw new Error("unknown action: "+e)}}static async getView(e){return FrontHostApp.doHttpRequest({controller:"Table",action:"getView",params:{view:e}})}async actionNewColumn(){await EditorFrontHostApp.editorApp.openModal(new NewColumnController({onCreate:async e=>{e=await this.model.newColumn(e.name);const t=this.createColumn(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}onCreateFormButtonClick=async e=>{console.log("TableController.onCreateFormButtonClick"),await this.createFormAction()};static async getView(e){return console.log("TableController.getView",e),FrontHostApp.doHttpRequest({controller:"Table",action:"getView",params:{view:e}})}async createFormAction(){console.log("TableController.createFormAction"),await EditorFrontHostApp.editorApp.openModal(new NewFormFromTableController({tableController:this,onCreate:async e=>{const t=FormWizard.create({model:this.model,pageName:e.page,className:e.class,formName:e.name,formCaption:e.caption||e.name});var a=t.getFormParams();const o=this.parent.parent,r=o.findPageLink(e.page);r.pageController||await r.loadPage();const s=r.pageController;a=await s.model.newForm(a);const i=s.createForm(a);await EditorFrontHostApp.editorApp.treeWidget2.select(i),i.view.parent.open(),r.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async delete(){console.log("TableController.delete",this.getTitle()),await this.model.delete(),this.parent.removeTable2(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}getDocumentViewClass(){return TableView}}class VisualController extends DocumentController{constructor(e,t){super(e,t),this.data=null}async createDocument(){console.log("VisualController.createDocument");var e=await super.createDocument(),t=await this.model.getView("VisualView.html");return this.data=t.data,e}async onControllerSave(e){console.log("ApplicationController.onControllerSave");e=await this.model.saveController(e);this.data.js=e.js,this.document.view.rerender()}onCreateCustomController=async e=>{console.log("ApplicationController.onCreateCustomController");var t=await this.model.createController();this.data.js=t.js,this.document.view.rerender()};onCreateCustomView=async e=>{console.log("VisualController.onCreateCustomView");var t=await this.model.createView();this.data.jsx=t.jsx,this.document.view.rerender()};onCreateCustomStyle=async e=>{console.log("VisualController.onCreateCustomStyle");var t=await this.model.createStyle();this.data.less=t.less,this.document.view.rerender()};onCreateModelBack=async e=>{await this.model.createModelBackJs()};createDataSource(e){const t=new DataSourceController(e,this);return t.init(),this.dataSources.push(t),t}removeDataSource(e){e=this.dataSources.indexOf(e);if(-1===e)throw new Error("no such dataSourceController");this.dataSources.splice(e,1)}createAction(e){const t=new ActionController(e,this);return t.init(),this.actions.push(t),t}removeAction(e){e=this.actions.indexOf(e);if(-1===e)throw new Error("no such actionController");this.actions.splice(e,1)}async actionNewAction(){console.log("VisualController.actionNewAction"),await EditorFrontHostApp.editorApp.openModal(new NewActionController({onCreate:async e=>{e=await this.model.newAction({name:e.name,caption:e.caption});const t=this.createAction(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),(this.pageLinkController||this).view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}}class ApplicationController extends VisualController{constructor(e,t){super(e),this.editorApp=t,this.databases=[],this.dataSources=[],this.actions=[],this.pageLinks=[],this.opened=!0,this.items=[{getTitle:()=>"Databases",items:this.databases},{getTitle:()=>"Data Sources",items:this.dataSources},{getTitle:()=>"Actions",items:this.actions},{getTitle:()=>"Pages",items:this.pageLinks,opened:!0}]}init(){this.model.databases.forEach(e=>this.createDatabase(e)),this.model.dataSources.forEach(e=>this.createDataSource(e)),this.model.actions.forEach(e=>this.createAction(e)),this.model.pageLinks.forEach(e=>this.createPageLink(e))}createDatabase(e){const t=new DatabaseController(e,this);return t.init(),this.databases.push(t),t}createPageLink(e){const t=new PageLinkController(e,this);return t.init(),this.pageLinks.push(t),t}removeDatabase(e){console.log("ApplicationController.removeDatabase",e.getTitle());e=this.databases.indexOf(e);if(-1===e)throw new Error("no such databaseController");this.databases.splice(e,1)}removePageLink(e){e=this.pageLinks.indexOf(e);if(-1===e)throw new Error("no such pageLinkController");this.pageLinks.splice(e,1)}getActions(){return[{action:"newDatabase",caption:"New Database"},{action:"newDataSource",caption:"New Data Source"},{action:"newAction",caption:"New Action"},{action:"newPage",caption:"New Page"}]}async doAction(e){switch(e){case"newDatabase":await this.newDatabaseAction();break;case"newDataSource":await this.newDataSourceAction();break;case"newPage":await this.newPageAction();break;case"newAction":await this.actionNewAction();break;default:console.log(e)}}async newDatabaseAction(){console.log("ApplicationController.newDatabaseAction"),await EditorFrontHostApp.editorApp.openModal(new NewDatabaseController({onCreate:async e=>{e=await this.model.newDatabase({class:e.class,name:e.name,params:[{class:"Param",name:"host",value:e.host},{class:"Param",name:"database",value:e.database},{class:"Param",name:"user",value:e.user},{class:"Param",name:"password",value:e.password}]});const t=this.createDatabase(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async newDataSourceAction(){await EditorFrontHostApp.editorApp.openModal(new NewDataSourceController({onCreate:async e=>{e=await this.model.newDataSource({name:e.name,class:e.class});const t=this.createDataSource(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async newPageAction(){await EditorFrontHostApp.editorApp.openModal(new NewPageController({onCreate:async e=>{e=await this.model.newPage({name:e.name,caption:e.caption||e.name,startup:e.startup});const t=this.createPageLink(e.pageLink),a=new PageController(e,t);a.init(),t.setPageController(a),EditorFrontHostApp.editorApp.treeWidget2.select(t),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}getPropList(){const e=super.getPropList();return e.options.authentication=["true","false"],e.options.lang=["en","ru"],e}findPageLink(t){return this.pageLinks.find(e=>e.model.getName()===t)}getDocumentViewClass(){return VisualView}}class FieldController extends VisualController{getTitle(){return this.model.getClassName()+": "+this.model.getName()}getStyle(){return{color:"blue"}}getActions(){return[{action:"changeClass",caption:"Change Class"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"changeClass":await this.actionChangeClass();break;case"delete":await this.delete();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("fields",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("fields",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}async actionChangeClass(){await EditorFrontHostApp.editorApp.openModal(new ChangeClassController({fieldCtrl:this,onCreate:async e=>{e=await this.model.changeClass({class:e.class});console.log(e),EditorFrontHostApp.editorApp.fillPropertyGrid(this),this.view.rerender()}}))}getPropList(){const e={visible:["true","false"],readOnly:["true","false"],notNull:["true","false"],param:["true","false"],validateOnChange:["true","false"],validateOnBlur:["true","false"],autoFocus:["true","false"],timezone:["true","false"],newRowMode:["disabled","editPage","createPage"],type:["","string","number","boolean","object","date"]};return{list:this.model.data["@attributes"],options:e}}async delete(){await this.model.delete(),this.parent.removeField(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}getDocumentViewClass(){return VisualView}}class FormController extends VisualController{constructor(e,t){super(e,t),this.dataSources=[],this.actions=[],this.fields=[],this.items=[{getTitle:()=>"Data Sources",items:this.dataSources},{getTitle:()=>"Actions",items:this.actions},{getTitle:()=>"Fields",items:this.fields}]}getTitle(){return this.model.getClassName()+": "+this.model.getName()}getStyle(){return{color:"green"}}init(){this.model.dataSources.forEach(e=>this.createDataSource(e)),this.model.fields.forEach(e=>this.createField(e)),this.model.actions.forEach(e=>this.createAction(e))}createField(e){const t=new FieldController(e,this);return t.init(),this.fields.push(t),t}removeField(e){console.log("FormController.removeField",e.getTitle());e=this.fields.indexOf(e);if(-1===e)throw new Error("no such fieldController");this.fields.splice(e,1)}getActions(){return[{action:"newDataSource",caption:"New Data Source"},{action:"newField",caption:"New Field"},{action:"newAction",caption:"New Action"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"newDataSource":await this.actionNewDataSource();break;case"newField":await this.actionNewField();break;case"newAction":await this.actionNewAction();break;case"delete":await this.delete();break;case"moveUp":await this.model.moveUp(),this.parent.moveColItem("forms",this,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.moveDown(),this.parent.moveColItem("forms",this,1),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}async actionNewDataSource(){await EditorFrontHostApp.editorApp.openModal(new NewDataSourceController({onCreate:async e=>{e=await this.model.newDataSource({name:e.name,class:e.class});const t=this.createDataSource(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async actionNewField(){await EditorFrontHostApp.editorApp.openModal(new NewFieldController({onCreate:async e=>{e=await this.model.newField({class:e.class,name:e.name,caption:e.caption,type:e.type});const t=this.createField(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}getPropList(){return{list:this.model.data["@attributes"],options:{editMethod:["disabled","table","form"],newRowMode:["disabled","oneclick","editform","createform","oneclick editform","oneclick createform"],deleteRowMode:["disabled","enabled"],refreshButton:["true","false"],visible:["true","false"],newMode:["","true","false"],backOnly:["true","false"]}}}async setProperty(e,t){await this.model.setValue(e,t)}async delete(){await this.model.delete(),this.parent.removeForm(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}getDocumentViewClass(){return VisualView}}class PageController extends VisualController{constructor(e,t=null,a={}){super(e),this.options=a,this.pageLinkController=t,this.dataSources=[],this.actions=[],this.forms=[],this.items=[{getTitle:()=>"Data Sources",items:this.dataSources},{getTitle:()=>"Actions",items:this.actions},{getTitle:()=>"Forms",items:this.forms}]}init(){this.model.dataSources.forEach(e=>this.createDataSource(e)),this.model.actions.forEach(e=>this.createAction(e)),this.model.forms.forEach(e=>this.createForm(e))}createForm(e){const t=new FormController(e,this);return t.init(),this.forms.push(t),t}removeForm(e){console.log("PageController.removeForm",e.getTitle());e=this.forms.indexOf(e);if(-1===e)throw new Error("no such formController");this.forms.splice(e,1)}getActions(){return[{action:"newDataSource",caption:"New Data Source"},{action:"newAction",caption:"New Action"},{action:"newForm",caption:"New Form"},{action:"moveUp",caption:"Move Up"},{action:"moveDown",caption:"Move Down"},{action:"delete",caption:"Delete"}]}async doAction(e){switch(e){case"newForm":await this.actionNewForm();break;case"newDataSource":await this.newDataSourceAction();break;case"newAction":await this.actionNewAction();break;case"delete":await this.delete();break;case"moveUp":await this.model.pageLink.moveUp(),this.pageLinkController.parent.moveColItem("pageLinks",this.pageLinkController,-1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;case"moveDown":await this.model.pageLink.moveDown(),this.pageLinkController.parent.moveColItem("pageLinks",this.pageLinkController,1),EditorFrontHostApp.editorApp.treeWidget2.rerender();break;default:console.log(e)}}async newDataSourceAction(){await EditorFrontHostApp.editorApp.openModal(new NewDataSourceController({onCreate:async e=>{e=await DataSourceEditor.create(this.model,{name:e.name,class:e.class}),e=this.model.createDataSource(e);const t=this.createDataSource(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.pageLinkController.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}async actionNewForm(){await EditorFrontHostApp.editorApp.openModal(new NewFormController({onCreate:async e=>{e=await this.model.newForm({name:e.name,caption:e.caption||e.name,class:e.class});const t=this.createForm(e);await EditorFrontHostApp.editorApp.treeWidget2.select(t),t.view.parent.open(),this.pageLinkController.view.rerender(),EditorFrontHostApp.editorApp.treeWidget2.scrollToSelected()}}))}getPropList(){const e=super.getPropList();return e.list.menu=this.getPageLink().getAttr("menu"),e.list.startup=this.getPageLink().getAttr("startup"),e.options.startup=["true","false"],e}setProperty(e,t){"startup"===e||"menu"===e?this.getPageLink().setValue(e,t):ModelController.prototype.setProperty.call(this,e,t)}getPageLink(){return this.model.pageLink}async delete(){await this.model.delete(),this.pageLinkController.parent.removePageLink(this.pageLinkController),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}getDocumentViewClass(){return VisualView}}class KeyColumnController extends ModelController{getActions(){return[{action:"delete",caption:"Delete"}]}async doAction(e){"delete"===e&&await this.delete()}static async getView(e){return FrontHostApp.doHttpRequest({controller:"KeyColumn",action:"getView",params:{view:e}})}async delete(){await this.model.delete(),this.parent.removeKeyColumn(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}class PageLinkController extends ModelController{constructor(e,t){super(e,t),this.node=!0,this.pageController=null,this.items=null}getTitle(){return this.pageController?this.pageController.getTitle():super.getTitle()}getStyle(){return{color:"red"}}hasPage(){return null!=this.pageController}async loadPage(){if(console.log("PageLinkController.loadPage",this.getTitle()),this.pageController)throw new Error("page already loaded");const e=this.model;var t=await EditorFrontHostApp.fetchPageData(e.getFileName());const a=new PageEditor(t,e);a.init();const o=new PageController(a,this);o.init(),this.setPageController(o),this.view.rerender()}getActions(){return this.pageController.getActions()}getPropList(){return this.pageController.getPropList()}async setProperty(e,t){this.pageController.setProperty(e,t)}setPageController(e){if(this.pageController)throw new Error("pageLinkController already has pageController");this.pageController=e,this.items=e.items}remove(){console.log("PageLinkController.remove",this.getTitle()),this.parent.removePageLink(this)}}class ParamController extends ModelController{getActions(){return[{action:"delete",caption:"Delete"}]}async doAction(e){"delete"===e&&await this.delete()}static async getView(e){return FrontHostApp.doHttpRequest({controller:"Param",action:"getView",params:{view:e}})}async delete(){await this.model.delete(),this.parent.removeParam(this),EditorFrontHostApp.editorApp.treeWidget2.select(null),EditorFrontHostApp.editorApp.treeWidget2.rerender()}}
//# sourceMappingURL=editor.fcc0d0f780227d069e37206266911fd6.js.map
