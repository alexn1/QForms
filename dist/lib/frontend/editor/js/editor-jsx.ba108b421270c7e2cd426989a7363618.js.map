{"version":3,"sources":["ActionList/ActionList.jsx","EditorFrontHostApp/EditorFrontHostAppView.jsx","ModalController/ModalView.jsx","ModalController/ChangeClassController/ChangeClassView.jsx","ModalController/NewActionController/NewActionView.jsx","ModalController/NewColumnController/NewColumnView.jsx","ModalController/NewDataSourceController/NewDataSourceView.jsx","ModalController/NewDatabaseController/NewDatabaseView.jsx","ModalController/NewFieldController/NewFieldView.jsx","ModalController/NewFormController/NewFormView.jsx","ModalController/NewFormFromTableController/NewFormFromTableView.jsx","ModalController/NewKeyColumnController/NewKeyColumnView.jsx","ModalController/NewPageController/NewPageView.jsx","ModalController/NewParamController/NewParamView.jsx","ModalController/NewTableController/NewTableView.jsx","ModelController/DocumentController/DocumentView.jsx","ModelController/DocumentController/DataSourceController/SqlDataSourceView.jsx","ModelController/DocumentController/DatabaseController/DatabaseView.jsx","ModelController/DocumentController/TableController/TableView.jsx","ModelController/DocumentController/VisualController/VisualView.jsx","PropertyGrid/PropertyGrid.jsx","TreeWidget/TreeItem.jsx","TreeWidget/TreeWidget.jsx"],"names":["ActionList","ReactComponent","constructor","props","super","_defineProperty","this","li","console","log","onClick","dataset","action","state","item","render","React","createElement","DropdownButton","title","actions","getActions","map","name","caption","EditorFrontHostAppView","renderDocumentView","document","controller","getDocumentViewClass","onCreate","c","view","ctrl","getTabs","documents","model","getFullName","content","className","href","runAppLink","target","actionList","onActionClick","TreeWidget","classList","treeWidget2","items","onItemSelect","onItemSelect2","onItemDoubleClick","onItemDoubleClick2","onItemOpen","onItemOpen2","Tab","tabs","PropertyGrid","pg","onChange","onPropertyGrid2Change","canClose","onTabClose","onDocumentClose","tabWidget","modal","ModalView","Modal","getViewClass","ChangeClassView","e","class","getValue","type","onClose","htmlFor","ComboBox","id","value","options","fieldCtrl","getClassName","NewActionView","TextBox","autocomplete","autoFocus","NewColumnView","NewDataSourceView","Button","NewDatabaseView","host","database","user","password","NewFieldView","NewFormView","NewFormFromTableView","page","tableController","pages","parent","pageLinks","pageLink","getName","disabled","length","NewKeyColumnView","NewPageView","startup","NewParamView","NewTableView","DocumentView","createCM","textarea","cm","CodeMirror","fromTextArea","lineNumbers","styleActiveLine","matchBrackets","setOption","setValue","SqlDataSourceView","async","i","o","rerender","onSaveClick","selected","singleRef","createRef","multipleRef","countRef","singleQuery","multipleQuery","countQuery","componentDidMount","current","getAttr","on","componentWillUnmount","off","isChanged","getButtonClass","getVisibility","isSelected","enabled","onCreateModelBack","role","style","fontWeight","setState","visibility","ref","DatabaseView","renderGrid","Grid","columns","width","rows","tableInfo","getRowKey","row","onCreateTableClick","treeWidgetItems","onTableSelect2","TableView","renderRows","column","key","getCssClassNames","getAttributes","onCreateFormButtonClick","VisualView","onControllerSave","instance","changeObj","getTextarea","data","js","componentDidUpdate","onCreateCustomController","jsx","onCreateCustomView","less","onCreateCustomStyle","getObj","object","obj","getOptions","renderInput","spellCheck","renderSelect","Object","keys","undefined","cellPadding","cellSpacing","TreeItem","tree","select","onDoubleClick","opened","stopPropagation","prevState","onOpen","getSelectedItem","isOpened","getElement","open","getTitle","hasItems","isNode","node","getStyle","paddingLeft","onMouseDown","onDivMouseDown","onDivDoubleClick","onNodeMouseDown","selectedItem","Promise","resolve","scrollToSelected","scrollIntoView"],"mappings":"4IAAMA,mBAAmBC,eACrBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,UAMHC,MAAAA,IACZC,QAAQC,IAAI,qBAAsBF,SAC5BD,KAAKH,MAAMO,QAAQH,EAAGI,QAAQC,UANpCN,KAAKO,MAAQ,CACTC,KAAM,MAOdC,SAEI,OAAOC,MAAAC,cAACC,eAAD,CAAgBC,MAAO,UAAWT,QAASJ,KAAKI,QAASU,QAASd,KAAKO,MAAMC,KAAOR,KAAKO,MAAMC,KAAKO,aAAaC,IAAIV,IACjH,CAACW,KAAMX,EAAOA,OAAQO,MAAOP,EAAOY,WAC1C,YCfPC,+BAA+BxB,eACjCyB,mBAAmBC,GACf,OAAKA,EAASC,WAAWC,uBAClBb,MAAMC,cAAcU,EAASC,WAAWC,uBAAwB,CACnEC,SAAUC,GAAKJ,EAASK,KAAOD,EAC/BJ,SAAUA,EACVM,KAAUN,EAASC,aAJiCZ,MAAAC,cAAA,MAAA,KAAA,wBAA2BU,EAASC,WAAW1B,YAAYqB,MAOvHW,UAEI,OADA1B,QAAQC,IAAI,iCAAkCH,KAAKH,MAAM8B,KAAKE,WACvD7B,KAAKH,MAAM8B,KAAKE,UAAUb,IAAIK,IAAQ,CACzCJ,KAASI,EAASC,WAAWQ,MAAMC,cACnClB,MAASQ,EAASC,WAAWQ,MAAMC,cACnCC,QAAShC,KAAKoB,mBAAmBC,MAGzCZ,SACI,MAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,0BAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,mCACZvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,YAMZvB,MAAAC,cAAA,IAAA,CAAGuB,KAAMP,EAAKQ,WAAYC,OAAO,UAAjC,mBACA1B,MAAAC,cAAA,MAAA,KACID,MAAAC,cAACjB,WAAD,CAAY8B,SAAUC,GAAKE,EAAKU,WAAaZ,EAAGrB,QAASuB,EAAKW,kBAGtE5B,MAAAC,cAAA,MAAA,CAAKsB,UAAW,cACZvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,oBACZvB,MAAAC,cAAC4B,WAAD,CACIC,UAAW,CAAC,QACZhB,SAAUC,GAAKE,EAAKc,YAAchB,EAClCiB,MAAOf,EAAKe,MACZC,aAAchB,EAAKiB,cACnBC,kBAAmBlB,EAAKmB,mBACxBC,WAAYpB,EAAKqB,gBAI7BtC,MAAAC,cAACsC,IAAD,CACIT,UAAW,CAAC,WAAY,QACxBU,KAAM,CACF,CACIjC,KAAS,aACTJ,MAAS,aACTmB,QAAStB,MAAAC,cAACwC,aAAD,CACL3B,SAAUC,GAAKE,EAAKyB,GAAK3B,EACzB4B,SAAU1B,EAAK2B,6BAMnC5C,MAAAC,cAAA,MAAA,CAAKsB,UAAW,kCACZvB,MAAAC,cAACsC,IAAD,CACIT,UAAW,CAAC,QACZe,UAAU,EACVC,WAAY7B,EAAK8B,gBACjBjC,SAAUC,GAAKE,EAAK+B,UAAYjC,EAChCyB,KAAMlD,KAAK4B,aAGlBD,EAAKgC,OAASjD,MAAMC,cAAciD,UAAW,CAACjC,KAAMA,EAAKgC,gBCnEhEC,kBAAkBjE,eACpBc,SACI,MAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAACkD,MAAD,KACFnD,MAAMC,cAAcgB,EAAKmC,eAAgB,CAACnC,KAAAA,M,4ICJjDoC,wBAAwBpE,eAC1BC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAIFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3ByC,MAAOjE,KAAKiE,MAAMC,eALtBlE,KAAKiE,MAAQ,KAQjBxD,SACI,MAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,uBAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,SACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,QAAQ7B,MAAO,CACxB,CAAC8B,MAAO,gBACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,cACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,kBACTA,MAAO7C,EAAK8C,QAAQC,UAAU5C,MAAM6C,eAAgBnD,SAAUC,GAAKzB,KAAKiE,MAAQxC,MAG3Ff,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4ICxCVQ,sBAAsBjF,eACxBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAKFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAASjB,KAAKiB,KAAKiD,WACnBhD,QAASlB,KAAKkB,QAAQgD,eAP1BlE,KAAKiB,KAAU,KACfjB,KAAKkB,QAAU,KASnBT,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,eAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAErFrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,UAAU/C,SAAUC,GAAKzB,KAAKkB,QAAUO,EAAGqD,aAAc,UAG7EpE,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4IChCVY,sBAAsBrF,eACxBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAIFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAAMjB,KAAKiB,KAAKiD,eALpBlE,KAAKiB,KAAO,KAQhBR,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,eAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,cAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,aAAa/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,MAG5Df,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4IC1BVa,0BAA0BtF,eAC5BC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAKFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAAUjB,KAAKiB,KAAKiD,WACpBD,MAAUjE,KAAKiE,MAAMC,eAPzBlE,KAAKiB,KAAQ,KACbjB,KAAKiE,MAAQ,KASjBxD,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,+BAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,oBAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,OAAQ/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAEvFrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,SACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,QAAQ7B,MAAO,CACxB,CAAC8B,MAAO,aAAc3D,MAAO,cAC7B,CAAC2D,MAAO,gBAAiB3D,MAAO,kBACjCW,SAAUC,GAAKzB,KAAKiE,MAAQxC,EAAG+C,MAAO,oBAGjD9D,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAACuE,OAAD,CAAQjE,KAAK,SAASuB,UAAW,CAAC,MAAO,eAAgBpC,QAASJ,KAAKwB,UAAvE,UACAd,MAAAC,cAACuE,OAAD,CAAQ1C,UAAW,CAAC,MAAO,eAAgBpC,QAASuB,EAAKyC,SAAzD,Y,4ICnCVe,wBAAwBxF,eAC1BC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WASFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3ByC,MAAUjE,KAAKiE,MAAMC,WACrBjD,KAAUjB,KAAKiB,KAAKiD,WACpBkB,KAAUpF,KAAKoF,KAAKlB,WACpBmB,SAAUrF,KAAKqF,SAASnB,WACxBoB,KAAUtF,KAAKsF,KAAKpB,WACpBqB,SAAUvF,KAAKuF,SAASrB,eAf5BlE,KAAKiE,MAAW,KAChBjE,KAAKiB,KAAW,KAChBjB,KAAKoF,KAAW,KAChBpF,KAAKqF,SAAW,KAChBrF,KAAKsF,KAAW,KAChBtF,KAAKuF,SAAW,KAapB9E,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,6BAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,iBAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,SACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAI,QAAS7B,MAAO,CAC1B,CAAC8B,MAAO,gBAAsB3D,MAAO,iBACrC,CAAC2D,MAAO,qBAAsB3D,MAAO,uBACtCW,SAAUC,GAAKzB,KAAKiE,MAAQxC,EAAG+C,MAAO,wBAE7C9D,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,OAAQC,MAAO,UAAWhD,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,SAEvFpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,OAAQC,MAAO,YAAahD,SAAUC,GAAKzB,KAAKoF,KAAO3D,EAAGqD,aAAc,SAEzFpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,YAAf,YACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,WAAYC,MAAO,OAAQhD,SAAUC,GAAKzB,KAAKqF,SAAW5D,EAAGqD,aAAc,SAE5FpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,OAAQC,MAAO,OAAQhD,SAAUC,GAAKzB,KAAKsF,KAAO7D,EAAGqD,aAAc,SAEpFpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,YACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAI,WAAYC,MAAO,SAAUhD,SAAUC,GAAKzB,KAAKuF,SAAW9D,EAAGqD,aAAc,UAGlGpE,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAACuE,OAAD,CAAQjE,KAAK,SAASuB,UAAW,CAAC,MAAO,eAAgBpC,QAASJ,KAAKwB,UAAvE,UACAd,MAAAC,cAACuE,OAAD,CAAQ1C,UAAW,CAAC,MAAO,eAAgBpC,QAASuB,EAAKyC,SAAzD,Y,4IC3DVoB,qBAAqB7F,eACvBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAOFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3ByC,MAASjE,KAAKiE,MAAMC,WACpBjD,KAASjB,KAAKiB,KAAKiD,WACnBhD,QAASlB,KAAKkB,QAAQgD,YAAclE,KAAKiB,KAAKiD,WAC9CC,KAASnE,KAAKmE,KAAKD,eAXvBlE,KAAKiE,MAAU,KACfjE,KAAKiB,KAAU,KACfjB,KAAKkB,QAAU,KACflB,KAAKmE,KAAU,KAWnB1D,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,cAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,SACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,QAAQ7B,MAAO,CACxB,CAAC8B,MAAO,gBACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,cACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,kBACThD,SAAUC,GAAKzB,KAAKiE,MAAQxC,KAEnCf,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAErFrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,UAAU/C,SAAUC,GAAKzB,KAAKkB,QAAUO,EAAGqD,aAAc,SAEzEpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,OAAOC,MAAO,GAAI9B,MAAO,CAClC,CAAC8B,MAAO,GAAI3D,MAAO,IACnB,CAAC2D,MAAO,SAAU3D,MAAO,UACzB,CAAC2D,MAAO,SAAU3D,MAAO,UACzB,CAAC2D,MAAO,UAAW3D,MAAO,WAC1B,CAAC2D,MAAO,SAAU3D,MAAO,UACzB,CAAC2D,MAAO,OAAQ3D,MAAO,SACxBW,SAAUC,GAAKzB,KAAKmE,KAAO1C,MAGtCf,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4ICjEVqB,oBAAoB9F,eACtBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAMFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAASjB,KAAKiB,KAAKiD,WACnBhD,QAASlB,KAAKkB,QAAQgD,WACtBD,MAASjE,KAAKiE,MAAMC,eATxBlE,KAAKiB,KAAU,KACfjB,KAAKkB,QAAU,KACflB,KAAKiE,MAAU,KAUnBxD,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,aAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAErFrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,UAAU/C,SAAUC,GAAKzB,KAAKkB,QAAUO,EAAGqD,aAAc,SAEzEpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,aAAf,SACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,YAAYC,MAAO,YAAa9B,MAAO,CAChD,CAAC8B,MAAO,UAAa3D,MAAO,WAC5B,CAAC2D,MAAO,YAAa3D,MAAO,aAC5B,CAAC2D,MAAO,OAAa3D,MAAO,SAC7BW,SAAUC,GAAKzB,KAAKiE,MAAQxC,MAGvCf,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4IC1CVsB,6BAA6B/F,eAC/BC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAOFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BmE,KAAS3F,KAAK2F,KAAKzB,WACnBD,MAASjE,KAAKiE,MAAMC,WACpBjD,KAASjB,KAAKiB,KAAKiD,WACnBhD,QAASlB,KAAKkB,QAAQgD,eAX1BlE,KAAK2F,KAAO,KACZ3F,KAAKiE,MAAQ,KACbjE,KAAKiB,KAAQ,KACbjB,KAAKkB,QAAW,KAWpBT,SACI,MAAMkB,EAAO3B,KAAKH,MAAM8B,KAClBiE,EAAkBjE,EAAK8C,QAAQmB,gBACrC,IAAMC,EAAQD,EAAgB9D,MAAMgE,OAAOA,OAAOC,UAAU/E,IAAIgF,IAAQ,CAAMxB,MAAOwB,EAASC,UAAWpF,MAAOmF,EAASC,aAEzH,OADA/F,QAAQC,IAAI,SAAU0F,GACfnF,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,aAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,SACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,QAAQ2B,UAAU,EAAM1B,MAAOoB,EAAgB9D,MAAMmE,aAErEvF,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,OAAO7B,MAAOmD,EAAOrB,MAAOqB,EAAMA,EAAMM,OAAO,GAAG3B,MAAOhD,SAAUC,GAAKzB,KAAK2F,KAAOlE,KAEzGf,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,SAAf,cACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,QAAQC,MAAO,YAAa9B,MAAO,CAC5C,CAAC8B,MAAO,UAAW3D,MAAO,WAC1B,CAAC2D,MAAO,YAAa3D,MAAO,cAC7BW,SAAUC,GAAKzB,KAAKiE,MAAQxC,KAEnCf,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAOC,MAAO7C,EAAK8C,QAAQmB,gBAAgB9D,MAAMmE,UAAWzE,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAE1IrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,UAAU/C,SAAUC,GAAKzB,KAAKkB,QAAUO,EAAGqD,aAAc,UAG7EpE,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4ICtDNgC,yBAAyBzG,eAC3BC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAIFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAAMjB,KAAKiB,KAAKiD,eALpBlE,KAAKiB,KAAO,KAQhBR,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,mBAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,MAGzFrE,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4IC1BViC,oBAAoB1G,eACtBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAMFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAASjB,KAAKiB,KAAKiD,WACnBhD,QAASlB,KAAKkB,QAAQgD,WACtBoC,QAAStG,KAAKsG,QAAQpC,eAT1BlE,KAAKiB,KAAU,KACfjB,KAAKkB,QAAU,KACflB,KAAKsG,QAAU,KAUnB7F,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,aAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,KAErFrE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,UAAU/C,SAAUC,GAAKzB,KAAKkB,QAAUO,EAAGqD,aAAc,SAEzEpE,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,WAAf,WACA3D,MAAAC,cAAC2D,SAAD,CAAUC,GAAG,UAAU7B,MAAO,CAC1B,CAAC8B,MAAO,QAAS3D,MAAO,SACxB,CAAC2D,MAAO,OAAQ3D,MAAO,SACxBW,SAAUC,GAAKzB,KAAKsG,QAAU7E,MAGzCf,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4ICzCVmC,qBAAqB5G,eACvBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAIFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAAMjB,KAAKiB,KAAKiD,eALpBlE,KAAKiB,KAAO,KAQhBR,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,cAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,QAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,OAAO/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,EAAGqD,aAAc,MAAOC,WAAW,MAGzFrE,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,Y,4IC1BVoC,qBAAqB7G,eACvBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAIFgE,MAAAA,UAEPhE,KAAKH,MAAM8B,KAAKH,SAAS,CAC3BP,KAAMjB,KAAKiB,KAAKiD,eALpBlE,KAAKiB,KAAO,KAQhBR,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,aAClBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,QAAQ7B,QAASuB,EAAKyC,SAAS1D,MAAAC,cAAA,OAAA,KAAA,MAC/DD,MAAAC,cAAA,KAAA,CAAIsB,UAAU,eAAd,cAEJvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,cACXvB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAO0D,QAAQ,aAAf,QACA3D,MAAAC,cAACkE,QAAD,CAASN,GAAG,YAAY/C,SAAUC,GAAKzB,KAAKiB,KAAOQ,MAG3Df,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,SAAA,CAAQM,KAAK,SAASkD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASJ,KAAKwB,UAA9E,UACAd,MAAAC,cAAA,SAAA,CAAQwD,KAAK,SAASlC,UAAU,kBAAkB7B,QAASuB,EAAKyC,SAAhE,kBC1BVqC,qBAAqB9G,eACR+G,gBAACC,EAAUnC,GACtB,MAAMoC,EAAKC,WAAWC,aAAaH,EAAU,CAACI,aAAa,EAAMC,iBAAiB,EAAMC,eAAe,IAGvG,OAFAL,EAAGM,UAAU,QAAS,UACtBN,EAAGO,SAAS3C,GACLoC,G,4ICLTQ,0BAA0BX,aAC5B7G,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAgCRqH,MAAOC,EAAGC,WAEXvH,KAAKwH,aAlCIzH,gBAAAC,KAAA,cA0CCgE,MAAAA,IAChB9D,QAAQC,IAAI,iCACZ,MAAMwB,EAAO3B,KAAKH,MAAM8B,WAClBA,EAAK8F,YAAYzH,KAAKO,MAAMmH,SAAU1H,KAAKA,KAAKO,MAAMmH,UAAUxD,kBAChElE,KAAKwH,aA5CXxH,KAAK2H,UAAcjH,MAAMkH,YACzB5H,KAAK6H,YAAcnH,MAAMkH,YACzB5H,KAAK8H,SAAcpH,MAAMkH,YACzB5H,KAAKO,MAAQ,CACTmH,SAAU,eAEd1H,KAAK+H,YAAgB,KACrB/H,KAAKgI,cAAgB,KACrBhI,KAAKiI,WAAgB,KAEzBC,oBACI,MAAMvG,EAAO3B,KAAKH,MAAM8B,KACxB3B,KAAK+H,YAAgBtB,aAAaC,SAAS1G,KAAK2H,UAAUQ,QAAWxG,EAAKG,MAAMsG,QAAQ,gBACxFpI,KAAKgI,cAAgBvB,aAAaC,SAAS1G,KAAK6H,YAAYM,QAASxG,EAAKG,MAAMsG,QAAQ,kBACxFpI,KAAKiI,WAAgBxB,aAAaC,SAAS1G,KAAK8H,SAASK,QAAYxG,EAAKG,MAAMsG,QAAQ,eACxFpI,KAAK+H,YAAYM,GAAG,SAAUrI,KAAKqD,UACnCrD,KAAKgI,cAAcK,GAAG,SAAUrI,KAAKqD,UACrCrD,KAAKiI,WAAWI,GAAG,SAAUrI,KAAKqD,UAEtCiF,uBACItI,KAAK+H,YAAYQ,IAAI,SAAUvI,KAAKqD,UACpCrD,KAAKgI,cAAcO,IAAI,SAAUvI,KAAKqD,UACtCrD,KAAKiI,WAAWM,IAAI,SAAUvI,KAAKqD,UAEvCmF,YACI,MAAM7G,EAAO3B,KAAKH,MAAM8B,KAClBiF,EAAK5G,KAAKA,KAAKO,MAAMmH,UAC3B,QAAKd,GACEA,EAAG1C,aAAevC,EAAKG,MAAMsG,QAAQpI,KAAKO,MAAMmH,UAM3De,eAAexH,GACX,OAAOjB,KAAKO,MAAMmH,WAAazG,EAAO,cAAgB,cAE1DyH,cAAczH,GACV,OAAOjB,KAAKO,MAAMmH,WAAazG,EAAO,UAAY,SAQtD0H,WAAW1H,GACP,OAAOjB,KAAKO,MAAMmH,WAAazG,EAEnCR,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,sCACnBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,WACXvB,MAAAC,cAACuE,OAAD,CAAQ9E,QAASJ,KAAKyH,YAAamB,QAAS5I,KAAKwI,aAAjD,QACA9H,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKkH,mBAAtB,iBAFJ,IAIInI,MAAAC,cAAA,MAAA,CAAKsB,UAAU,YAAY6G,KAAK,SAC5BpI,MAAAC,cAAA,SAAA,CAAQsB,UAAY,GAAEjC,KAAKyI,eAAe,eAAoBM,MAAO,CAACC,WAAYhJ,KAAK2I,WAAW,eAAmB,OAAS,MAAOvI,QAAS4D,GAAKhE,KAAKiJ,SAAS,CAACvB,SAAU,iBAA5K,eACAhH,MAAAC,cAAA,SAAA,CAAQsB,UAAY,GAAEjC,KAAKyI,eAAe,iBAAoBM,MAAO,CAACC,WAAYhJ,KAAK2I,WAAW,iBAAmB,OAAS,MAAOvI,QAAS4D,GAAKhE,KAAKiJ,SAAS,CAACvB,SAAU,mBAA5K,iBACAhH,MAAAC,cAAA,SAAA,CAAQsB,UAAY,GAAEjC,KAAKyI,eAAe,cAAoBM,MAAO,CAACC,WAAYhJ,KAAK2I,WAAW,cAAmB,OAAS,MAAOvI,QAAS4D,GAAKhE,KAAKiJ,SAAS,CAACvB,SAAU,gBAA5K,gBAGRhH,MAAAC,cAAA,MAAA,CAAKsB,UAAU,sBACXvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,oBAAoB8G,MAAO,CAACG,WAAYlJ,KAAK0I,cAAc,iBACtEhI,MAAAC,cAAA,WAAA,CAAUwI,IAAKnJ,KAAK2H,aAExBjH,MAAAC,cAAA,MAAA,CAAKsB,UAAU,oBAAoB8G,MAAO,CAACG,WAAYlJ,KAAK0I,cAAc,mBACtEhI,MAAAC,cAAA,WAAA,CAAUwI,IAAKnJ,KAAK6H,eAExBnH,MAAAC,cAAA,MAAA,CAAKsB,UAAU,oBAAoB8G,MAAO,CAACG,WAAYlJ,KAAK0I,cAAc,gBACtEhI,MAAAC,cAAA,WAAA,CAAUwI,IAAKnJ,KAAK8H,qBCzElCsB,qBAAqBzJ,eACvB0J,aAEI,IAAM1H,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAC2I,KAAD,CACH9G,UAAW,CAAC,YACZ+G,QAAS,CACL,CAACtI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,KACrC,CAACvI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,IACrC,CAACvI,KAAM,MAAOJ,MAAO,MAAO2I,MAAO,IACnC,CAACvI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,IACrC,CAACvI,KAAM,WAAYJ,MAAO,WAAY2I,MAAO,IAC7C,CAACvI,KAAM,SAAUJ,MAAO,SAAU2I,MAAO,KACzC,CAACvI,KAAM,UAAWJ,MAAO,UAAW2I,MAAO,MAE/CC,KAAM9H,EAAK+H,UACXC,UAAWC,GAAOA,EAAI3I,OAG9BR,SAEI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KAClBN,EAAWrB,KAAKH,MAAMwB,SAC5B,OAAOX,MAAAC,cAAA,MAAA,CAAKsB,UAAW,sBACnBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,gBACZvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,oBACZvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,iCACXN,EAAK+H,WAAa1J,KAAKqJ,aACvB1H,EAAK+H,WAAahJ,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKkI,oBAAtB,mBAI/BnJ,MAAAC,cAAC4B,WAAD,CACIC,UAAW,CAAC,WACZE,MAAOrB,EAASyI,gBAChBnH,aAAchB,EAAKoI,yBCnC7BC,kBAAkBrK,eACpBsK,aACI,MAAMtI,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOA,EAAK4H,QAAQvI,IAAIkJ,GAAUxJ,MAAAC,cAAA,KAAA,CAAIwJ,IAAKD,EAAOpI,MAAMmE,WACpDvF,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,SAC1B1H,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,YAC1B1H,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,SAC1B1H,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,QAC1B1H,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,SAC1B1H,MAAAC,cAAA,KAAA,KAAKuJ,EAAOpI,MAAMsG,QAAQ,eAGlC3H,SACI,MAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAWjC,KAAKoK,oBACxB1J,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gBACXvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,gCACXvB,MAAAC,cAAC2I,KAAD,CACI9G,UAAW,CAAC,YACZ+G,QAAS,CACL,CAACtI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,KACrC,CAACvI,KAAM,UAAWJ,MAAO,UAAW2I,MAAO,KAC3C,CAACvI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,IACrC,CAACvI,KAAM,MAAOJ,MAAO,MAAO2I,MAAO,IACnC,CAACvI,KAAM,OAAQJ,MAAO,OAAQ2I,MAAO,IACrC,CAACvI,KAAM,WAAYJ,MAAO,WAAY2I,MAAO,KAEjDC,KAAM9H,EAAK4H,QAAQvI,IAAIkJ,GAAUA,EAAOpI,MAAMuI,iBAC9CV,UAAWC,GAAOA,EAAI3I,OAE1BP,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAK2I,yBAAtB,mB,4IC9BdC,mBAAmB9D,aACrB7G,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,mBA+BMgE,MAAAA,IACrB,MAAMrC,EAAO3B,KAAKH,MAAM8B,WAClBA,EAAK6I,iBAAiBxK,KAAK4G,GAAG1C,cAjCrBnE,gBAAAC,KAAA,WAmCRqH,MAAOoD,EAAUC,WAElB1K,KAAKwH,aAnCXxH,KAAK2G,SAAWjG,MAAMkH,YACtB5H,KAAK4G,GAAK,KAEd+D,cACI,OAAI3K,KAAK2G,SAAiB3G,KAAK2G,SAASwB,QACjC,KAEXD,oBAEI,IAAMvG,EAAO3B,KAAKH,MAAM8B,KACpBA,EAAKiJ,KAAKC,KACV7K,KAAK4G,GAAKH,aAAaC,SAAS1G,KAAK2K,cAAehJ,EAAKiJ,KAAKC,IAC9D7K,KAAK4G,GAAGyB,GAAG,SAAUrI,KAAKqD,WAGlCyH,qBAEI,IAAMnJ,EAAO3B,KAAKH,MAAM8B,KACP3B,KAAK2K,eACNhJ,EAAKiJ,KAAKC,KAAO7K,KAAK4G,KAClC5G,KAAK4G,GAAKH,aAAaC,SAAS1G,KAAK2K,cAAehJ,EAAKiJ,KAAKC,KAGtEvC,uBAEQtI,KAAK4G,IACL5G,KAAK4G,GAAG2B,IAAI,SAAUvI,KAAKqD,UAWnCmF,YACI,QAAKxI,KAAK4G,IAGH5G,KAAKH,MAAM8B,KAAKiJ,KAAKC,KAAO7K,KAAK4G,GAAG1C,WAE/CzD,SACI,IAAMkB,EAAO3B,KAAKH,MAAM8B,KACxB,OAAOjB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,mBACnBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,oBACXvB,MAAAC,cAAA,MAAA,CAAKsB,UAAU,WACXvB,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKkH,mBAAtB,kBACElH,EAAKiJ,KAAKC,IAAMnK,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKoJ,0BAAtB,wBAChBpJ,EAAKiJ,KAAKI,KAAOtK,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKsJ,oBAAtB,aACjBtJ,EAAKiJ,KAAKM,MAAQxK,MAAAC,cAACuE,OAAD,CAAQ9E,QAASuB,EAAKwJ,qBAAtB,aACnBxJ,EAAKiJ,KAAKC,IACPnK,MAAAC,cAACuE,OAAD,CAAQ9E,QAASJ,KAAKwK,iBAAkB5B,QAAS5I,KAAKwI,aAAtD,SAGR9H,MAAAC,cAAA,MAAA,CAAKsB,UAAW,sBACZvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,qBACXN,EAAKiJ,KAAKC,IAAMnK,MAAAC,cAAA,WAAA,CAAUwI,IAAKnJ,KAAK2G,gB,4IC7DvDxD,qBAAqBxD,eACvBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,WAgBR,CAACiB,EAAMuD,KAEVxE,KAAKH,MAAMwD,UACXrD,KAAKH,MAAMwD,SAASpC,EAAMuD,KAjB9BxE,KAAKO,MAAQ,GAEjB6K,SACI,OAAIpL,KAAKO,MAAM8K,OACJrL,KAAKO,MAAM8K,OAAOC,IAEtB,KAEXC,aACI,OAAIvL,KAAKO,MAAM8K,OACJrL,KAAKO,MAAM8K,OAAO5G,QAEtB,KAQX+G,YAAYvK,GACR,IAAMqK,EAAMtL,KAAKoL,SACjB,OAAO1K,MAAAC,cAACkE,QAAD,CACH5D,KAAMA,EACNuD,MAAO8G,EAAIrK,GACXwK,WAAW,QACXpI,SAAUmB,GAASxE,KAAKqD,SAASpC,EAAMuD,GACvCM,aAAc,QAGtB4G,aAAazK,GACT,IAAMqK,EAAUtL,KAAKoL,SACrB,MAAM3G,EAAUzE,KAAKuL,aACrB,OAAO7K,MAAAC,cAAC2D,SAAD,CACHrD,KAAMA,EACNuD,MAAO8G,EAAIrK,GACXyB,MAAO+B,EAAQxD,GAAMD,IAAIwD,IAAK,CAC1BA,MAAOA,EACP3D,MAAO2D,KAEXnB,SAAUmB,GAASxE,KAAKqD,SAASpC,EAAMuD,KAG/CyF,aACI,IAAMqB,EAAUtL,KAAKoL,SACrB,MAAM3G,EAAUzE,KAAKuL,aACrB,OAAOI,OAAOC,KAAKN,GAAKtK,IAAIC,GAAQP,MAAAC,cAAA,KAAA,CAAIwJ,IAAKlJ,GACzCP,MAAAC,cAAA,KAAA,KAAKM,GACLP,MAAAC,cAAA,KAAA,UACuBkL,IAAlBpH,EAAQxD,GAAsBjB,KAAK0L,aAAazK,GAAQjB,KAAKwL,YAAYvK,MAItFR,SACI,OAAOC,MAAAC,cAAA,MAAA,CAAKsB,UAAW,2BACnBvB,MAAAC,cAAA,MAAA,CAAKsB,UAAW,oBACZvB,MAAAC,cAAA,QAAA,CAAOsB,UAAW,sBAAuB6J,YAAa,EAAGC,YAAa,GAClErL,MAAAC,cAAA,QAAA,KACKX,KAAKoL,UAAYpL,KAAKiK,kB,4IC7DzC+B,iBAAiBrM,eACnBC,YAAYC,GACRC,MAAMD,GADSE,gBAAAC,KAAA,iBAOFgE,IAEb,IAAMxD,EAAOR,KAAKH,MAAMW,KACxB,MAAMyL,EAAOjM,KAAKH,MAAMoM,KACxBA,EAAKC,OAAO1L,KAXGT,gBAAAC,KAAA,mBAaAgE,IAEf,IAAMxD,EAAOR,KAAKH,MAAMW,KACxB,MAAMyL,EAAOjM,KAAKH,MAAMoM,KACxBA,EAAKE,cAAc3L,KAjBJT,gBAAAC,KAAA,kBAmBDgE,IAEd,IAAMxD,EAAOR,KAAKH,MAAMW,KACxB,MAAMyL,EAAOjM,KAAKH,MAAMoM,KACxB,IAAMG,EAASpM,KAAKO,MAAM6L,OAC1BpI,EAAEqI,kBACFrM,KAAKiJ,SAASqD,IACH,CAACF,QAASE,EAAUF,UAE1BA,GACDH,EAAKM,OAAO/L,KA3BhBR,KAAKO,MAAQ,CACT6L,YAA8BP,IAAtBhM,EAAMW,KAAK4L,QAAuBvM,EAAMW,KAAK4L,QAEzDpM,KAAKC,GAAKS,MAAMkH,YA2BpBe,aACI,OAAO3I,KAAKH,MAAMoM,KAAKO,oBAAsBxM,KAAKH,MAAMW,KAE5DiM,WACI,OAAOzM,KAAKO,MAAM6L,OAEtBM,aACI,OAAO1M,KAAKC,GAAGkI,QAEnBwE,OACIzM,QAAQC,IAAI,gBAAiBH,KAAKH,MAAMW,KAAKoM,YAC7C5M,KAAKO,MAAM6L,QAAS,EAChBpM,KAAK8F,OACL9F,KAAK8F,OAAO6G,OAEZzM,QAAQC,IAAI,cAAeH,KAAK8F,QAGxCrF,SAEI,MAAMwL,EAAOjM,KAAKH,MAAMoM,KAClBzL,EAAOR,KAAKH,MAAMW,KAClBkC,EAAQlC,EAAKkC,MACnB,IAAMmK,KAAcnK,IAASA,EAAMyD,QAC7B2G,EAAStM,EAAKuM,MAAQF,EACtB9D,EAAQvI,EAAKwM,SAAWxM,EAAKwM,WAAa,KAC1CnM,EAAQL,EAAKoM,WACnB,OAAOlM,MAAAC,cAAA,KAAA,CAAIwJ,IAAKtJ,EAAOsI,IAAKnJ,KAAKC,GAAIgC,UAAWjC,KAAKyM,WAAa,SAAW,MACzE/L,MAAAC,cAAA,MAAA,CAAKsB,UAAWjC,KAAK2I,aAAe,SAAW,KAC1CI,MAAO,CAACkE,YAAajN,KAAKH,MAAMoN,aAChCC,YAAalN,KAAKmN,eAClBhB,cAAenM,KAAKoN,kBAErB1M,MAAAC,cAAA,OAAA,CAAMsB,UAAW6K,EAAS,OAAS,OAAQI,YAAalN,KAAKqN,kBALjE,IAOI3M,MAAAC,cAAA,OAAA,CAAMoI,MAAOA,GAAQlI,IAExBgM,GACDnM,MAAAC,cAAA,KAAA,KACK+B,EAAM1B,IAAIR,GACPE,MAAAC,cAACqL,SAAD,CACI7B,IAAK3J,EAAKoM,WACVX,KAAMA,EACNzL,KAAMA,EACNyM,YAAajN,KAAKH,MAAMoN,YAAY,GACpCzL,SAAUC,IAENA,EAAEqE,OAAS9F,KACXQ,EAAKkB,KAAOD,eCjFlCc,mBAAmB5C,eACrBC,YAAYC,GACRC,MAAMD,GACNG,KAAKO,MAAQ,CACT+M,aAAc,MAGVpB,aAAC1L,GAET,GADAN,QAAQC,IAAI,oBAAqBK,EAAOA,EAAKoM,WAAa,OACtD5M,KAAK2I,WAAWnI,GACpB,OAAO,IAAI+M,QAAQC,IACfxN,KAAKiJ,SAAS,CAACqE,aAAc9M,GAAO,KAC5BR,KAAKH,MAAM8C,cAAc3C,KAAKH,MAAM8C,aAAanC,GACrDgN,QAIZrB,cAAc3L,GAENR,KAAKH,MAAMgD,mBAAmB7C,KAAKH,MAAMgD,kBAAkBrC,GAEnE+L,OAAO/L,GACCR,KAAKH,MAAMkD,YAAY/C,KAAKH,MAAMkD,WAAWvC,GAErDmI,WAAWnI,GACP,OAAOR,KAAKO,MAAM+M,eAAiB9M,EAEvCgM,kBACI,OAAOxM,KAAKO,MAAM+M,aAEtBG,mBACIvN,QAAQC,IAAI,8BAA+BH,KAAKwM,kBAAkBI,YAClE5M,KAAKwM,kBAAkB9K,KAAKgL,aAAagB,iBAE7CjN,SACIP,QAAQC,IAAI,qBACZ,MAAMuC,EAAQ1C,KAAKH,MAAM6C,MACzB,OAAOhC,MAAAC,cAAA,MAAA,CAAKsB,UAAWjC,KAAKoK,oBACxB1J,MAAAC,cAAA,KAAA,KACK+B,EAAM1B,IAAIR,GACPE,MAAAC,cAACqL,SAAD,CACI7B,IAAK3J,EAAKoM,WACVX,KAAMjM,KACNQ,KAAMA,EACNyM,YAAa,EACbzL,SAAUC,GAAKjB,EAAKkB,KAAOD","file":"editor-jsx.ba108b421270c7e2cd426989a7363618.js","sourcesContent":["class ActionList extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: null\n        };\n    }\n    onClick = async li => {\n        console.log('ActionList.onClick', li);\n        await this.props.onClick(li.dataset.action);\n    }\n    render() {\n        // console.log('ActionList.render', this.state.item);\n        return <DropdownButton title={'Actions'} onClick={this.onClick} actions={this.state.item ? this.state.item.getActions().map(action => {\n            return {name: action.action, title: action.caption};\n        }) : []}/>\n    }\n}\n","class EditorFrontHostAppView extends ReactComponent {\n    renderDocumentView(document) {\n        if (!document.controller.getDocumentViewClass()) return <div>no document view for {document.controller.constructor.name}</div>;\n        return React.createElement(document.controller.getDocumentViewClass(), {\n            onCreate: c => document.view = c,\n            document: document,\n            ctrl    : document.controller\n        });\n    }\n    getTabs() {\n        console.log('EditorFrontHostAppView.getTabs', this.props.ctrl.documents);\n        return this.props.ctrl.documents.map(document => ({\n            name   : document.controller.model.getFullName(),\n            title  : document.controller.model.getFullName(),\n            content: this.renderDocumentView(document)\n        }));\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"EditorFrontHostAppView\">\n            <div className={'EditorFrontHostAppView__sidebar'}>\n                <div className={'tree-bar'}>\n                    {/*<div className=\"dropdown\">\n                        <button className=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" >\n                            <span>Actions</span> <span className=\"caret\"/>\n                        </button>\n                    </div>*/}\n                    <a href={ctrl.runAppLink} target=\"_blank\">Run Application</a>\n                    <div>\n                        <ActionList onCreate={c => ctrl.actionList = c} onClick={ctrl.onActionClick}/>\n                    </div>\n                </div>\n                <div className={'frame full'}>\n                    <div className={'frame__container'}>\n                        <TreeWidget\n                            classList={['full']}\n                            onCreate={c => ctrl.treeWidget2 = c}\n                            items={ctrl.items}\n                            onItemSelect={ctrl.onItemSelect2}\n                            onItemDoubleClick={ctrl.onItemDoubleClick2}\n                            onItemOpen={ctrl.onItemOpen2}\n                        />\n                    </div>\n                </div>\n                <Tab\n                    classList={['Tab-blue', 'full']}\n                    tabs={[\n                        {\n                            name   : 'properties',\n                            title  : 'Properties',\n                            content: <PropertyGrid\n                                onCreate={c => ctrl.pg = c}\n                                onChange={ctrl.onPropertyGrid2Change}\n                            />\n                        }\n                    ]}\n                />\n            </div>\n            <div className={'EditorFrontHostAppView__client'}>\n                <Tab\n                    classList={['full']}\n                    canClose={true}\n                    onTabClose={ctrl.onDocumentClose}\n                    onCreate={c => ctrl.tabWidget = c}\n                    tabs={this.getTabs()}\n                />\n            </div>\n            {ctrl.modal && React.createElement(ModalView, {ctrl: ctrl.modal})}\n        </div>;\n    }\n}\n","class ModalView extends ReactComponent {\n    render() {\n        const ctrl = this.props.ctrl;\n        return <Modal>\n            {React.createElement(ctrl.getViewClass(), {ctrl})}\n        </Modal>;\n    }\n}\n","class ChangeClassView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.class = null;\n    }\n    onCreate = async e => {\n        // console.log('NewDataSourceView.onCreate');\n        await this.props.ctrl.onCreate({\n            class: this.class.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">Change Field Class</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"class\">Class</label>\n                    <ComboBox id=\"class\" items={[\n                        {value: 'TextBoxField'},\n                        {value: 'ComboBoxField'},\n                        {value: 'TextAreaField'},\n                        {value: 'LinkField'},\n                        {value: 'ImageField'},\n                        {value: 'LabelField'},\n                        {value: 'DateField'},\n                        {value: 'TimeField'},\n                        {value: 'DateTimeField'},\n                        {value: 'CheckBoxField'},\n                        {value: 'FileField'},\n                        {value: 'PhoneField'},\n                        {value: 'PasswordField'},\n                    ]} value={ctrl.options.fieldCtrl.model.getClassName()} onCreate={c => this.class = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"change\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Change</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewActionView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name    = null;\n        this.caption = null;\n    }\n    onCreate = async e => {\n        // console.log('NewActionView.onCreate');\n        await this.props.ctrl.onCreate({\n            name   : this.name.getValue(),\n            caption: this.caption.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Action</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n                <div>\n                    <label htmlFor=\"caption\">Caption</label>\n                    <TextBox id=\"caption\" onCreate={c => this.caption = c} autocomplete={'off'}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewColumnView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name = null;\n    }\n    onCreate = async e => {\n        // console.log('NewParamView.onCreate');\n        await this.props.ctrl.onCreate({\n            name: this.name.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Column</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"columnName\">Name</label>\n                    <TextBox id=\"columnName\" onCreate={c => this.name = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewDataSourceView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name  = null;\n        this.class = null;\n    }\n    onCreate = async e => {\n        // console.log('NewDataSourceView.onCreate');\n        await this.props.ctrl.onCreate({\n            name    : this.name.getValue(),\n            class   : this.class.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView NewDataSourceView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Data Source</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id={'name'} onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n                <div>\n                    <label htmlFor=\"class\">Class</label>\n                    <ComboBox id=\"class\" items={[\n                        {value: 'DataSource', title: 'DataSource'},\n                        {value: 'SqlDataSource', title: 'SqlDataSource'},\n                    ]} onCreate={c => this.class = c} value={'SqlDataSource'}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <Button name=\"create\" classList={['btn', 'btn-primary']} onClick={this.onCreate}>Create</Button>\n                <Button classList={['btn', 'btn-default']} onClick={ctrl.onClose}>Close</Button>\n            </div>\n        </div>;\n    }\n}\n","class NewDatabaseView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.class    = null;\n        this.name     = null;\n        this.host     = null;\n        this.database = null;\n        this.user     = null;\n        this.password = null;\n    }\n    onCreate = async e => {\n        // console.log('NewDatabaseView.onCreate');\n        await this.props.ctrl.onCreate({\n            class   : this.class.getValue(),\n            name    : this.name.getValue(),\n            host    : this.host.getValue(),\n            database: this.database.getValue(),\n            user    : this.user.getValue(),\n            password: this.password.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView NewDatabaseView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Database</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"class\">Class</label>\n                    <ComboBox id={'class'} items={[\n                        {value: 'MySqlDatabase'     , title: 'MySqlDatabase'},\n                        {value: 'PostgreSqlDatabase', title: 'PostgreSqlDatabase'}\n                    ]} onCreate={c => this.class = c} value={'PostgreSqlDatabase'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id={'name'} value={'default'} onCreate={c => this.name = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"host\">Host</label>\n                    <TextBox id={'host'} value={'localhost'} onCreate={c => this.host = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"database\">Database</label>\n                    <TextBox id={'database'} value={'test'} onCreate={c => this.database = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"user\">User</label>\n                    <TextBox id={'user'} value={'test'} onCreate={c => this.user = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"user\">Password</label>\n                    <TextBox id={'password'} value={'123qwe'} onCreate={c => this.password = c} autocomplete={'off'}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <Button name=\"create\" classList={['btn', 'btn-primary']} onClick={this.onCreate}>Create</Button>\n                <Button classList={['btn', 'btn-default']} onClick={ctrl.onClose}>Close</Button>\n            </div>\n        </div>;\n    }\n}\n","class NewFieldView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.class   = null;\n        this.name    = null;\n        this.caption = null;\n        this.type    = null;\n    }\n    onCreate = async e => {\n        // console.log('NewFieldView.onCreate');\n        await this.props.ctrl.onCreate({\n            class  : this.class.getValue(),\n            name   : this.name.getValue(),\n            caption: this.caption.getValue() || this.name.getValue(),\n            type   : this.type.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Field</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"class\">Class</label>\n                    <ComboBox id=\"class\" items={[\n                        {value: 'TextBoxField'},\n                        {value: 'ComboBoxField'},\n                        {value: 'TextAreaField'},\n                        {value: 'LinkField'},\n                        {value: 'ImageField'},\n                        {value: 'LabelField'},\n                        {value: 'DateField'},\n                        {value: 'TimeField'},\n                        {value: 'DateTimeField'},\n                        {value: 'CheckBoxField'},\n                        {value: 'FileField'},\n                        {value: 'PhoneField'},\n                        {value: 'PasswordField'},\n                    ]} onCreate={c => this.class = c}/>\n                </div>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n                <div>\n                    <label htmlFor=\"caption\">Caption</label>\n                    <TextBox id=\"caption\" onCreate={c => this.caption = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"type\">Type</label>\n                    <ComboBox id=\"type\" value={''} items={[\n                        {value: '', title: ''},\n                        {value: 'string', title: 'string'},\n                        {value: 'number', title: 'number'},\n                        {value: 'boolean', title: 'boolean'},\n                        {value: 'object', title: 'object'},\n                        {value: 'date', title: 'date'},\n                    ]} onCreate={c => this.type = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewFormView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name    = null;\n        this.caption = null;\n        this.class   = null;\n    }\n    onCreate = async e => {\n        // console.log('NewDataSourceView.onCreate');\n        await this.props.ctrl.onCreate({\n            name   : this.name.getValue(),\n            caption: this.caption.getValue(),\n            class  : this.class.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Form</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n                <div>\n                    <label htmlFor=\"caption\">Caption</label>\n                    <TextBox id=\"caption\" onCreate={c => this.caption = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"formClass\">Class</label>\n                    <ComboBox id=\"formClass\" value={'TableForm'} items={[\n                        {value: 'RowForm'  , title: 'RowForm'},\n                        {value: 'TableForm', title: 'TableForm'},\n                        {value: 'Form'     , title: 'Form'},\n                    ]} onCreate={c => this.class = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewFormFromTableView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.page = null;\n        this.class = null;\n        this.name  = null;\n        this.caption  = null;\n    }\n    onCreate = async e => {\n        // console.log('NewDataSourceView.onCreate');\n        await this.props.ctrl.onCreate({\n            page   : this.page.getValue(),\n            class  : this.class.getValue(),\n            name   : this.name.getValue(),\n            caption: this.caption.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        const tableController = ctrl.options.tableController;\n        const pages = tableController.model.parent.parent.pageLinks.map(pageLink => ({value: pageLink.getName(), title: pageLink.getName()}))\n        console.log('pages:', pages);\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Form</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"table\">Table</label>\n                    <TextBox id=\"table\" disabled={true} value={tableController.model.getName()}/>\n                </div>\n                <div>\n                    <label htmlFor=\"page\">Page</label>\n                    <ComboBox id=\"page\" items={pages} value={pages[pages.length-1].value} onCreate={c => this.page = c}/>\n            </div>\n            <div>\n                <label htmlFor=\"class\">Form Class</label>\n                <ComboBox id=\"class\" value={'TableForm'} items={[\n                    {value: 'RowForm', title: 'RowForm'},\n                    {value: 'TableForm', title: 'TableForm'},\n                ]} onCreate={c => this.class = c}/>\n            </div>\n            <div>\n                <label htmlFor=\"name\">Name</label>\n                <TextBox id=\"name\" value={ctrl.options.tableController.model.getName()} onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n            </div>\n            <div>\n                <label htmlFor=\"caption\">Caption</label>\n                <TextBox id=\"caption\" onCreate={c => this.caption = c} autocomplete={'off'}/>\n            </div>\n        </div>\n        <div className=\"modal-footer\">\n            <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n            <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n        </div>\n    </div>;\n    }\n}\n","class NewKeyColumnView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name = null;\n    }\n    onCreate = async e => {\n        // console.log('NewParamView.onCreate');\n        await this.props.ctrl.onCreate({\n            name: this.name.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Key Column</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewPageView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name    = null;\n        this.caption = null;\n        this.startup = null;\n    }\n    onCreate = async e => {\n        // console.log('NewPageView.onCreate');\n        await this.props.ctrl.onCreate({\n            name   : this.name.getValue(),\n            caption: this.caption.getValue(),\n            startup: this.startup.getValue(),\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Page</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n                <div>\n                    <label htmlFor=\"caption\">Caption</label>\n                    <TextBox id=\"caption\" onCreate={c => this.caption = c} autocomplete={'off'}/>\n                </div>\n                <div>\n                    <label htmlFor=\"startup\">Startup</label>\n                    <ComboBox id=\"startup\" items={[\n                        {value: 'false', title: 'false'},\n                        {value: 'true', title: 'true'}\n                    ]} onCreate={c => this.startup = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewParamView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name = null;\n    }\n    onCreate = async e => {\n        // console.log('NewParamView.onCreate');\n        await this.props.ctrl.onCreate({\n            name: this.name.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Param</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <TextBox id=\"name\" onCreate={c => this.name = c} autocomplete={'off'} autoFocus={true}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class NewTableView extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.name = null;\n    }\n    onCreate = async e => {\n        // console.log('NewParamView.onCreate');\n        await this.props.ctrl.onCreate({\n            name: this.name.getValue()\n        });\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className=\"ModalView\">\n            <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" onClick={ctrl.onClose}><span>&times;</span></button>\n                <h4 className=\"modal-title\">New Table</h4>\n            </div>\n            <div className=\"modal-body\">\n                <div>\n                    <label htmlFor=\"tableName\">Name</label>\n                    <TextBox id=\"tableName\" onCreate={c => this.name = c}/>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button name=\"create\" type=\"button\" className=\"btn btn-primary\" onClick={this.onCreate}>Create</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={ctrl.onClose}>Close</button>\n            </div>\n        </div>;\n    }\n}\n","class DocumentView extends ReactComponent {\n    static createCM(textarea, value) {\n        const cm = CodeMirror.fromTextArea(textarea, {lineNumbers: true, styleActiveLine: true, matchBrackets: true});\n        cm.setOption('theme', 'cobalt');\n        cm.setValue(value);\n        return cm;\n    }\n}","class SqlDataSourceView extends DocumentView {\n    constructor(props) {\n        super(props);\n        this.singleRef   = React.createRef();\n        this.multipleRef = React.createRef();\n        this.countRef    = React.createRef();\n        this.state = {\n            selected: 'singleQuery'\n        };\n        this.singleQuery   = null;\n        this.multipleQuery = null;\n        this.countQuery    = null;\n    }\n    componentDidMount() {\n        const ctrl = this.props.ctrl;\n        this.singleQuery   = DocumentView.createCM(this.singleRef.current  , ctrl.model.getAttr('singleQuery'));\n        this.multipleQuery = DocumentView.createCM(this.multipleRef.current, ctrl.model.getAttr('multipleQuery'));\n        this.countQuery    = DocumentView.createCM(this.countRef.current   , ctrl.model.getAttr('countQuery'));\n        this.singleQuery.on('change', this.onChange);\n        this.multipleQuery.on('change', this.onChange);\n        this.countQuery.on('change', this.onChange);\n    }\n    componentWillUnmount() {\n        this.singleQuery.off('change', this.onChange);\n        this.multipleQuery.off('change', this.onChange);\n        this.countQuery.off('change', this.onChange);\n    }\n    isChanged() {\n        const ctrl = this.props.ctrl;\n        const cm = this[this.state.selected];\n        if (!cm) return false;\n        return cm.getValue() !== ctrl.model.getAttr(this.state.selected);\n    }\n    onChange = async (i, o) => {\n        // console.log('SqlDataSourceView.onChange');\n        await this.rerender();\n    }\n    getButtonClass(name) {\n        return this.state.selected === name ? 'btn-primary' : 'btn-default';\n    }\n    getVisibility(name) {\n        return this.state.selected === name ? 'visible' : 'hidden';\n    }\n    onSaveClick = async e => {\n        console.log('SqlDataSourceView.onSaveClick');\n        const ctrl = this.props.ctrl;\n        await ctrl.onSaveClick(this.state.selected, this[this.state.selected].getValue());\n        await this.rerender();\n    }\n    isSelected(name) {\n        return this.state.selected === name;\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={'SqlDataSourceView full flex-column'}>\n            <div className=\"toolbar\">\n                <Button onClick={this.onSaveClick} enabled={this.isChanged()}>Save</Button>\n                <Button onClick={ctrl.onCreateModelBack}>Model.back.js</Button>\n                &nbsp;\n                <div className=\"btn-group\" role=\"group\">\n                    <button className={`${this.getButtonClass('singleQuery')}`}   style={{fontWeight: this.isSelected('singleQuery')   ? 'bold' : null}} onClick={e => this.setState({selected: 'singleQuery'})}>singleQuery</button>\n                    <button className={`${this.getButtonClass('multipleQuery')}`} style={{fontWeight: this.isSelected('multipleQuery') ? 'bold' : null}} onClick={e => this.setState({selected: 'multipleQuery'})}>multipleQuery</button>\n                    <button className={`${this.getButtonClass('countQuery')}`}    style={{fontWeight: this.isSelected('countQuery')    ? 'bold' : null}} onClick={e => this.setState({selected: 'countQuery'})}>countQuery</button>\n                </div>\n            </div>\n            <div className=\"edit flex-max full\">\n                <div className=\"cm-container full\" style={{visibility: this.getVisibility('singleQuery')}}>\n                    <textarea ref={this.singleRef}/>\n                </div>\n                <div className=\"cm-container full\" style={{visibility: this.getVisibility('multipleQuery')}}>\n                    <textarea ref={this.multipleRef}/>\n                </div>\n                <div className=\"cm-container full\" style={{visibility: this.getVisibility('countQuery')}}>\n                    <textarea ref={this.countRef}/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n","class DatabaseView extends ReactComponent {\n    renderGrid() {\n        // console.log('DatabaseView.renderGrid');\n        const ctrl = this.props.ctrl;\n        return <Grid\n            classList={['flex-max']}\n            columns={[\n                {name: 'name', title: 'name', width: 100},\n                {name: 'type', title: 'type', width: 60},\n                {name: 'key', title: 'key', width: 60},\n                {name: 'auto', title: 'auto', width: 60},\n                {name: 'nullable', title: 'nullable', width: 60},\n                {name: 'dbType', title: 'dbType', width: 200},\n                {name: 'comment', title: 'comment', width: 100},\n            ]}\n            rows={ctrl.tableInfo}\n            getRowKey={row => row.name}\n        />;\n    }\n    render() {\n        // console.log('DatabaseView.render');\n        const ctrl = this.props.ctrl;\n        const document = this.props.document;\n        return <div className={'DatabaseView frame'}>\n            <div className={'client frame'}>\n                <div className={'frame__container'}>\n                    <div className={'divTableInfo full flex-column'}>\n                        {ctrl.tableInfo && this.renderGrid()}\n                        {ctrl.tableInfo && <Button onClick={ctrl.onCreateTableClick}>Create Table</Button>}\n                    </div>\n                </div>\n            </div>\n            <TreeWidget\n                classList={['sidebar']}\n                items={document.treeWidgetItems}\n                onItemSelect={ctrl.onTableSelect2}\n            />\n        </div>;\n    }\n}\n","class TableView extends ReactComponent {\n    renderRows() {\n        const ctrl = this.props.ctrl;\n        return ctrl.columns.map(column => <tr key={column.model.getName()}>\n            <td>{column.model.getAttr('name')}</td>\n            <td>{column.model.getAttr('caption')}</td>\n            <td>{column.model.getAttr('type')}</td>\n            <td>{column.model.getAttr('key')}</td>\n            <td>{column.model.getAttr('auto')}</td>\n            <td>{column.model.getAttr('nullable')}</td>\n        </tr>);\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={this.getCssClassNames()}>\n            <div className=\"client frame\">\n                <div className=\"frame__container flex-column\">\n                    <Grid\n                        classList={['flex-max']}\n                        columns={[\n                            {name: 'name', title: 'name', width: 100},\n                            {name: 'caption', title: 'caption', width: 100},\n                            {name: 'type', title: 'type', width: 60},\n                            {name: 'key', title: 'key', width: 60},\n                            {name: 'auto', title: 'auto', width: 60},\n                            {name: 'nullable', title: 'nullable', width: 60},\n                        ]}\n                        rows={ctrl.columns.map(column => column.model.getAttributes())}\n                        getRowKey={row => row.name}\n                    />\n                    <Button onClick={ctrl.onCreateFormButtonClick}>Create Form</Button>\n                </div>\n            </div>\n        </div>;\n    }\n}\n","class VisualView extends DocumentView {\n    constructor(props) {\n        super(props);\n        this.textarea = React.createRef();\n        this.cm = null;\n    }\n    getTextarea() {\n        if (this.textarea) return this.textarea.current;\n        return null;\n    }\n    componentDidMount() {\n        // console.log('VisualView.componentDidMount', this.getTextarea());\n        const ctrl = this.props.ctrl;\n        if (ctrl.data.js) {\n            this.cm = DocumentView.createCM(this.getTextarea(), ctrl.data.js);\n            this.cm.on('change', this.onChange);\n        }\n    }\n    componentDidUpdate() {\n        // console.log('componentDidUpdate', this.getTextarea());\n        const ctrl = this.props.ctrl;\n        const textarea = this.getTextarea();\n        if (textarea && ctrl.data.js && !this.cm) {\n            this.cm = DocumentView.createCM(this.getTextarea(), ctrl.data.js);\n        }\n    }\n    componentWillUnmount() {\n        // console.log('VisualView.componentWillUnmount');\n        if (this.cm) {\n            this.cm.off('change', this.onChange);\n        }\n    }\n    onControllerSave = async e => {\n        const ctrl = this.props.ctrl;\n        await ctrl.onControllerSave(this.cm.getValue());\n    }\n    onChange = async (instance, changeObj) => {\n        // console.log('VisualView.onChange', this.isChanged());\n        await this.rerender();\n    }\n    isChanged() {\n        if (!this.cm) {\n            return false;\n        }\n        return this.props.ctrl.data.js !== this.cm.getValue();\n    }\n    render() {\n        const ctrl = this.props.ctrl;\n        return <div className={'VisualView full'}>\n            <div className=\"full flex-column\">\n                <div className=\"toolbar\">\n                    <Button onClick={ctrl.onCreateModelBack}>Model.back.js</Button>\n                    {!ctrl.data.js && <Button onClick={ctrl.onCreateCustomController}>Controller.front.js</Button>}\n                    {!ctrl.data.jsx && <Button onClick={ctrl.onCreateCustomView}>View.jsx</Button>}\n                    {!ctrl.data.less && <Button onClick={ctrl.onCreateCustomStyle}>View.less</Button>}\n                    {ctrl.data.js &&\n                        <Button onClick={this.onControllerSave} enabled={this.isChanged()}>Save</Button>\n                    }\n                </div>\n                <div className={'edit flex-max full'}>\n                    <div className={'cm-container full'}>\n                        {ctrl.data.js && <textarea ref={this.textarea}/>}\n                    </div>\n                </div>\n            </div>\n        </div>;\n    }\n}\n","class PropertyGrid extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getObj() {\n        if (this.state.object) {\n            return this.state.object.obj;\n        }\n        return null;\n    }\n    getOptions() {\n        if (this.state.object) {\n            return this.state.object.options;\n        }\n        return null;\n    }\n    onChange = (name, value) => {\n        // console.log('PropertyGrid.onChange', name, value);\n        if (this.props.onChange) {\n            this.props.onChange(name, value);\n        }\n    }\n    renderInput(name) {\n        const obj = this.getObj();\n        return <TextBox\n            name={name}\n            value={obj[name]}\n            spellCheck=\"false\"\n            onChange={value => this.onChange(name, value)}\n            autocomplete={'off'}\n        />;\n    }\n    renderSelect(name) {\n        const obj     = this.getObj();\n        const options = this.getOptions();\n        return <ComboBox\n            name={name}\n            value={obj[name]}\n            items={options[name].map(value => ({\n                value: value,\n                title: value\n            }))}\n            onChange={value => this.onChange(name, value)}\n        />;\n    }\n    renderRows() {\n        const obj     = this.getObj();\n        const options = this.getOptions();\n        return Object.keys(obj).map(name => <tr key={name}>\n            <td>{name}</td>\n            <td>\n                {options[name] !== undefined ? this.renderSelect(name) : this.renderInput(name)}\n            </td>\n        </tr>);\n    }\n    render() {\n        return <div className={'PropertyGrid full frame'}>\n            <div className={'frame__container'}>\n                <table className={'PropertyGrid__table'} cellPadding={0} cellSpacing={0}>\n                    <tbody>\n                        {this.getObj() && this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        </div>;\n    }\n}\n","class TreeItem extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            opened: props.item.opened !== undefined ? props.item.opened : false\n        };\n        this.li = React.createRef();\n    }\n    onDivMouseDown = e => {\n        // console.log('TreeItem.onDivMouseDown', e.currentTarget);\n        const item = this.props.item;\n        const tree = this.props.tree;\n        tree.select(item);\n    }\n    onDivDoubleClick = e => {\n        // console.log('TreeItem.onDivDoubleClick');\n        const item = this.props.item;\n        const tree = this.props.tree;\n        tree.onDoubleClick(item);\n    }\n    onNodeMouseDown = e => {\n        // console.log('TreeItem.onNodeMouseDown', e.currentTarget);\n        const item = this.props.item;\n        const tree = this.props.tree;\n        const opened = this.state.opened;\n        e.stopPropagation();\n        this.setState(prevState => {\n            return {opened: !prevState.opened};\n        });\n        if (!opened) {\n            tree.onOpen(item);\n        }\n    }\n    isSelected() {\n        return this.props.tree.getSelectedItem() === this.props.item;\n    }\n    isOpened() {\n        return this.state.opened;\n    }\n    getElement() {\n        return this.li.current;\n    }\n    open() {\n        console.log('TreeItem.open', this.props.item.getTitle());\n        this.state.opened = true;\n        if (this.parent) {\n            this.parent.open();\n        } else {\n            console.log('this.parent', this.parent);\n        }\n    }\n    render() {\n        // console.log('TreeItem.render', this.props.item.getTitle());\n        const tree = this.props.tree;\n        const item = this.props.item;\n        const items = item.items;\n        const hasItems = !!(items && items.length);\n        const isNode = item.node || hasItems;\n        const style = item.getStyle ? item.getStyle() : null;\n        const title = item.getTitle();\n        return <li key={title} ref={this.li} className={this.isOpened() ? 'opened' : null}>\n            <div className={this.isSelected() ? 'active' : null}\n                 style={{paddingLeft: this.props.paddingLeft}}\n                 onMouseDown={this.onDivMouseDown}\n                 onDoubleClick={this.onDivDoubleClick}\n            >\n                <span className={isNode ? 'node' : 'leaf'} onMouseDown={this.onNodeMouseDown}/>\n                &nbsp;\n                <span style={style}>{title}</span>\n            </div>\n            {hasItems &&\n            <ul>\n                {items.map(item =>\n                    <TreeItem\n                        key={item.getTitle()}\n                        tree={tree}\n                        item={item}\n                        paddingLeft={this.props.paddingLeft+15}\n                        onCreate={c => {\n                            // console.log('onCreate', this.props.item.getTitle(), item.getTitle());\n                            c.parent = this;\n                            item.view = c;\n                        }}\n                    />\n                )}\n            </ul>\n            }\n        </li>;\n    }\n}\n","class TreeWidget extends ReactComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItem: null\n        };\n    }\n    async select(item) {\n        console.log('TreeWidget.select', item ? item.getTitle() : null);\n        if (this.isSelected(item)) return;\n        return new Promise(resolve => {\n            this.setState({selectedItem: item}, () => {\n                if (this.props.onItemSelect) this.props.onItemSelect(item);\n                resolve();\n            });\n        });\n    }\n    onDoubleClick(item) {\n        // console.log('TreeWidget.onDoubleClick', item);\n        if (this.props.onItemDoubleClick) this.props.onItemDoubleClick(item);\n    }\n    onOpen(item) {\n        if (this.props.onItemOpen) this.props.onItemOpen(item);\n    }\n    isSelected(item) {\n        return this.state.selectedItem === item;\n    }\n    getSelectedItem() {\n        return this.state.selectedItem;\n    }\n    scrollToSelected() {\n        console.log('TreeWidget.scrollToSelected', this.getSelectedItem().getTitle());\n        this.getSelectedItem().view.getElement().scrollIntoView();\n    }\n    render() {\n        console.log('TreeWidget.render'/*, this.props.items*/);\n        const items = this.props.items;\n        return <div className={this.getCssClassNames()}>\n            <ul>\n                {items.map(item =>\n                    <TreeItem\n                        key={item.getTitle()}\n                        tree={this}\n                        item={item}\n                        paddingLeft={5}\n                        onCreate={c => item.view = c}\n                    />\n                )}\n            </ul>\n        </div>;\n    }\n}\n"]}