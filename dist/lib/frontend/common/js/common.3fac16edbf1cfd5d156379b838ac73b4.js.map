{"version":3,"sources":["FrontHostApp.js","Helper.js"],"names":["FrontHostApp","constructor","this","alertCtrl","window","addEventListener","onWindowError","bind","onWindowUnhandledrejection","onWindowPopState","run","Error","e","console","log","preventDefault","err","reason","detail","logError","alert","title","message","error","doHttpRequest","data","warn","location","href","body","postJson","page","form","ds","name","action","doHttpRequest2","headers","url","post","JSON","stringify","contentType","startWait","response","fetch","method","Content-Type","ok","Array","from","entries","reduce","acc","header","value","json","status","statusText","text","stopWait","document","querySelector","classList","add","remove","getClassByName","className","eval","state","options","confirm","QForms","Helper","formatDate","date","format","YYYY","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","values","MM","DD","hh","mm","ss","replace","formatNumber","Intl","NumberFormat","today","now","Date","getStartOfDay","encodeObject","obj","eObj","encodeValue","decodeObject","decodeValue","raw","parse","dateTimeReviver","key","exec","createReactComponent","rootElement","type","props","children","let","component","onCreate","c","reactElement","React","createElement","ReactDOM","render","destroyReactComponent","root","unmountComponentAtNode","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","templateToJsString","params","hasOwnProperty","moveArrItem","arr","item","offset","oldIndex","indexOf","newIndex","length","splice","formatTime","_sec","sec","sign","Math","floor","SECOND","MINUTE","HOUR","DAY","fallbackCopyTextToClipboard","activeElement","textArea","style","top","left","position","appendChild","focus","select","execCommand","removeChild","copyTextToClipboard","navigator","clipboard","writeText","addMinutes","minutes","setMinutes","fillArray","n","keys"],"mappings":"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","file":"common.3fac16edbf1cfd5d156379b838ac73b4.js","sourcesContent":["class FrontHostApp {\n    constructor() {\n        // console.log('FrontHostApp.constructor');\n        this.alertCtrl = null;\n\n        // window\n        window.addEventListener('error'             , this.onWindowError.bind(this));\n        window.addEventListener('unhandledrejection', this.onWindowUnhandledrejection.bind(this))\n        window.addEventListener('popstate'          , this.onWindowPopState.bind(this));\n        // window.onunhandledrejection = this.onunhandledrejection.bind(this);\n        // window.onerror              = this.errorHandler.bind(this);\n        // window.onbeforeunload       = this.exit.bind(this);\n    }\n    async run() {\n        throw new Error('FrontHostApp.run not implemented');\n    }\n    async onWindowUnhandledrejection(e) {\n        console.log('FrontHostApp.onWindowUnhandledrejection'/*, e*/);\n        try {\n            e.preventDefault();\n            const err = e instanceof Error ? e : e.reason || e.detail.reason;\n            this.logError(err);\n            await this.alert({title: 'Unhandled Rejection', message: err.message});\n        } catch (err) {\n            console.error(`onWindowUnhandledrejection error: ${err.message}`);\n        }\n    }\n    async onWindowError(e) {\n        console.log('FrontHostApp.onWindowError', e);\n        try {\n            e.preventDefault();\n            const err = e.error;\n            this.logError(err);\n            // await this.alert({message: err.message});\n        } catch (err) {\n            console.error(`onWindowError error: ${err.message}`);\n        }\n    }\n    static async doHttpRequest(data) {\n        console.warn('FrontHostApp.doHttpRequest', 'POST', window.location.href, data);\n        const [headers, body] = await FrontHostApp.postJson(window.location.href, data);\n        console.warn(`body ${data.page}.${data.form}.${data.ds || data.name}.${data.action}:`, body);\n        return body;\n    }\n\n    logError(err) {\n        console.error('FrontHostApp.logError', err);\n    }\n\n    static async doHttpRequest2(data) {\n        console.warn('FrontHostApp.doHttpRequest2', 'POST', window.location.href, data);\n        const [headers, body] = await FrontHostApp.postJson(window.location.href, data);\n        console.warn(`body ${data.page}.${data.form}.${data.ds || data.name}.${data.action}:`, body);\n        return [headers, body];\n    }\n\n    static async postJson(url, data) {\n        return await FrontHostApp.post(url, JSON.stringify(data), 'application/json;charset=utf-8');\n    }\n\n    static async post(url, body, contentType) {\n        try {\n            FrontHostApp.startWait();\n            const response = await fetch(url, {\n                method: 'POST',\n                body  : body,\n                ...(contentType ? {headers: {'Content-Type': contentType}} : {}),\n            });\n            if (response.ok) {\n                const headers = Array.from(response.headers.entries()).reduce((acc, header) => {\n                    const [name, value] = header;\n                    acc[name] = value;\n                    return acc;\n                }, {});\n                // console.log('headers:', headers);\n                const body = await response.json();\n                return [headers, body];\n            }\n            throw new Error(`${response.status} ${response.statusText}: ${await response.text()}`);\n        } finally {\n            FrontHostApp.stopWait();\n        }\n    }\n\n    static startWait() {\n        document.querySelector('html').classList.add('wait');\n    }\n    static stopWait() {\n        document.querySelector('html').classList.remove('wait');\n    }\n    static getClassByName(className) {\n        if (eval(`typeof ${className}`) === 'function') {\n            return eval(className);\n        }\n        return null;\n    }\n    async onWindowPopState(e) {\n        console.log('FrontHostApp.onWindowPopState', e.state);\n    }\n    async alert(options) {\n        console.log('FrontHostApp.alert', options);\n        alert(options.message);\n    }\n    async confirm(options) {\n        console.log('FrontHostApp.confirm', options);\n        return confirm(options.message);\n    }\n}\n\nwindow.QForms.FrontHostApp = FrontHostApp;\n","class Helper {\n    /*static currentDate() {\n        const now = new Date();\n        let dd = now.getDate();if (dd < 10) dd = '0' + dd;\n        let mm = now.getMonth()+1;if (mm < 10) mm = '0' + mm;   /!*January is 0!*!/\n        const yyyy = now.getFullYear();\n        return [yyyy, mm, dd].join('-');\n    }*/\n\n    /*static currentDateTime() {\n        return Helper.currentDate() + ' ' + Helper.currentTime();\n    }*/\n\n    /*static currentTime() {\n        const now = new Date();\n        let hh = now.getHours();if (hh < 10) hh = '0' + hh;\n        let mm = now.getMinutes();if (mm < 10) mm = '0' + mm;\n        let ss = now.getSeconds();if (ss < 10) ss = '0' + ss;\n        return [hh, mm, ss].join(':');\n    }*/\n\n    static formatDate(date, format) {\n        const YYYY = date.getFullYear();\n        const M    = date.getMonth() + 1;\n        const D    = date.getDate();\n        const h    = date.getHours();\n        const m    = date.getMinutes();\n        const s    = date.getSeconds();\n        const MM = M < 10 ? `0${M}` : M;\n        const DD = D < 10 ? `0${D}` : D;\n        const hh = h < 10 ? `0${h}` : h;\n        const mm = m < 10 ? `0${m}` : m;\n        const ss = s < 10 ? `0${s}` : s;\n        const values = {YYYY, M, D, h, m, s, MM, DD, hh, mm, ss};\n        return format.replace(/\\{([\\w\\.]+)\\}/g, (text, name) => values[name] ? values[name] : text);\n    }\n\n    static formatNumber(value) {\n        return new Intl.NumberFormat('ru-RU').format(value);\n    }\n\n    static today() {\n        const now = new Date();\n        // return new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        return Helper.getStartOfDay(now);\n    }\n\n    static getStartOfDay(date) {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    }\n\n    static encodeObject(obj) {\n        const eObj = {};\n        for (const name in obj) {\n            eObj[name] = Helper.encodeValue(obj[name]);\n        }\n        return eObj;\n    }\n\n    static encodeValue(value) {\n        return JSON.stringify(value);\n    }\n\n    static decodeObject(eObj) {\n        if (!eObj) throw new Error('Helper.decodeObject: no object');\n        const obj = {};\n        for (const name in eObj) {\n            obj[name] = Helper.decodeValue(eObj[name]);\n        }\n        return obj;\n    }\n\n    static decodeValue(raw) {\n        try {\n            return JSON.parse(raw, Helper.dateTimeReviver);\n        } catch (err) {\n            console.log('raw:', raw);\n            throw err;\n        }\n    }\n\n    static dateTimeReviver(key, value) {\n        if (typeof value === 'string') {\n            const a =\n                /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{3})?(Z|([+-])(\\d{2}):(\\d{2}))?$/\n                .exec(value);\n            if (a) return new Date(value);\n        }\n        return value;\n    }\n    static createReactComponent(rootElement, type, props = {}, children) {\n        // console.log('Helper.createReactComponent', rootElement, type);\n        let component;\n        props.onCreate = c => component = c;\n        const reactElement = React.createElement(type, props, children);\n        ReactDOM.render(reactElement, rootElement);\n        return component;\n    }\n    static destroyReactComponent(root) {\n        ReactDOM.unmountComponentAtNode(root);\n    }\n\n    static readFileAsDataURL(file) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.readAsDataURL(file);\n        });\n    }\n\n    /*static readFileAsArrayBuffer(file) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.readAsArrayBuffer(file);\n        });\n    }*/\n\n    /*static convertBufferToBase64string(buffer) {\n        const array = new Uint8Array(buffer);\n        const binaryString = String.fromCharCode.apply(null, array);\n        return window.btoa(binaryString);\n    }*/\n    /*static createObjectUrl(buffer) {\n        const blob = new Blob([new Uint8Array(buffer)]);\n        return window.URL.createObjectURL(blob);\n    }*/\n\n    // append file as filed and all not file as json string\n    /*static createFormData(body) {\n        const formData = new FormData();\n        const fields = {};\n        for (const name in body) {\n            if (body[name] instanceof File) {\n                formData.append(name, body[name]);\n            } else {\n                fields[name] = body[name];\n            }\n        }\n        formData.append('__json', JSON.stringify(fields));\n        return formData;\n    }*/\n\n    /*static base64ToArrayBuffer(base64) {\n        const binaryString = window.atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }*/\n\n    static templateToJsString(value, params) {\n        return value.replace(/\\$\\{([\\w\\.@]+)\\}/g, (text, name) => {\n            if (params.hasOwnProperty(name)) {\n                return `Helper.decodeValue('${Helper.encodeValue(params[name])}')`;\n            }\n            return 'undefined';\n        });\n    }\n    static moveArrItem(arr, item, offset) {\n        const oldIndex = arr.indexOf(item);\n        if (oldIndex === -1) throw new Error('cannot find element');\n        const newIndex = oldIndex + offset;\n        if (newIndex < 0) throw new Error('cannot up top element');\n        if (newIndex > arr.length - 1) throw new Error('cannot down bottom element');\n        arr.splice(newIndex, 0,   arr.splice(oldIndex, 1)[0]);\n    }\n    static formatTime(_sec) {\n        // console.log('Helper.formatTime', sec);\n        let sec = _sec;\n        let sign = '';\n        if (_sec < 0) {\n            sec = -sec;\n            sign = '-';\n        }\n        let h = Math.floor(sec / 3600);\n        let m = Math.floor((sec - h * 3600) / 60);\n        let s = Math.floor(sec - h * 3600 - m * 60);\n        if (h < 10) h = '0' + h;\n        if (m < 10) m = '0' + m;\n        if (s < 10) s = '0' + s;\n        if (h === 0) {\n            return `${sign}${m}:${s}`;\n        } else {\n            return `${sign}${h}:${m}:${s}`;\n        }\n    }\n    static SECOND() {\n        return 1000;\n    }\n    static MINUTE() {\n        return 60 * Helper.SECOND();\n    }\n    static HOUR() {\n        return 60*Helper.MINUTE();\n    }\n    static DAY() {\n        return 24*Helper.HOUR();\n    }\n    static fallbackCopyTextToClipboard(text) {\n        // console.log('Helper.fallbackCopyTextToClipboard', text);\n        const activeElement = document.activeElement;\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.top = '0';       // Avoid scrolling to bottom\n        textArea.style.left = '0';\n        textArea.style.position = 'fixed';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        activeElement.focus();\n    }\n    static async copyTextToClipboard(text) {\n        console.log('Helper.copyTextToClipboard', text);\n        if (!navigator.clipboard) {\n            Helper.fallbackCopyTextToClipboard(text);\n            return;\n        }\n        await navigator.clipboard.writeText(text);\n    }\n    static addMinutes(date, minutes) {\n        // console.log('Helper.addMinutes', date, minutes);\n        date.setMinutes(date.getMinutes() + minutes);\n    }\n    static fillArray(n) {\n        return Array.from(Array(n).keys());\n    }\n}\n\nwindow.QForms.Helper = Helper;\n"]}