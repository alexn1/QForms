{"version":3,"sources":["FrontHostApp.js","Helper.js"],"names":["FrontHostApp","constructor","this","alertCtrl","window","addEventListener","onWindowError","bind","onWindowUnhandledrejection","onWindowPopState","run","Error","e","console","log","preventDefault","err","reason","detail","logError","alert","title","message","error","values","type","source","stack","data","href","location","platformVersion","getData","versions","platform","appVersion","app","logErrorUrl","fetch","method","headers","Content-Type","body","JSON","stringify","catch","options","doHttpRequest","warn","postJson","page","form","ds","name","action","doHttpRequest2","url","post","contentType","startWait","response","ok","Array","from","entries","reduce","acc","header","value","json","status","statusText","text","stopWait","document","querySelector","classList","add","remove","getClassByName","className","eval","state","Promise","resolve","reject","root","childElementCount","ctrl","AlertController","onClose","result","ReactDOM","unmountComponentAtNode","Helper","createReactComponent","getViewClass","confirm","ConfirmController","QForms","formatDate","date","format","YYYY","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","MM","DD","hh","mm","ss","replace","formatNumber","Intl","NumberFormat","today","now","Date","getStartOfDay","encodeObject","obj","eObj","encodeValue","decodeObject","decodeValue","raw","parse","dateTimeReviver","key","exec","rootElement","props","children","let","component","onCreate","c","reactElement","React","createElement","render","destroyReactComponent","readFileAsDataURL","file","reader","FileReader","onload","readAsDataURL","templateToJsString","params","hasOwnProperty","moveArrItem","arr","item","offset","oldIndex","indexOf","newIndex","length","splice","formatTime","_sec","sec","sign","Math","floor","SECOND","MINUTE","HOUR","DAY","fallbackCopyTextToClipboard","activeElement","textArea","style","top","left","position","appendChild","focus","select","execCommand","removeChild","copyTextToClipboard","navigator","clipboard","writeText","addMinutes","minutes","setMinutes","fillArray","n","keys"],"mappings":"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","file":"common.af9a238411e960e86accff026b12a980.js","sourcesContent":["class FrontHostApp {\n    constructor() {\n        // console.log('FrontHostApp.constructor');\n        this.alertCtrl = null;\n\n        // window\n        window.addEventListener('error'             , this.onWindowError.bind(this));\n        window.addEventListener('unhandledrejection', this.onWindowUnhandledrejection.bind(this))\n        window.addEventListener('popstate'          , this.onWindowPopState.bind(this));\n        // window.onunhandledrejection = this.onunhandledrejection.bind(this);\n        // window.onerror              = this.errorHandler.bind(this);\n        // window.onbeforeunload       = this.exit.bind(this);\n    }\n    async run() {\n        throw new Error('FrontHostApp.run not implemented');\n    }\n    async onWindowUnhandledrejection(e) {\n        console.log('FrontHostApp.onWindowUnhandledrejection'/*, e*/);\n        try {\n            e.preventDefault();\n            const err = e instanceof Error ? e : e.reason || e.detail.reason;\n            this.logError(err);\n            await this.alert({title: 'Unhandled Rejection', message: err.message});\n        } catch (err) {\n            console.error(`onWindowUnhandledrejection error: ${err.message}`);\n        }\n    }\n    async onWindowError(e) {\n        console.log('FrontHostApp.onWindowError', e);\n        try {\n            e.preventDefault();\n            const err = e.error;\n            this.logError(err);\n            // await this.alert({message: err.message});\n        } catch (err) {\n            console.error(`onWindowError error: ${err.message}`);\n        }\n    }\n    logError(err) {\n        console.error('FrontHostApp.logError', err);\n        const values = {\n            type   : 'error',\n            source : 'client',\n            message: err.message,\n            stack  : err.stack,\n            data   : {\n                href           : window.location.href,\n                platformVersion: this.getData().versions.platform,\n                appVersion     : this.getData().versions.app,\n            }\n        };\n        console.log(`POST ${this.getData().logErrorUrl}`, values);\n        fetch(this.getData().logErrorUrl, {\n            method : 'POST',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body   : JSON.stringify(values)\n        }).catch(err => {\n            console.error(err.message);\n        });\n    }\n    getData() {\n        if (!this.options.data) throw new Error('no data');\n        return this.options.data;\n    }\n    static async doHttpRequest(data) {\n        console.warn('FrontHostApp.doHttpRequest', 'POST', window.location.href, data);\n        const [headers, body] = await FrontHostApp.postJson(window.location.href, data);\n        console.warn(`body ${data.page}.${data.form}.${data.ds || data.name}.${data.action}:`, body);\n        return body;\n    }\n\n    static async doHttpRequest2(data) {\n        console.warn('FrontHostApp.doHttpRequest2', 'POST', window.location.href, data);\n        const [headers, body] = await FrontHostApp.postJson(window.location.href, data);\n        console.warn(`body ${data.page}.${data.form}.${data.ds || data.name}.${data.action}:`, body);\n        return [headers, body];\n    }\n\n    static async postJson(url, data) {\n        return await FrontHostApp.post(url, JSON.stringify(data), 'application/json;charset=utf-8');\n    }\n\n    static async post(url, body, contentType) {\n        try {\n            FrontHostApp.startWait();\n            const response = await fetch(url, {\n                method: 'POST',\n                body  : body,\n                ...(contentType ? {headers: {'Content-Type': contentType}} : {}),\n            });\n            if (response.ok) {\n                const headers = Array.from(response.headers.entries()).reduce((acc, header) => {\n                    const [name, value] = header;\n                    acc[name] = value;\n                    return acc;\n                }, {});\n                // console.log('headers:', headers);\n                const body = await response.json();\n                return [headers, body];\n            }\n            throw new Error(`${response.status} ${response.statusText}: ${await response.text()}`);\n        } finally {\n            FrontHostApp.stopWait();\n        }\n    }\n\n    static startWait() {\n        document.querySelector('html').classList.add('wait');\n    }\n    static stopWait() {\n        document.querySelector('html').classList.remove('wait');\n    }\n    static getClassByName(className) {\n        if (eval(`typeof ${className}`) === 'function') {\n            return eval(className);\n        }\n        return null;\n    }\n    async onWindowPopState(e) {\n        console.log('FrontHostApp.onWindowPopState', e.state);\n    }\n    alert(options) {\n        console.log('FrontHostApp.alert', options);\n        return new Promise((resolve, reject) => {\n            try {\n                const root = document.querySelector('.alert-root');\n                if (root.childElementCount === 0) {\n                    const ctrl = this.alertCtrl = new AlertController({\n                        ...options,\n                        onClose: result => {\n                            this.alertCtrl = null;\n                            ReactDOM.unmountComponentAtNode(root);\n                            resolve(result);\n                        }});\n                    // console.log('ctrl:', ctrl);\n                    const view = Helper.createReactComponent(root, ctrl.getViewClass(), {ctrl});\n                    // console.log('view', view);\n                } else {\n                    reject(new Error('alert already exists'));\n                }\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n    confirm(options) {\n        console.log('FrontHostApp.confirm', options);\n        return new Promise((resolve, reject) => {\n            try {\n                const root = document.querySelector('.alert-root');\n                if (root.childElementCount === 0) {\n                    const ctrl = this.alertCtrl = new ConfirmController({\n                        ...options,\n                        onClose: result => {\n                            this.alertCtrl = null;\n                            ReactDOM.unmountComponentAtNode(root);\n                            resolve(result);\n                        }});\n                    // console.log('ctrl:', ctrl);\n                    const view = Helper.createReactComponent(root, ctrl.getViewClass(), {ctrl});\n                    // console.log('view', view);\n                } else {\n                    reject(new Error('confirm already exists'));\n                }\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n}\n\nwindow.QForms.FrontHostApp = FrontHostApp;\n","class Helper {\n    /*static currentDate() {\n        const now = new Date();\n        let dd = now.getDate();if (dd < 10) dd = '0' + dd;\n        let mm = now.getMonth()+1;if (mm < 10) mm = '0' + mm;   /!*January is 0!*!/\n        const yyyy = now.getFullYear();\n        return [yyyy, mm, dd].join('-');\n    }*/\n\n    /*static currentDateTime() {\n        return Helper.currentDate() + ' ' + Helper.currentTime();\n    }*/\n\n    /*static currentTime() {\n        const now = new Date();\n        let hh = now.getHours();if (hh < 10) hh = '0' + hh;\n        let mm = now.getMinutes();if (mm < 10) mm = '0' + mm;\n        let ss = now.getSeconds();if (ss < 10) ss = '0' + ss;\n        return [hh, mm, ss].join(':');\n    }*/\n\n    static formatDate(date, format) {\n        const YYYY = date.getFullYear();\n        const M    = date.getMonth() + 1;\n        const D    = date.getDate();\n        const h    = date.getHours();\n        const m    = date.getMinutes();\n        const s    = date.getSeconds();\n        const MM = M < 10 ? `0${M}` : M;\n        const DD = D < 10 ? `0${D}` : D;\n        const hh = h < 10 ? `0${h}` : h;\n        const mm = m < 10 ? `0${m}` : m;\n        const ss = s < 10 ? `0${s}` : s;\n        const values = {YYYY, M, D, h, m, s, MM, DD, hh, mm, ss};\n        return format.replace(/\\{([\\w\\.]+)\\}/g, (text, name) => values[name] ? values[name] : text);\n    }\n\n    static formatNumber(value) {\n        return new Intl.NumberFormat('ru-RU').format(value);\n    }\n\n    static today() {\n        const now = new Date();\n        // return new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        return Helper.getStartOfDay(now);\n    }\n\n    static getStartOfDay(date) {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    }\n\n    static encodeObject(obj) {\n        const eObj = {};\n        for (const name in obj) {\n            eObj[name] = Helper.encodeValue(obj[name]);\n        }\n        return eObj;\n    }\n\n    static encodeValue(value) {\n        return JSON.stringify(value);\n    }\n\n    static decodeObject(eObj) {\n        if (!eObj) throw new Error('Helper.decodeObject: no object');\n        const obj = {};\n        for (const name in eObj) {\n            obj[name] = Helper.decodeValue(eObj[name]);\n        }\n        return obj;\n    }\n\n    static decodeValue(raw) {\n        try {\n            return JSON.parse(raw, Helper.dateTimeReviver);\n        } catch (err) {\n            console.log('raw:', raw);\n            throw err;\n        }\n    }\n\n    static dateTimeReviver(key, value) {\n        if (typeof value === 'string') {\n            const a =\n                /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{3})?(Z|([+-])(\\d{2}):(\\d{2}))?$/\n                .exec(value);\n            if (a) return new Date(value);\n        }\n        return value;\n    }\n    static createReactComponent(rootElement, type, props = {}, children) {\n        // console.log('Helper.createReactComponent', rootElement, type);\n        let component;\n        props.onCreate = c => component = c;\n        const reactElement = React.createElement(type, props, children);\n        ReactDOM.render(reactElement, rootElement);\n        return component;\n    }\n    static destroyReactComponent(root) {\n        ReactDOM.unmountComponentAtNode(root);\n    }\n\n    static readFileAsDataURL(file) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.readAsDataURL(file);\n        });\n    }\n\n    /*static readFileAsArrayBuffer(file) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.readAsArrayBuffer(file);\n        });\n    }*/\n\n    /*static convertBufferToBase64string(buffer) {\n        const array = new Uint8Array(buffer);\n        const binaryString = String.fromCharCode.apply(null, array);\n        return window.btoa(binaryString);\n    }*/\n    /*static createObjectUrl(buffer) {\n        const blob = new Blob([new Uint8Array(buffer)]);\n        return window.URL.createObjectURL(blob);\n    }*/\n\n    // append file as filed and all not file as json string\n    /*static createFormData(body) {\n        const formData = new FormData();\n        const fields = {};\n        for (const name in body) {\n            if (body[name] instanceof File) {\n                formData.append(name, body[name]);\n            } else {\n                fields[name] = body[name];\n            }\n        }\n        formData.append('__json', JSON.stringify(fields));\n        return formData;\n    }*/\n\n    /*static base64ToArrayBuffer(base64) {\n        const binaryString = window.atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }*/\n\n    static templateToJsString(value, params) {\n        return value.replace(/\\$\\{([\\w\\.@]+)\\}/g, (text, name) => {\n            if (params.hasOwnProperty(name)) {\n                return `Helper.decodeValue('${Helper.encodeValue(params[name])}')`;\n            }\n            return 'undefined';\n        });\n    }\n    static moveArrItem(arr, item, offset) {\n        const oldIndex = arr.indexOf(item);\n        if (oldIndex === -1) throw new Error('cannot find element');\n        const newIndex = oldIndex + offset;\n        if (newIndex < 0) throw new Error('cannot up top element');\n        if (newIndex > arr.length - 1) throw new Error('cannot down bottom element');\n        arr.splice(newIndex, 0,   arr.splice(oldIndex, 1)[0]);\n    }\n    static formatTime(_sec) {\n        // console.log('Helper.formatTime', sec);\n        let sec = _sec;\n        let sign = '';\n        if (_sec < 0) {\n            sec = -sec;\n            sign = '-';\n        }\n        let h = Math.floor(sec / 3600);\n        let m = Math.floor((sec - h * 3600) / 60);\n        let s = Math.floor(sec - h * 3600 - m * 60);\n        if (h < 10) h = '0' + h;\n        if (m < 10) m = '0' + m;\n        if (s < 10) s = '0' + s;\n        if (h === 0) {\n            return `${sign}${m}:${s}`;\n        } else {\n            return `${sign}${h}:${m}:${s}`;\n        }\n    }\n    static SECOND() {\n        return 1000;\n    }\n    static MINUTE() {\n        return 60 * Helper.SECOND();\n    }\n    static HOUR() {\n        return 60*Helper.MINUTE();\n    }\n    static DAY() {\n        return 24*Helper.HOUR();\n    }\n    static fallbackCopyTextToClipboard(text) {\n        // console.log('Helper.fallbackCopyTextToClipboard', text);\n        const activeElement = document.activeElement;\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.top = '0';       // Avoid scrolling to bottom\n        textArea.style.left = '0';\n        textArea.style.position = 'fixed';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        activeElement.focus();\n    }\n    static async copyTextToClipboard(text) {\n        console.log('Helper.copyTextToClipboard', text);\n        if (!navigator.clipboard) {\n            Helper.fallbackCopyTextToClipboard(text);\n            return;\n        }\n        await navigator.clipboard.writeText(text);\n    }\n    static addMinutes(date, minutes) {\n        // console.log('Helper.addMinutes', date, minutes);\n        date.setMinutes(date.getMinutes() + minutes);\n    }\n    static fillArray(n) {\n        return Array.from(Array(n).keys());\n    }\n}\n\nwindow.QForms.Helper = Helper;\n"]}