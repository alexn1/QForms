import * as React from 'react';
import { ReactComponent } from '../../ReactComponent';
export declare class Grid extends ReactComponent {
    columns: any;
    head: React.RefObject<any>;
    constructor(props: any);
    getActiveColumn(): any;
    setActiveColumn(column: any): void;
    getActiveRowKey(): any;
    setActiveRowKey(key: any): void;
    isRowActive(i: any, key: any): boolean;
    onCellMouseDown: (e: any) => Promise<void>;
    onRowMouseDown: (e: any) => Promise<void>;
    onCellDoubleClick: (e: any) => Promise<void>;
    onRowDoubleClick: (e: any) => Promise<void>;
    onKeyDown: (e: any) => Promise<void>;
    onCopy(): Promise<void>;
    findRow(key: any): any;
    onLeft(): Promise<void>;
    onUp(): Promise<void>;
    onRight(): Promise<void>;
    onDown(): Promise<void>;
    onEnter(): Promise<void>;
    onDelete(): Promise<void>;
    selectCell(key: any, j: any): Promise<void>;
    selectRow(key: any): Promise<void>;
    getMaxColumnWidth(column: any): number;
    onResizeDoubleClick: (e: any) => Promise<void>;
    getColumnWidth(i: any): any;
    renderColumns(): any;
    renderRows(): any;
    getRowKey(row: any): any;
    onCellViewCreate: (c: any) => void;
    onCellViewUnmount: (c: any) => void;
    onBodyScroll: (e: any) => Promise<void>;
    renderCell(row: any, column: any): any;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): JSX.Element;
    isLink(): boolean;
    onLinkClick: (e: any) => Promise<void>;
}
