{"version":3,"sources":["IndexView/IndexView.jsx"],"names":["IndexView","ReactComponent","renderModals","ctrl","this","props","React","createElement","modals","map","modal","Modal","key","id","toString","className","Button","classList","onClick","closeModal","htmlFor","TextBox","onCreate","onFolderNameCreate","onChange","onFolderNameChange","onAppNameChange","name","onCreateClick","render","console","log","style","backgroundColor","margin","ComboBox","value","currentAppFullName","items","getAppItems","size","width","onDoubleClick","run","onAppChange","currentAppEnv","getEnvItems","onEnvChange","data","nodeEnv","edit","btnCreate_Click"],"mappings":"MAAMA,kBAAkBC,eACpBC,eACI,MAAMC,EAAOC,KAAKC,MAAMF,KACxB,OACIG,MAAAC,cAAA,MAAA,KACKJ,EAAKK,OAAOC,IAAIC,GAAQJ,MAAAC,cAACI,MAAD,CAAOC,IAAKF,EAAMG,GAAGC,YAC1CR,MAAAC,cAAA,MAAA,CAAKQ,UAAU,yBACXT,MAAAC,cAAA,MAAA,CAAKQ,UAAU,iBACXT,MAAAC,cAAA,MAAA,CAAKQ,UAAU,gBACXT,MAAAC,cAACS,OAAD,CAAQC,UAAW,CAAC,SAAUC,QAASf,EAAKgB,YACxCb,MAAAC,cAAA,OAAA,KAAA,MAEJD,MAAAC,cAAA,KAAA,CAAIQ,UAAU,eAAd,oBAEJT,MAAAC,cAAA,MAAA,CAAKQ,UAAU,cACXT,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAOa,QAAQ,cAAf,eACAd,MAAAC,cAACc,QAAD,CAASR,GAAG,aAAaS,SAAUnB,EAAKoB,mBAAoBC,SAAUrB,EAAKsB,sBAE/EnB,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,QAAA,CAAOa,QAAQ,WAAf,oBACAd,MAAAC,cAACc,QAAD,CAASR,GAAG,UAAUW,SAAUrB,EAAKuB,oBAG7CpB,MAAAC,cAAA,MAAA,CAAKQ,UAAU,gBAEXT,MAAAC,cAACS,OAAD,CAAQW,KAAK,SAASV,UAAW,CAAC,MAAO,eAAgBC,QAASf,EAAKyB,eAAvE,UACAtB,MAAAC,cAACS,OAAD,CAAQC,UAAW,CAAC,MAAO,eAAgBC,QAASf,EAAKgB,YAAzD,eAQ5BU,SACIC,QAAQC,IAAI,oBACZ,MAAM5B,EAAOC,KAAKC,MAAMF,KACxB,OACIG,MAAAC,cAAA,MAAA,CAAKQ,UAAU,aACXT,MAAAC,cAAA,MAAA,CAAKQ,UAAU,YAAYiB,MAAO,CAACC,gBAAiB,SAChD3B,MAAAC,cAAA,MAAA,CAAKQ,UAAU,MAAMiB,MAAO,CAACE,OAAQ,WACjC5B,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAC4B,SAAD,CACIC,MAAOjC,EAAKkC,mBACZC,MAAOnC,EAAKoC,cACZC,KAAM,GACNR,MAAO,CAACS,MAAO,QACfC,cAAevC,EAAKwC,IACpBnB,SAAUrB,EAAKyC,eAGvBtC,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAA,MAAA,KACID,MAAAC,cAAC4B,SAAD,CACIC,MAAOjC,EAAK0C,cACZP,MAAOnC,EAAK2C,cACZtB,SAAUrB,EAAK4C,eAGvBzC,MAAAC,cAACS,OAAD,CAAQC,UAAW,CAAC,MAAO,cAAe,aAAcC,QAASf,EAAKwC,KAAtE,OACuB,gBAAtBxC,EAAK6C,KAAKC,SACP3C,MAAAC,cAACS,OAAD,CAAQC,UAAW,CAAC,MAAO,cAAe,aAAcC,QAASf,EAAK+C,MAAtE,QAEmB,gBAAtB/C,EAAK6C,KAAKC,SACP3C,MAAAC,cAACS,OAAD,CAAQC,UAAW,CAAC,MAAO,cAAe,aAAcC,QAASf,EAAKgD,iBAAtE,aAKf/C,KAAKF","file":"index-jsx.5e10c7a9419aa65937ec51e56f773530.js","sourcesContent":["class IndexView extends ReactComponent {\n    renderModals() {\n        const ctrl = this.props.ctrl;\n        return (\n            <div>\n                {ctrl.modals.map(modal =><Modal key={modal.id.toString()}>\n                    <div className=\"modal-dialog modal-sm\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <Button classList={['close']} onClick={ctrl.closeModal}>\n                                    <span>&times;</span>\n                                </Button>\n                                <h4 className=\"modal-title\">New Application</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div>\n                                    <label htmlFor=\"folderName\">Folder Name</label>\n                                    <TextBox id=\"folderName\" onCreate={ctrl.onFolderNameCreate} onChange={ctrl.onFolderNameChange}/>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"appName\">Application Name</label>\n                                    <TextBox id=\"appName\" onChange={ctrl.onAppNameChange}/>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                {/*<button name=\"create\" type=\"button\" className=\"btn btn-primary\">Create</button>*/}\n                                <Button name=\"create\" classList={['btn', 'btn-primary']} onClick={ctrl.onCreateClick}>Create</Button>\n                                <Button classList={['btn', 'btn-default']} onClick={ctrl.closeModal}>Close</Button>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>)}\n            </div>\n        );\n    }\n    render() {\n        console.log('IndexView.render');\n        const ctrl = this.props.ctrl;\n        return (\n            <div className=\"IndexView\">\n                <div className=\"container\" style={{backgroundColor: '#eee'}}>\n                    <div className=\"row\" style={{margin: '50px 0'}}>\n                        <div>\n                            <ComboBox\n                                value={ctrl.currentAppFullName}\n                                items={ctrl.getAppItems()}\n                                size={15}\n                                style={{width: '100%'}}\n                                onDoubleClick={ctrl.run}\n                                onChange={ctrl.onAppChange}\n                            />\n                        </div>\n                        <div>\n                            <div>\n                                <ComboBox\n                                    value={ctrl.currentAppEnv}\n                                    items={ctrl.getEnvItems()}\n                                    onChange={ctrl.onEnvChange}\n                                />\n                            </div>\n                            <Button classList={['btn', 'btn-primary', 'btn-block']} onClick={ctrl.run}>Run</Button>\n                            {ctrl.data.nodeEnv === 'development' &&\n                                <Button classList={['btn', 'btn-default', 'btn-block']} onClick={ctrl.edit}>Edit</Button>\n                            }\n                            {ctrl.data.nodeEnv === 'development' &&\n                                <Button classList={['btn', 'btn-default', 'btn-block']} onClick={ctrl.btnCreate_Click}>New...</Button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {this.renderModals()}\n            </div>\n        );\n    }\n}\n"]}