{"version":3,"sources":["IndexFrontHostApp.js"],"names":["IndexFrontHostApp","constructor","data","console","log","this","view","currentAppFullName","undefined","currentAppEnv","modals","folderNameTextBox","folderName","appName","init","appInfo","appInfos","fullName","envs","createView","document","querySelector","root","Helper","createReactComponent","IndexView","ctrl","getAppItems","map","value","title","getEnvItems","getAppInfo","env","find","onAppChange","app","Error","rerender","onEnvChange","run","e","href","window","location","edit","btnCreate_Click","push","id","getElement","focus","createApp","FrontHostApp","doHttpRequest","action","folder","name","closeModal","pop","onFolderNameCreate","textBox","onFolderNameChange","onAppNameChange","onCreateClick"],"mappings":"MAAAA,kBAEAC,YAAAC,GACAC,QAAAC,IAAA,gCAAAF,GACAG,KAAAH,KAAAA,EACAG,KAAAC,KAAA,KACAD,KAAAE,wBAAAC,EACAH,KAAAI,mBAAAD,EACAH,KAAAK,OAAA,GACAL,KAAAM,kBAAA,KACAN,KAAAO,WAAA,KACAP,KAAAQ,QAAA,KAGAC,OAEA,IAAAC,EAAAV,KAAAH,KAAAc,SAAA,GACAX,KAAAE,mBAAAQ,EAAAA,EAAAE,cAAAT,EACAH,KAAAI,cAAAM,GAAAA,EAAAG,KAAA,GAAAH,EAAAG,KAAA,QAAAV,EACAH,KAAAc,WAAAC,SAAAC,cAAA,UAGAF,WAAAG,GACAjB,KAAAC,KAAAiB,OAAAC,qBAAAF,EAAAG,UAAA,CAAAC,KAAArB,OAGAsB,cACA,OAAAtB,KAAAH,KAAAc,SAAAY,IAAAb,IAAA,CACAc,MAAAd,EAAAE,SACAa,MAAAf,EAAAE,YAIAc,cAEA,GAAA1B,KAAAE,mBAAA,CACA,MAAAQ,EAAAV,KAAA2B,WAAA3B,KAAAE,oBACA,GAAAQ,EAAA,OAAAA,EAAAG,KAAAU,IAAAK,IAAA,CAAAJ,MAAAI,EAAAH,MAAAG,KAEA,MAAA,GAGAD,WAAAf,GAEA,OAAAZ,KAAAH,KAAAc,SAAAkB,KAAAnB,GAAAA,EAAAE,WAAAA,GAGAkB,YAAAlB,IACAd,QAAAC,IAAA,gCAAAa,GACAZ,KAAAE,mBAAAU,EACA,IAAAF,EAAAV,KAAAH,KAAAc,SAAAkB,KAAAE,GAAAA,EAAAnB,WAAAA,GACA,IAAAF,EAAA,MAAA,IAAAsB,MAAA,cAAApB,GAEAZ,KAAAI,cAAAM,EAAAG,KAAA,GACAb,KAAAC,KAAAgC,YAGAC,YAAAN,IACA9B,QAAAC,IAAA,gCAAA6B,GACA5B,KAAAI,cAAAwB,GAGAO,IAAAC,IACA,IACAC,EADArC,KAAAE,qBACAmC,YAAArC,KAAAE,sBAAAF,KAAAI,iBACAN,QAAAC,IAAA,QAAAsC,GACAC,OAAAC,SAAAF,KAAAA,IAIAG,KAAAJ,IACA,IACAC,EADArC,KAAAE,qBACAmC,YAAArC,KAAAE,sBAAAF,KAAAI,iBACAN,QAAAC,IAAA,QAAAsC,GACAC,OAAAC,SAAAF,KAAAA,IAIAI,gBAAAL,MAAAA,IACApC,KAAAK,OAAAqC,KAAA,CAAAC,GAAA,UACA3C,KAAAC,KAAAgC,WACAjC,KAAAM,kBAAAsC,aAAAC,SAGAC,gBAAAvC,EAAAC,GACA,IAAAX,QAAAkD,aAAAC,cAAA,CACAC,OAAA,MACAC,OAAA3C,EACA4C,KAAA3C,IAEAV,QAAAC,IAAA,QAAAF,GACAA,EAAAc,WACAX,KAAAH,KAAAc,SAAAd,EAAAc,SACAX,KAAAE,mBAAAK,EAAA,IAAAC,EACAR,KAAAC,KAAAgC,YAIAmB,WAAA,KACAtD,QAAAC,IAAA,gCACAC,KAAAK,OAAAgD,MACArD,KAAAC,KAAAgC,YAEAqB,mBAAAC,IACAzD,QAAAC,IAAA,wCACAC,KAAAM,kBAAAiD,GAEAC,mBAAAjD,IAEAP,KAAAO,WAAAA,GAEAkD,gBAAAjD,IACAR,KAAAQ,QAAAA,GAEAkD,cAAAtB,MAAAA,IACAtC,QAAAC,IAAA,mCACAD,QAAAC,IAAAC,KAAAO,WAAAP,KAAAQ,SACAR,KAAAoD,mBACApD,KAAA8C,UAAA9C,KAAAO,WAAAP,KAAAQ","file":"index.cec422ea199f9b190d27fa847e82ad7d.js","sourcesContent":["class IndexFrontHostApp {\n\n    constructor(data) {\n        console.log('IndexFrontHostApp.constructor', data);\n        this.data = data;\n        this.view = null;\n        this.currentAppFullName = undefined;\n        this.currentAppEnv      = undefined;\n        this.modals = [];\n        this.folderNameTextBox = null;\n        this.folderName = null;\n        this.appName = null;\n    }\n\n    init() {\n        // console.log('IndexFrontHostApp.init');\n        const appInfo = this.data.appInfos[0];\n        this.currentAppFullName = appInfo ? appInfo.fullName : undefined;\n        this.currentAppEnv = appInfo && appInfo.envs[0] ? appInfo.envs[0] : undefined;\n        this.createView(document.querySelector('#root'));\n    }\n\n    createView(root) {\n        this.view = Helper.createReactComponent(root, IndexView, {ctrl: this});\n    }\n\n    getAppItems() {\n        return this.data.appInfos.map(appInfo => ({\n            value: appInfo.fullName,\n            title: appInfo.fullName\n        }));\n    }\n\n    getEnvItems() {\n        // console.log('IndexFrontHostApp.getEnvItems', this.currentAppFullName);\n        if (this.currentAppFullName) {\n            const appInfo = this.getAppInfo(this.currentAppFullName);\n            if (appInfo) return appInfo.envs.map(env => ({value: env, title: env}));\n        }\n        return [];\n    }\n\n    getAppInfo(fullName) {\n        // console.log('IndexFrontHostApp.getAppInfo', fullName);\n        return this.data.appInfos.find(appInfo => appInfo.fullName === fullName);\n    }\n\n    onAppChange = fullName => {\n        console.log('IndexFrontHostApp.onAppChange', fullName);\n        this.currentAppFullName = fullName;\n        const appInfo = this.data.appInfos.find(app => app.fullName === fullName);\n        if (!appInfo) throw new Error(`no appInfo ${fullName}`);\n        // console.log('appInfo:', appInfo);\n        this.currentAppEnv = appInfo.envs[0];\n        this.view.rerender();\n    }\n\n    onEnvChange = env => {\n        console.log('IndexFrontHostApp.onEnvChange', env);\n        this.currentAppEnv = env;\n    }\n\n    run = e => {\n        if (this.currentAppFullName) {\n            const href = `viewer/${this.currentAppFullName}/${this.currentAppEnv}/`;\n            console.log('href:', href);\n            window.location.href = href;\n        }\n    }\n\n    edit = e => {\n        if (this.currentAppFullName) {\n            const href = `editor/${this.currentAppFullName}/${this.currentAppEnv}/`;\n            console.log('href:', href);\n            window.location.href = href;\n        }\n    }\n\n    btnCreate_Click = async e => {\n        this.modals.push({id: 1});\n        await this.view.rerender();\n        this.folderNameTextBox.getElement().focus();\n    }\n\n    async createApp(folderName, appName) {\n        const data = await FrontHostApp.doHttpRequest({\n            action: 'new',\n            folder: folderName,\n            name  : appName\n        });\n        console.log('data:', data);\n        if (data.appInfos) {\n            this.data.appInfos = data.appInfos;\n            this.currentAppFullName = `${folderName}/${appName}`;\n            this.view.rerender();\n        }\n    }\n\n    closeModal = () => {\n        console.log('IndexFrontHostApp.closeModal');\n        this.modals.pop();\n        this.view.rerender();\n    }\n    onFolderNameCreate = textBox => {\n        console.log('IndexFrontHostApp.onFolderNameCreate');\n        this.folderNameTextBox = textBox;\n    }\n    onFolderNameChange = folderName => {\n        // console.log('IndexFrontHostApp.onFolderNameChange', folderName);\n        this.folderName = folderName;\n    }\n    onAppNameChange = appName => {\n        this.appName = appName;\n    }\n    onCreateClick = async e => {\n        console.log('IndexFrontHostApp.onCreateClick');\n        console.log(this.folderName, this.appName);\n        this.closeModal();\n        await this.createApp(this.folderName, this.appName);\n    }\n}\n"]}