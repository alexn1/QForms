import { Model } from '../Model';
import { JSONString, RawRow } from '../../../../types';
import { DataSource } from '../DataSource/DataSource';
import { Form } from '../Form/Form';
import { Page } from '../Page/Page';
import { Application } from '../Application/Application';
export declare class Field extends Model {
    init(): void;
    replaceThis(value: any): any;
    fillDefaultValue(row: any): void;
    valueToPageParams(row: RawRow): void;
    isChanged(row: RawRow): boolean;
    hasColumn(): boolean;
    getValue(row: RawRow): any;
    setValue(row: RawRow, value: any): void;
    rawToValue(rawValue: JSONString): any;
    valueToRaw(value: any): JSONString;
    getRawValue(row: RawRow): JSONString;
    getDefaultDataSource(): DataSource;
    getType(): string;
    getForm(): Form;
    getPage(): Page;
    getApp(): Application;
    isReadOnly(): boolean;
    isNotNull(): boolean;
    isNullable(): boolean;
    getWidth(): number | null;
    getFullName(): string;
    isParam(): boolean;
    validateOnChange(): boolean;
    validateOnBlur(): boolean;
    getCaption(): string;
}
