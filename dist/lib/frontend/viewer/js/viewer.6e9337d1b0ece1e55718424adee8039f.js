class EventEmitter{constructor(){this.list={}}on(e,t){this.list[e]||(this.list[e]=[]),this.list[e].push(t)}off(e,t){t=this.list[e].indexOf(t);if(-1===t)throw new Error("cannot find cb for "+e);this.list[e].splice(t,1)}async emit(e,t){if(this.list[e]&&this.list[e].length)for(const r of await Promise.allSettled(this.list[e].map(e=>e(t))))if("rejected"===r.status)throw r.reason}}class LoginFrontHostApp extends FrontHostApp{constructor(e){console.log("LoginFrontHostApp.constructor",e),super(),this.data=e}async run(){console.log("LoginFrontHostApp.run");const e=LoginController.create(this);var t=document.querySelector(`.${e.getViewClassCssBlockName()}__root`);Helper.createReactComponent(t,e.getViewClass(),{ctrl:e})}getText(){return this.data.text}getData(){return this.data}}class ViewerFrontHostApp extends FrontHostApp{constructor(e={}){if(!e.data)throw new Error("no data");super(),this.options=e,this.applicationController=null}async run(){console.log("ViewerFrontHostApp.run",this.getData());const e=new Application(this.getData());e.init();const t=this.applicationController=ApplicationController.create(e,this);t.init();var r=`.${t.getViewClass().name}__root`,o=document.querySelector(r);if(!o)throw new Error("no root element: "+r);t.createView(o);try{await t.connect()}catch(e){this.logError(e)}}async onWindowPopState(e){await this.applicationController.onWindowPopState(e)}logError(e){console.error("FrontHostApp.logError",e);e={type:"error",source:"client",message:e.message,stack:e.stack,data:{href:window.location.href,platformVersion:this.getData().versions.platform,appVersion:this.getData().versions.app}};console.log("POST "+this.getData().logErrorUrl,e),fetch(this.getData().logErrorUrl,{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(e)}).catch(e=>{console.error(e.message)})}getData(){if(!this.options.data)throw new Error("no data");return this.options.data}alert(s){return console.log("ViewerFrontHostApp.alert",s),new Promise((t,r)=>{try{const o=document.querySelector(".alert-root");if(0===o.childElementCount){const e=this.alertCtrl=new AlertController({...s,onClose:e=>{this.alertCtrl=null,ReactDOM.unmountComponentAtNode(o),t(e)}});Helper.createReactComponent(o,e.getViewClass(),{ctrl:e})}else r(new Error("alert already exists"))}catch(e){r(e)}})}confirm(s){return console.log("ViewerFrontHostApp.confirm",s),new Promise((t,r)=>{try{const o=document.querySelector(".alert-root");if(0===o.childElementCount){const e=this.alertCtrl=new ConfirmController({...s,onClose:e=>{this.alertCtrl=null,ReactDOM.unmountComponentAtNode(o),t(e)}});Helper.createReactComponent(o,e.getViewClass(),{ctrl:e})}else r(new Error("confirm already exists"))}catch(e){r(e)}})}}window.QForms.ViewerFrontHostApp=ViewerFrontHostApp;class WebSocketClient{constructor(e={}){if(!(this.options=e).applicationController)throw new Error("no options.applicationController");if(!e.protocol)throw new Error("no options.protocol");this.url=`${e.protocol}://${window.location.host}/?`+this.createUriParamsString(e),this.webSocket=null,this.refreshTimeoutId=null,this.RECONNECT_TIMEOUT=10,this.REFRESH_TIMEOUT=3600}createUriParamsString(e){const t={route:e.route,uuid:e.uuid,userId:e.userId,version:this.getApp().getModel().getData().versions.app};return Object.keys(t).map(e=>e+"="+encodeURIComponent(t[e])).join("&")}connect(){return console.log("WebSocketClient.connect",this.url),new Promise((t,r)=>{this.webSocket=new WebSocket(this.url),this.webSocket.onclose=async e=>{this.webSocket=null,r(new Error("Connection failed "+e.code))},this.webSocket.onopen=e=>{this.webSocket.onclose=this.onClose.bind(this),this.webSocket.onmessage=this.onMessage.bind(this),this.startRefreshTimeout(),t(e)}})}async onRefreshTimeout(){this.refreshTimeoutId=null,this.send("ping"),this.startRefreshTimeout()}send(e){console.log("WebSocketClient.send",e),this.webSocket.send(e)}startRefreshTimeout(){this.refreshTimeoutId=setTimeout(this.onRefreshTimeout.bind(this),1e3*this.REFRESH_TIMEOUT)}resetRefreshTimeout(){this.refreshTimeoutId&&(clearTimeout(this.refreshTimeoutId),this.refreshTimeoutId=null)}async reconnect(){console.log("WebSocketClient.reconnect");try{await this.connect()}catch(e){console.error(e),console.log(`waiting ${this.RECONNECT_TIMEOUT} sec for socket reconnect...`),setTimeout(async()=>this.reconnect(),1e3*this.RECONNECT_TIMEOUT)}}async onClose(e){console.error("WebSocketClient.onClose",e),this.getApp().getHostApp().logError(new Error(`websocket close ${this.getApp().getModel().getDomain()}/`+this.getApp().getModel().getName())),this.resetRefreshTimeout(),this.webSocket.onclose=null,this.webSocket.onmessage=null,this.webSocket=null,await this.reconnect()}async onMessage(e){console.log("WebSocketClient.onMessage",JSON.parse(e.data));e=JSON.parse(e.data);"result"===e.type&&(this.getApp().getView().disableRerender(),await this.getApp().getModel().emitResult(e.data),this.getApp().getView().enableRerender(),this.getApp().getView().rerender())}getApp(){return this.options.applicationController}}class Controller extends EventEmitter{constructor(){super(),this.view=null}onViewCreate=e=>{this.view=e};async rerender(){if(this.view)return this.view.rerender();console.error(this.constructor.name+".rerender no view")}getView(){return this.view}getViewClass(){throw new Error(this.constructor.name+".getViewClass not implemented")}createElement(){return React.createElement(this.getViewClass(),{ctrl:this,onCreate:this.onViewCreate})}}class AlertController extends Controller{constructor(e){if(super(),!(this.options=e).message)throw new Error("no message");if(!e.onClose)throw new Error("no onClose")}getViewClass(){return AlertView}close(e){this.options.onClose(e)}onOkButtonClick=async e=>{this.close(!0)};onCloseClick=async e=>{this.close(!1)};onKeyDown=async e=>{"Escape"===e.key&&this.close(!1)}}class ConfirmController extends Controller{constructor(e){if(super(),!(this.options=e).message)throw new Error("no message");if(!e.onClose)throw new Error("no onClose")}getViewClass(){return ConfirmView}close(e){this.options.onClose(e)}onYesClick=e=>{this.close(!0)};onCloseClick=e=>{this.close(!1)};onKeyDown=async e=>{"Escape"===e.key&&this.close(!1)}}class LoginController extends Controller{constructor(e){super(),console.log(this.constructor.name+".constructor"),this.frontHostApp=e}static create(e){var t=e.getData();if(!t.name)throw new Error("no app name");t=FrontHostApp.getClassByName(t.name+"LoginController");const r=t||LoginController;return new r(e)}getViewClass(){return LoginView}getText(){return this.frontHostApp.getText()}getFrontHostApp(){return this.frontHostApp}getViewClassCssBlockName(){return this.getViewClass().name}}class ModalController extends Controller{constructor(e={}){if(super(),!e.app)throw new Error("no app");if(!e.id)throw new Error("no id");this.options=e}getId(){return this.options.id}getApp(){return this.options.app}async close(){await this.getApp().closeModal(this),this.options.onClose&&this.options.onClose()}}class ImageDialogController extends ModalController{constructor(e){if(super(e),!e.src)throw new Error("no src")}getViewClass(){return console.log("ImageDialogController.getViewClass"),ImageDialogView}getSrc(){return this.options.src}onCloseClick=async e=>{await this.close()};onKeyDown=async e=>{"Escape"===e.key&&await this.close()};onImageClick=async e=>{console.log("ImageDialogController.onImageClick"),await this.close()}}class ModelController extends Controller{constructor(e,t){super(),this.model=e,this.parent=t,this.deinited=!1}init(){}deinit(){if(this.deinited)throw new Error(this.model.getFullName()+": controller already deinited");this.deinited=!0}getModel(){return this.model}getParent(){return this.parent}getTitle(){return this.getModel().getCaption()}getViewClass(){const model=this.getModel();if(!model.isAttr("viewClass"))throw new Error(this.constructor.name+" not supports view");const viewClassName=model.getAttr("viewClass");return viewClassName?eval(viewClassName):null}}window.QForms.ModelController=ModelController;class ApplicationController extends ModelController{constructor(e,t){super(e,null),this.frontHostApp=t,this.lastId=0,this.activePage=null,this.modals=[],this.statusbar=null,this.homePageName=null,this.webSocketClient=null}static create(e,t){var r=FrontHostApp.getClassByName(e.getName()+"ApplicationController");const o=r||ApplicationController;return new o(e,t)}static isDebugMode(){return"1"===Search.getObj().debug}init(){super.init(),this.model.on("request",this.onRequest);var e=this.model.data.pages[0];this.activePage=e?this.createPage(e,{modal:!1,params:this.getGlobalParams()}):null,document.title=this.getTitle(),document.documentElement.classList.add(Helper.inIframe()?"iframe":"not-iframe");e=this.getActivePageName();this.homePageName=e||document.title}deinit(){this.model.off("request",this.onRequest),super.deinit()}getViewClass(){return super.getViewClass()||ApplicationView}createView(e){this.view=Helper.createReactComponent(e,this.getViewClass(),{ctrl:this}),this.statusbar&&this.statusbar.setLastQueryTime(this.model.getAttr("time"))}onRequest=async e=>{console.log("onRequest",e),this.statusbar&&this.statusbar.setLastQueryTime(e.time),this.getModel().getData().versions.app&&this.getModel().getData().versions.app!==e.remoteAppVersion&&this.createVersionNotificationIfNotExists()};createVersionNotificationIfNotExists(){if(!document.querySelector(".version-notification")){const e=document.createElement("div");e.innerHTML=this.getModel().getText().application.versionNotification,e.className="version-notification",document.querySelector(`.${this.getView().getCssBlockName()}__body`).append(e)}}getGlobalParams(){return{}}createPage(e,t){if(void 0===t.modal)throw new Error("no options.modal");const r=new Page(e,this.model,t);r.init();const o=PageController.create(r,this,"c"+this.getNextId());return o.init(),o}async openPage(e){if(console.log("ApplicationController.openPage",e),!e.name)throw new Error("no name");if(e.key)throw new Error("openPage: key param is deprecated");var t=this.findPageControllerByPageNameAndKey(e.name,null);if(t)return this.onPageSelect(t),t;t=(await this.model.request({action:"page",page:e.name,newMode:!!e.newMode,params:e.params||{}})).page;if(void 0===e.modal&&(e.modal=!0),!e.onClose){const o=document.activeElement;e.onClose=()=>{o&&o.focus()}}const r=this.createPage(t,e);return r.isModal()?this.addModal(r):this.addPage(r),await this.rerender(),r}addModal(e){this.modals.push(e)}removeModal(e){var t=this.modals.indexOf(e);if(-1===t)throw new Error("cannot find modal: "+e.getId());this.modals.splice(t,1)}getNextId(){return this.lastId++,this.lastId}getNewId(){return"c"+this.getNextId()}addPage(e){this.activePage&&this.closePage(this.activePage),this.activePage=e,document.title=this.getTitle()}findPageControllerByPageNameAndKey(e,t){return this.activePage&&this.activePage.model.getName()===e&&this.activePage.model.getKey()===t?this.activePage:null}onPageSelect(e){console.log("ApplicationController.onPageSelect",e.model.getName())}async closePage(e){if(console.log("ApplicationController.closePage",e.model.getFullName()),-1<this.modals.indexOf(e))this.modals.splice(this.modals.indexOf(e),1);else{if(this.activePage!==e)throw new Error("page not found");this.activePage=null,document.title=""}await this.rerender(),e.deinit(),e.model.deinit()}async onActionClick(e){console.log("ApplicationController.onActionClick",e)}getMenuItemsProp(){return[...this.model.data.menu?Object.keys(this.model.data.menu).map(e=>({name:e,title:e,items:this.model.data.menu[e].map(e=>({type:e.type,name:e.page||e.action,title:e.caption}))})):[],...this.model.getUser()?[{name:"user",title:this.model.getDomain()+"/"+this.model.getUser().login,items:[{type:"custom",name:"logout",title:"Logout"}]}]:[]]}onStatusbarCreate=e=>{this.statusbar=e};onLogout=async()=>{console.log("ApplicationController.onLogout");await this.model.request({action:"logout"});location.href=this.getRootPath()};onMenuItemClick=async(e,t,r)=>{if(console.log("ApplicationController.onMenuItemClick",e,t,r),"page"===t)await this.openPage({name:r,modal:!1}),history.pushState({pageName:r},"",PageController.createLink({page:r}));else if("action"===t)try{if(!await this.onActionClick(r))throw new Error(`no handler for action '${r}'`)}catch(e){console.error(e),await this.alert({message:e.message})}else{if("custom"!==t||"logout"!==r)throw new Error(`unknown menu type/name: ${t}/`+r);await this.onLogout()}};getActivePageName(){return this.activePage?this.activePage.getModel().getName():null}async onWindowPopState(e){console.log("ApplicationController.onWindowPopState",e.state),await this.openPage({name:e.state?e.state.pageName:this.homePageName,modal:!1})}getTitle(){return this.activePage?this.activePage.getTitle()+" - "+this.getModel().getCaption():this.getModel().getCaption()}invalidate(){this.activePage&&this.activePage.invalidate(),this.modals.filter(e=>e instanceof PageController).forEach(e=>e.invalidate())}async alert(e){e.title||(e.title=this.getModel().getText().application.alert);const t=document.activeElement;try{return await this.frontHostApp.alert(e)}finally{t&&t.focus()}}async confirm(e){e.title||(e.title=this.getModel().getText().application.confirm),e.yesButton||(e.yesButton=this.getModel().getText().confirm.yes),e.noButton||(e.noButton=this.getModel().getText().confirm.no);const t=document.activeElement;try{return await this.frontHostApp.confirm(e)}finally{t&&t.focus()}}getRootPath(){return"/"}async openModal(e){this.addModal(e),await this.rerender()}async closeModal(e){this.removeModal(e),await this.rerender()}getHostApp(){return this.frontHostApp}async connect(){var e=this.getModel().getData();this.webSocketClient=new WebSocketClient({applicationController:this,protocol:"development"===e.nodeEnv?"ws":"wss",route:e.route,uuid:e.uuid,userId:e.user?e.user.id:null}),await this.webSocketClient.connect()}async rpc(e,t){return await this.getModel().rpc(e,t)}}window.QForms.ApplicationController=ApplicationController;class FieldController extends ModelController{static create(e,t){const r=e.getPage(),o=e.getForm();var s=FrontHostApp.getClassByName(""+r.getName()+o.getName()+e.getName()+"FieldController"),i=""+t.model.getClassName()+e.getClassName()+"Controller",a=FrontHostApp.getClassByName(i);if(!a)throw new Error("no class "+i);const l=s||a;return new l(e,t)}valueToString(e){switch(typeof e){case"string":return e;case"object":return null===e?"":e instanceof Date?e.toISOString():JSON.stringify(e,null,4);case"number":case"boolean":return e.toString();case"undefined":return"";default:throw new Error(this.model.getFullName()+`: unknown value type: ${typeof e}, value: `+e)}}stringToValue(e){var t=this.model.getType();if(""===e.trim())return null;if("object"===t||"boolean"===t)return JSON.parse(e);if("date"===t){const r=new Date(e);if("Invalid Date"===r.toString())throw new Error(this.getApp().getModel().getText().error.invalidDate+": "+e);return r}if("number"!==t)return e;e=Number(e);if(isNaN(e))throw new Error(this.getApp().getModel().getText().error.notNumber);return e}getViewStyle(e){return null}async openPage(e){return this.getParent().openPage(e)}getForm(){return this.parent}getPage(){return this.parent.parent}getApp(){return this.parent.parent.parent}isVisible(){return"true"===this.getModel().getAttr("visible")}isAutoFocus(){return"true"===this.getModel().getAttr("autoFocus")}getAutocomplete(){return this.getModel().getAttr("autocomplete")||null}getFormat(){return this.getModel().getAttr("format")}}window.QForms.FieldController=FieldController;class RowFormFieldController extends FieldController{constructor(e,t){super(e,t),this.state={value:null,parseError:null,error:null,changed:!1}}init(){var e=this.getRow(),e=this.model.getValue(e);this.setValue(e)}refill(){var e;this.view&&(e=this.model.getValue(this.getRow()),this.setValue(e),this.resetErrors(),this.refreshChangedState())}getRow(){return this.model.getForm().getRow()}copyValueToModel(){this.getModel().setValue(this.getRow(),this.getValue())}_onChange(e){}putValue(e){this.onChange(e,!1)}onChange=async(e,t=!0)=>{console.log("RowFormFieldController.onChange",JSON.stringify(e)),this._onChange(e),this.resetErrors(),this.rerender();try{this.setValueFromWidget(e)}catch(e){console.error(this.model.getFullName()+": cannot parse view value: "+e.message),this.state.parseError=e.message}if(!this.state.parseError&&this.isValidateOnChange()&&(this.validate(),this.isValid()&&this.copyValueToModel()),this.refreshChangedState(),t){try{this.emit("change",{value:e})}catch(e){console.error("unhandled change event error:",this.model.getFullName(),e)}this.parent.onFieldChange({source:this})}};onBlur=(e,t=!0)=>{if(console.log("RowFormFieldController.onBlur",this.model.getFullName(),JSON.stringify(e)),this.isEditable()&&this.isValidateOnBlur()){try{this.setValueFromWidget(e)}catch(e){console.error(this.model.getFullName()+": cannot parse view value: "+e.message),this.state.parseError=e.message}if(!this.state.parseError&&this.isValidateOnBlur()&&(this.validate(),this.isValid()&&this.copyValueToModel()),this.refreshChangedState(),t){try{this.emit("change",{value:e})}catch(e){console.error("unhandled change event error:",this.model.getFullName(),e)}this.parent.onFieldChange({source:this})}}};getValueForWidget(){var e=this.getValue();return this.valueToString(e)}setValueFromWidget(e){if("string"!=typeof e)throw new Error(this.model.getFullName()+": widgetValue must be string, but got "+typeof e);e=this.stringToValue(e);this.setValue(e)}setValue(e){this.state.value=e}getValue(){return this.state.value}isChanged(){return this.state.changed}isValid(){return null===this.state.parseError&&null===this.state.error}validate(){this.isVisible()&&(this.state.error=this.getError())}refreshChangedState(){this.state.changed=this.calcChangedState(this.getRow())}getPlaceholder(){if(this.model.getAttr("placeholder"))return this.model.getAttr("placeholder");if(ApplicationController.isDebugMode()){var e=this.getValue();return void 0===e?"undefined":null===e?"null":""===e?"empty string":void 0}}getError(){if(this.view&&this.view.getWidget())try{this.view.getWidget().getValue()}catch(e){return"can't parse value: "+e.message}var e=this.getValue();return this.getModel().isNotNull()&&null==e?this.getNullErrorText():null}getNullErrorText(){return this.getModel().getApp().getText().form.required}isEditable(){return"edit"===this.parent.getMode()&&!this.model.isReadOnly()}isParseError(){return null!==this.state.parseError}calcChangedState(r){if(!r)throw new Error("FieldController: no row");if(this.isParseError())return console.log(`FIELD CHANGED ${this.model.getFullName()}: parse error: `+this.getErrorMessage()),!0;if(!this.isValid())return console.log(`FIELD CHANGED ${this.model.getFullName()}: not valid: `+this.getErrorMessage()),!0;if(this.model.hasColumn()){var e=this.model.valueToRaw(this.getValue()),t=this.model.getRawValue(r);if(e!==t)return console.log("FIELD CHANGED "+this.model.getFullName(),JSON.stringify(t),JSON.stringify(e)),!0}if(this.model.isChanged(r)){let e=r[this.model.getAttr("column")],t=this.model.getDefaultDataSource().getRowWithChanges(r)[this.model.getAttr("column")];return e=e&&e.substr(0,100),t=t&&t.substr(0,100),console.log(`MODEL CHANGED ${this.model.getFullName()}:`,e,t),!0}return!1}setError(e){this.state.error=e}resetErrors(){this.setError(null),this.state.parseError=null}getErrorMessage(){return this.state.parseError||this.state.error}renderView(){return React.createElement(this.getViewClass(),{onCreate:this.onViewCreate,ctrl:this})}isValidateOnChange(){return this.getModel().validateOnChange()}isValidateOnBlur(){return this.getModel().validateOnBlur()}}window.QForms.RowFormFieldController=RowFormFieldController;class RowFormCheckBoxFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormCheckBoxFieldView}getValueForWidget(){return this.getValue()}setValueFromWidget(e){this.setValue(e)}}window.QForms.RowFormCheckBoxFieldController=RowFormCheckBoxFieldController;class RowFormCheckBoxListFieldController extends RowFormFieldController{init(){super.init();const e=this.model.getDataSource();e.on("insert",this.onListInsert),e.on("update",this.onListUpdate),e.on("delete",this.onListDelete)}deinit(){const e=this.model.getDataSource();e.off("insert",this.onListInsert),e.off("update",this.onListUpdate),e.off("delete",this.onListDelete),super.deinit()}getViewClass(){return super.getViewClass()||RowFormCheckBoxListFieldView}getRows(){return this.model.getDataSource().getRows()}onListInsert=async e=>{console.log("RowFormCheckBoxListFieldController.onListInsert"),await this.rerender()};onListUpdate=async e=>{await this.rerender()};onListDelete=async e=>{await this.rerender()};getValueForWidget(){return this.getValue()}setValueFromWidget(e){this.setValue(e)}getItemFromRow(e){return{value:this.valueToString(this.getModel().getValueValue(e)),title:this.getModel().getDisplayValue(e)}}}window.QForms.RowFormCheckBoxListFieldController=RowFormCheckBoxListFieldController;class RowFormComboBoxFieldController extends RowFormFieldController{init(){super.init();const e=this.model.getComboBoxDataSource();e.on("insert",this.onListInsert),e.on("update",this.onListUpdate),e.on("delete",this.onListDelete)}deinit(){const e=this.model.getComboBoxDataSource();e.off("insert",this.onListInsert),e.off("update",this.onListUpdate),e.off("delete",this.onListDelete),super.deinit()}getViewClass(){return super.getViewClass()||RowFormComboBoxFieldView}getItems(){try{return this.getRows().map(e=>({value:this.valueToString(this.getModel().getValueValue(e)),title:this.getModel().getDisplayValue(e)}))}catch(e){throw e.message=this.getModel().getFullName()+": "+e.message,e}}getRows(){return this.model.getComboBoxDataSource().getRows()}getPlaceholder(){return this.model.getAttr("placeholder")?this.model.getAttr("placeholder"):ApplicationController.isDebugMode()?"[null]":null}onEditButtonClick=async e=>{console.log("RowFormComboBoxFieldController.onEditButtonClick");var t=this.getModel().getAttr("itemEditPage"),r=this.getValue();t&&r&&await this.openPage({name:t,params:{key:r}})};onCreateButtonClick=async e=>{console.log("RowFormComboBoxFieldController.onCreateButtonClick");var t=this.getModel().getAttr("newRowMode"),r=this.getModel().getAttr("itemCreateForm");if(!r)throw new Error("no itemCreateForm");let o;if("editPage"===t)o=this.getModel().getAttr("itemEditPage");else{if("createPage"!==t)throw new Error("wrong newRowMode value: "+t);o=this.getModel().getAttr("itemCreatePage")}const s=await this.openPage({name:o,newMode:!0}),i=s.getModel().getForm(r),a=async e=>{i.off("insert",a);var[e]=e.inserts;const[t]=Helper.decodeValue(e);await this.onChange(t.toString())};i.on("insert",a)};onListInsert=async e=>{console.log("RowFormComboBoxFieldController.onListInsert"),await this.rerender()};onListUpdate=async e=>{await this.rerender()};onListDelete=async e=>{await this.rerender()};onItemSelect=async e=>{0===e.button&&(e.preventDefault(),e=(e=this.getValue())?JSON.stringify([e]):null,await this.openPage({name:this.getModel().getAttr("itemSelectPage"),selectMode:!0,selectedKey:e,onSelect:async e=>{if(e){const[t]=Helper.decodeValue(e);this.getValue()!==t&&await this.getView().onChange(t.toString())}else null!==this.getValue()&&await this.getView().onChange("")}}))}}window.QForms.RowFormComboBoxFieldController=RowFormComboBoxFieldController;class RowFormDateFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormDateFieldView}getValueForWidget(){return this.getValue()}setValueFromWidget(e){this.setValue(e)}}window.QForms.RowFormDateFieldController=RowFormDateFieldController;class RowFormDateTimeFieldController extends RowFormFieldController{constructor(...e){super(...e),this.widget2=null,this.defaultValue=0,this.state.parseError2=null,this.state.error2=null}getViewClass(){return super.getViewClass()||RowFormDateTimeFieldView}getValueForWidget(){return this.getValue()}getValueForTime(){const e=this.getValue();if(e){var t=60*e.getHours()+e.getMinutes();if(t!==this.defaultValue)return t}return null}setValueFromWidget(e){var t,r;null===e?(this.state.parseError2=null,this.resetErrors2(),this.widget2&&this.widget2.setValue(null)):([t,r]=TimeBox.splitTime(this.defaultValue),e.setHours(t,r)),this.setValue(e)}onView2Create=e=>{this.widget2=e};onChange2=(e,t=!0)=>{if(this.resetErrors2(),this.rerender(),this.isValidateOnChange2()){try{this.setValueFromView2(e)}catch(e){console.log(this.model.getFullName()+": cannot parse time: "+e.message),this.state.parseError2=e.message}if(this.state.parseError2||(this.validate2(),this.isValid()&&this.copyValueToModel()),this.refreshChangedState(),t){try{this.emit("change",{value:e})}catch(e){console.error("unhandled change event error:",this.model.getFullName(),e)}this.parent.onFieldChange({source:this})}}};onBlur2=(e,t=!0)=>{if(console.log("RowFormDateTimeFieldController.onBlur2",e),this.isEditable()){this.resetErrors2(),this.rerender();try{this.setValueFromView2(e)}catch(e){console.log(this.model.getFullName()+": cannot parse time: "+e.message),this.state.parseError2=e.message}if(this.state.parseError2||(this.validate2(),this.isValid()&&this.copyValueToModel()),this.refreshChangedState(),t){try{this.emit("change",{value:e})}catch(e){console.error("unhandled change event error:",this.model.getFullName(),e)}this.parent.onFieldChange({source:this})}}};getPlaceholder2(){return TimeBox.getStringValue(this.defaultValue)}getDefaultValue(){return this.defaultValue}setDefaultValue2(e){if("string"==typeof e)this.defaultValue=TimeBox.getIntegerValue(e);else{if(1440<=e)throw new Error("wrong default value: "+e);this.defaultValue=e}this.widget2&&null===this.widget2.getValue()&&this.state.value&&this.setValue2(null)}setValueFromView2(e){if(isNaN(e))throw new Error(this.getTimeErrorText());this.setValue2(e)}getTimeErrorText(){return this.getModel().getApp().getText().field.timeNotValid}setValue2(e){var t=null!==e?e:this.defaultValue,[e,t]=TimeBox.splitTime(t);this.state.value.setHours(e,t)}validate2(){this.state.error2=this.getError2()}getError2(){if(this.widget2)try{this.widget2.getValue()}catch(e){return"can't parse time: "+e.message}return null}isParseError2(){return null!==this.state.parseError2}resetErrors2(){this.setError2(null),this.state.parseError2=null}setError2(e){this.state.error2=e}getErrorMessage2(){return this.state.parseError2||this.state.error2}isValid2(){return null===this.state.parseError2&&null===this.state.error2}refill(){this.widget2&&(super.refill(),this.widget2.setValue(this.getValueForTime()),this.resetErrors2(),this.refreshChangedState())}isParseError(){return super.isParseError()||this.isParseError2()}isValid(){return super.isValid()&&this.isValid2()}getErrorMessage(){return null===super.getErrorMessage()&&null===this.getErrorMessage2()?null:[...super.getErrorMessage()?[super.getErrorMessage()]:[],...this.getErrorMessage2()?[this.getErrorMessage2()]:[]].join(", ")}isValidateOnChange2(){return!0}isValidateOnBlur2(){return!1}}window.QForms.RowFormDateTimeFieldController=RowFormDateTimeFieldController;class RowFormFileFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormFileFieldView}}window.QForms.RowFormFileFieldController=RowFormFileFieldController;class RowFormImageFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormImageFieldView}}window.QForms.RowFormImageFieldController=RowFormImageFieldController;class RowFormLinkFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormLinkFieldView}onClick=e=>{console.log("RowFormLinkFieldController.onClick",e),this.emit({source:this})}}window.QForms.RowFormLinkFieldController=RowFormLinkFieldController;class RowFormPasswordFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormPasswordFieldView}}window.QForms.RowFormPasswordFieldController=RowFormPasswordFieldController;class RowFormPhoneFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormPhoneFieldView}getPhoneFormatErrorText(){return this.getModel().getApp().getText().form.phoneNumberFormatError}getError(){var e=super.getError();if(e)return e;const t=this.getValue();return t&&"+7"===t.substr(0,2)&&t.length<12?this.getPhoneFormatErrorText():null}}window.QForms.RowFormPhoneFieldController=RowFormPhoneFieldController;class RowFormRadioFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormRadioFieldView}getItems(){try{return this.getRows().map(e=>({value:this.valueToString(this.getModel().getValueValue(e)),title:this.getModel().getDisplayValue(e)}))}catch(e){throw e.message=this.getModel().getFullName()+": "+e.message,e}}getRows(){return this.getModel().getDataSource().getRows()}}class RowFormTextAreaFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormTextAreaFieldView}}window.QForms.RowFormTextAreaFieldController=RowFormTextAreaFieldController;class RowFormTextBoxFieldController extends RowFormFieldController{getViewClass(){return super.getViewClass()||RowFormTextBoxFieldView}isEnabled(){return this.isEditable()}}window.QForms.RowFormTextBoxFieldController=RowFormTextBoxFieldController;class RowFormTimeFieldController extends RowFormFieldController{constructor(...e){super(...e),this.defaultValue=null}getViewClass(){return super.getViewClass()||RowFormTimeFieldView}getValueForWidget(){return this.getValue()}setValueFromWidget(e){if(isNaN(e))throw new Error("wrong time");this.setValue(e)}getDefaultValue(){return this.defaultValue}setDefaultValue2(e){if("string"==typeof e)this.defaultValue=TimeBox.getIntegerValue(e);else{if(1440<=e)throw new Error("wrong default value: "+e);this.defaultValue=e}}getPlaceholder(){return null!==this.defaultValue?TimeBox.getStringValue(this.defaultValue):super.getPlaceholder()}}window.QForms.RowFormTimeFieldController=RowFormTimeFieldController;class TableFormFieldController extends FieldController{getValueForWidget(e){return this.valueToString(this.model.getValue(e))}}window.QForms.TableFormFieldController=TableFormFieldController;class TableFormCheckBoxFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormCheckBoxFieldView}getValueForWidget(e){return this.model.getValue(e)}}window.QForms.TableFormCheckBoxFieldController=TableFormCheckBoxFieldController;class TableFormComboBoxFieldController extends TableFormFieldController{init(){super.init();const e=this.getModel().getComboBoxDataSource();e.on("insert",this.onListUpdate),e.on("update",this.onListUpdate),e.on("delete",this.onListUpdate)}deinit(){const e=this.getModel().getComboBoxDataSource();e.off("insert",this.onListUpdate),e.off("update",this.onListUpdate),e.off("delete",this.onListUpdate),super.deinit()}getViewClass(){return super.getViewClass()||TableFormComboBoxFieldView}getValueForWidget(e){var t=this.model.getValue(e),e=this.model.valueToRaw(t);if(void 0===e||"null"===e)return"";t=this.model.findRowByRawValue(e);return t?this.valueToString(this.model.getDisplayValue(t)):`[no row for id: ${e}]`}onListUpdate=async e=>{this.getForm().invalidate(),await this.getForm().rerender()}}window.QForms.TableFormComboBoxFieldController=TableFormComboBoxFieldController;class TableFormDateFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormDateFieldView}getValueForWidget(e){e=this.model.getValue(e);return e?Helper.formatDate(e,this.getFormat()||"{DD}.{MM}.{YYYY} {hh}:{mm}:{ss}"):""}}window.QForms.TableFormDateFieldController=TableFormDateFieldController;class TableFormDateTimeFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormDateTimeFieldView}getValueForWidget(e){e=this.model.getValue(e);return e?Helper.formatDate(e,this.getFormat()||"{DD}.{MM}.{YYYY} {hh}:{mm}:{ss}"):""}}window.QForms.TableFormDateTimeFieldController=TableFormDateTimeFieldController;class TableFormLinkFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormLinkFieldView}onClick=e=>{console.log("TableFormLinkFieldController.onClick",e),e.preventDefault(),this.emit("click",{source:this})}}window.QForms.TableFormLinkFieldController=TableFormLinkFieldController;class TableFormPhoneFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormPhoneFieldView}}class TableFormTextAreaFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormTextAreaFieldView}}window.QForms.TableFormTextAreaFieldController=TableFormTextAreaFieldController;class TableFormTextBoxFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormTextBoxFieldView}}window.QForms.TableFormTextBoxFieldController=TableFormTextBoxFieldController;class TableFormTimeFieldController extends TableFormFieldController{getViewClass(){return super.getViewClass()||TableFormTimeFieldView}getValueForWidget(e){e=this.model.getValue(e);return TimeBox.getStringValue(e)}}window.QForms.TableFormTimeFieldController=TableFormTimeFieldController;class FormController extends ModelController{static create(e,t){const r=e.getPage();var o=""+r.getName()+e.getName()+"FormController",s=FrontHostApp.getClassByName(o),o=FrontHostApp.getClassByName(e.getClassName()+"Controller");const i=s||o;return new i(e,t)}constructor(e,t){super(e,t),this.fields={}}init(){for(const e of this.model.fields){const t=this.fields[e.getName()]=FieldController.create(e,this);t.init()}}deinit(){for(const e in this.fields)this.fields[e].deinit();super.deinit()}isValid(){return!0}async openPage(e){return this.getPage().openPage(e)}getPage(){return this.parent}isChanged(){return!1}async onFieldChange(e){await this.getPage().onFormChange(e)}getUpdated(){return this.state.updated}invalidate(){this.state.updated=Date.now()}async onActionClick(e,t){console.log("FormController.onActionClick",e,t)}getField(e){return this.fields[e]}getApp(){return this.parent.parent}getSelectedRowKey(){return null}isAutoFocus(){for(const e in this.fields)if(this.fields[e].isAutoFocus())return!0;return!1}}window.QForms.FormController=FormController;class RowFormController extends FormController{constructor(e,t){super(e,t),this.state={updated:Date.now(),mode:"edit",hasNew:!1,changed:!1,valid:!0}}init(){super.init(),this.model.on("refresh",this.onModelRefresh),this.model.on("insert",this.onModelInsert),this.model.on("update",this.onModelUpdate),"SqlDataSource"===this.model.getDefaultDataSource().getClassName()&&(this.state.mode="view"),this.calcState(),this.state.hasNew&&(this.state.mode="edit")}deinit(){this.model.off("refresh",this.onModelRefresh),this.model.off("insert",this.onModelInsert),this.model.off("update",this.onModelUpdate),super.deinit()}calcState(){this.state.hasNew=this.model.hasNew(),this.state.changed=this.isChanged(),this.state.valid=this.isValid()}refill(){console.log("RowFormController.refill",this.model.getFullName());for(const e in this.fields)this.fields[e].refill()}onModelRefresh=async e=>{console.log("RowFormController.onModelRefresh",this.model.getFullName()),this.view&&(this.refill(),this.invalidate(),this.rerender())};onModelInsert=async e=>{console.log("RowFormController.onModelInsert",this.model.getFullName()),this.refill(),this.invalidate(),this.calcState(),this.parent.onFormInsert(e)};onModelUpdate=async e=>{console.log("RowFormController.onModelUpdate",this.model.getFullName(),e),this.refill(),this.invalidate(),this.calcState(),this.parent.onFormUpdate(e)};isValid(){for(const e in this.fields){const t=this.fields[e];if(!t.isValid())return!1}return!0}validate(){for(const e in this.fields)this.fields[e].validate();this.invalidate()}clearFieldsError(){for(const e in this.fields)this.fields[e].setError(null)}onSaveClick=async()=>{if(console.log("RowFormController.onSaveClick"),this.validate(),this.calcState(),this.isValid())try{this.getApp().getView().disableRerender(),await this.model.update(),this.state.mode="view",console.log("form model updated",this.getModel().getFullName())}finally{this.getApp().getView().enableRerender(),await this.getApp().getView().rerender()}else console.error("cannot update invalid row form: "+this.model.getFullName()),await this.rerender()};onDiscardClick=()=>{console.log("RowFormController.onDiscardClick",this.model.getFullName());const e=[];var t=this.model.getRow();for(const r in this.fields){const o=this.fields[r];!o.isChanged(t)&&o.isValid()||e.push(r)}this.model.discard(e),e.forEach(e=>{this.fields[e].refill()}),this.calcState(),this.getModel().hasDefaultSqlDataSource()&&(this.state.mode="view"),this.rerender(),this.parent.onFormDiscard(this)};onRefreshClick=async()=>{await this.model.refresh()};isChanged(){if(this.model.isChanged())return!0;var e=this.model.getRow();for(const t in this.fields){const r=this.fields[t];if(r.isChanged(e))return!0}return!1}async onFieldChange(e){this.calcState(),this.invalidate(),await super.onFieldChange(e)}onEditClick=e=>{console.log("RowFormController.onEditClick"),this.state.mode="edit",this.rerender()};onCancelClick=e=>{console.log("RowFormController.onCancelClick"),this.state.mode="view",this.rerender()};getViewClass(){return super.getViewClass()||RowFormView}getActiveRow(e){return this.model.getRow(e)}getMode(){return this.state.mode}isActionEnabled(e){return this.isViewMode()}isEditMode(){return"edit"===this.getMode()}isViewMode(){return"view"===this.getMode()}}window.QForms.RowFormController=RowFormController;class TableFormController extends FormController{constructor(e,t){super(e,t),this.state={updated:Date.now()},this.grid=null}getViewClass(){return super.getViewClass()||TableFormView}init(){super.init(),this.model.on("refresh",this.onModelRefresh),this.model.on("update",this.onModelUpdate),this.model.on("delete",this.onModelDelete),this.model.on("insert",this.onModelInsert)}deinit(){this.model.off("refresh",this.onModelRefresh),this.model.off("update",this.onModelUpdate),this.model.off("delete",this.onModelDelete),this.model.off("insert",this.onModelInsert),super.deinit()}onGridCreate=e=>{this.grid=e};onNewClick=async e=>{console.log("TableFormController.onNewClick"),await this.new()};onRefreshClick=async e=>{console.log("TableFormController.onRefreshClick",this.model.getFullName()),await this.model.refresh()};onDeleteClick=async e=>{console.log("TableFormController.onDeleteClick",this.model.getFullName(),this.grid.getActiveRowKey()),await this.getApp().confirm({message:this.model.getApp().getText().form.areYouSure})&&await this.model.getDefaultDataSource().delete(this.grid.getActiveRowKey())};onGridCellDblClick=async(e,t)=>{"form"===this.model.getAttr("editMethod")&&(this.getPage().getModel().isSelectMode()?await this.getPage().selectRow(t):await this.edit(t))};onGridLinkClick=async e=>{console.log("TableFormController.onGridLinkClick",e),await this.edit(e)};onGridDeleteKeyDown=async(e,t)=>{console.log("TableFormController.onGridDeleteKeyDown",e,t),"disabled"!==this.getModel().getAttr("deleteRowMode")&&await this.getApp().confirm({message:this.model.getApp().getText().form.areYouSure})&&await this.model.getDefaultDataSource().delete(t)};async new(){if("oneclick"===this.model.getAttr("newRowMode")){var e={};this.model.fillDefaultValues(e),await this.model.getDefaultDataSource().insert(e)}else if("editform"===this.model.getAttr("newRowMode")){if(!this.model.getAttr("itemEditPage"))throw new Error(`[${this.model.getFullName()}] itemEditPage is empty`);await this.openPage({name:this.model.getAttr("itemEditPage"),newMode:!0,modal:!0})}else if("createform"===this.model.getAttr("newRowMode")){if(!this.model.getAttr("itemCreatePage"))throw new Error(`[${this.model.getFullName()}] itemCreatePage is empty`);await this.openPage({name:this.model.getAttr("itemCreatePage"),newMode:!0,modal:!0})}else if("oneclick editform"===this.model.getAttr("newRowMode")){if(!this.model.getAttr("itemEditPage"))throw new Error(`[${this.model.getFullName()}] itemEditPage is empty`);var t={};this.model.fillDefaultValues(t);var r=await this.model.getDefaultDataSource().insert(t),o=this.model.getDefaultDataSource().getAttr("database"),t=this.model.getDefaultDataSource().getAttr("table"),[r]=r[o][t].insert;await this.openPage({name:this.model.getAttr("itemEditPage"),modal:!0,params:{...DataSource.keyToParams(r)}})}else if("oneclick createform"===this.model.getAttr("newRowMode")){if(!this.model.getAttr("itemCreatePage"))throw new Error(`[${this.model.getFullName()}] itemCreatePage is empty`);o={};this.model.fillDefaultValues(o);var t=await this.model.getDefaultDataSource().insert(o),r=this.model.getDefaultDataSource().getAttr("database"),o=this.model.getDefaultDataSource().getAttr("table"),[o]=t[r][o].insert;await this.openPage({name:this.model.getAttr("itemCreatePage"),modal:!0,params:{...DataSource.keyToParams(o)}})}}async edit(e){if(!this.model.getAttr("itemEditPage"))throw new Error(this.model.getFullName()+": itemEditPage is empty");try{await this.openPage({name:this.model.getAttr("itemEditPage"),modal:!0,params:{...DataSource.keyToParams(e)}})}catch(e){throw e.message=this.model.getFullName()+" edit: "+e.message,e}}onModelRefresh=async e=>{console.log("TableFormController.onModelRefresh",this.model.getFullName(),e),this.view&&(this.invalidate(),await this.rerender())};onModelInsert=async e=>{if(console.log("TableFormController.onModelInsert",this.model.getFullName(),e),this.view){if(this.grid&&e.source)for(const t of e.inserts)this.grid.setActiveRowKey(t);this.invalidate(),await this.rerender()}};onModelUpdate=async e=>{if(console.log("TableFormController.onModelUpdate",this.model.getFullName(),e,this.view),this.view){if(this.grid)for(const r in e.updates){var t;this.grid.getActiveRowKey()===r&&(t=e.updates[r],r!==t&&this.grid.setActiveRowKey(t))}this.invalidate(),await this.rerender()}};onModelDelete=async e=>{if(console.log("TableFormController.onModelDelete",this.model.getFullName(),e),this.view){if(this.grid)for(const t of e.deletes)this.grid.getActiveRowKey()===t&&this.grid.setActiveRowKey(null);this.invalidate(),await this.rerender()}};onGridSelectionChange=async e=>{this.invalidate(),await this.getPage().rerender()};getActiveRow(){var e=this.grid.getActiveRowKey();if(!e)throw new Error(this.model.getFullName()+": no active row key");return this.model.getDefaultDataSource().getRow(e)}isRowSelected=()=>!!this.grid&&!!this.grid.getActiveRowKey();onFrameChanged=async e=>{e=parseInt(e);this.model.getDefaultDataSource().setFrame(e),this.model.getDefaultDataSource().refresh(),await this.rerender()};onNextClick=async()=>{console.log("TableFormController.onNextClick");var e=this.model.getDefaultDataSource().getFrame()+1;this.model.getDefaultDataSource().setFrame(e),this.model.getDefaultDataSource().refresh(),await this.rerender()};onPreviousClick=async()=>{console.log("TableFormController.onPreviousClick");var e=this.model.getDefaultDataSource().getFrame()-1;this.model.getDefaultDataSource().setFrame(e),this.model.getDefaultDataSource().refresh(),this.rerender()};canPrev(){return 1<this.model.getDefaultDataSource().getFrame()}canNext(){const e=this.model.getDefaultDataSource();return e.getFrame()<e.getFramesCount()}getSelectedRowKey(){return this.grid?this.grid.getActiveRowKey():null}isActionEnabled(e){return this.isRowSelected()}}window.QForms.TableFormController=TableFormController;class PageController extends ModelController{constructor(e,t,r){if(super(e,t),!r)throw new Error("no id");this.id=r,this.forms=[]}static create(e,t,r,o){var s=FrontHostApp.getClassByName(e.getName()+"PageController");const i=s||PageController;return new i(e,t,r,o)}init(){for(const e of this.model.forms){const t=FormController.create(e,this);t.init(),this.forms.push(t)}}deinit(){console.log("PageController.deinit: "+this.model.getFullName());for(const e of this.forms)e.deinit();super.deinit()}onSaveAndCloseClick=async()=>{if(console.log("PageController.onSaveAndCloseClick"),this.validate(),this.isValid()){try{this.getApp().getView().disableRerender(),await this.getModel().update(),console.log("page model updated",this.getModel().getFullName())}finally{this.getApp().getView().enableRerender()}await this.getApp().closePage(this),this.getModel().getOptions().onClose&&this.getModel().getOptions().onClose()}else await this.rerender()};onClosePageClick=async e=>{console.log("PageController.onClosePageClick",this.getModel().getFullName()),await this.close()};onOpenPageClick=async e=>{var t=this.getModel().getName(),r=this.getModel().getKey(),r=this.createOpenInNewLink(t,r);window.open(r,"_blank")};createOpenInNewLink(e,t){return PageController.createLink({page:e,...DataSource.keyToParams(t)})}async close(){var e=this.isChanged();if(this.model.hasRowFormWithDefaultSqlDataSource()&&e&&!await this.getApp().confirm({message:this.model.getApp().getText().form.areYouSure}))return;await this.getApp().closePage(this),this.getModel().getOptions().onClose&&this.getModel().getOptions().onClose()}validate(){for(const e of this.forms)e instanceof RowFormController&&e.validate()}isValid(){for(const e of this.forms)if(!e.isValid())return!1;return!0}async onFormChange(e){this.rerender()}onFormDiscard(e){console.log("PageController.onFormDiscard",this.model.getFullName()),this.rerender()}onFormUpdate(e){console.log("PageController.onFormUpdate:",this.model.getFullName(),e),this.rerender()}onFormInsert(e){console.log("PageController.onFormInsert:",this.model.getFullName());for(const t of this.forms)t.invalidate();this.rerender()}async openPage(e){e.params||(e.params={});var t=this.getModel().getParams();for(const r in t)e.params[r]||(e.params[r]=t[r]);return this.getApp().openPage(e)}isChanged(){for(const e of this.forms)if(e.isChanged())return!0;return!1}getApp(){return this.parent}getViewClass(){return super.getViewClass()||PageView}static createLink(t=null){return t?[window.location.pathname,[...ApplicationController.isDebugMode()?["debug=1"]:[],...Object.keys(t).map(e=>e+"="+encodeURI(t[e]))].join("&")].join("?"):window.location.pathname}getForm(t){return this.forms.find(e=>e.model.getName()===t)}async onActionClick(e){console.log("PageController.onActionClick",e)}onKeyDown=async e=>{"Escape"===e.key&&this.isModal()&&await this.close()};getTitle(){const e=this.getModel();var t,r=e.getKey();let o;return r&&(t=JSON.parse(r),o=1===t.length&&"number"==typeof t[0]?"#"+t[0]:""+r),[e.getCaption(),...ApplicationController.isDebugMode()?[`(${this.getId()})`]:[],...o?[o]:[]].join(" ")}getSelectedRowKey(){for(const t of this.forms){var e=t.getSelectedRowKey();if(e)return e}return null}onSelectClick=async e=>{console.log("PageController.onSelectClick"),await this.selectRow(this.getSelectedRowKey())};onResetClick=async e=>{console.log("PageController.onResetClick"),await this.selectRow(null)};async selectRow(e){console.log("PageController.selectRow",e),await this.close(),await this.getModel().getOptions().onSelect(e)}invalidate(){this.forms.forEach(e=>e.invalidate())}getId(){return this.id}isModal(){return this.getModel().isModal()}isAutoFocus(){for(const e of this.forms)if(e.isAutoFocus())return!0;return!1}}window.QForms.PageController=PageController;class Model extends EventEmitter{constructor(e,t){if(!e.name)throw new Error(e.class+" no name");super(),this.data=e,this.parent=t,this.deinited=!1}init(){}deinit(){if(this.deinited)throw new Error(this.getFullName()+": model already deinited");this.deinited=!0}static getAttr(e,t){return e[t]}static getCol(e,t){return e[t]}static getName(e){return Model.getAttr(e,"name")}static getClassName(e){return Model.getAttr(e,"class")}isAttr(e){return this.data.hasOwnProperty(e)}getAttr(e){return this.data[e]}getCol(e){return this.data[e]}getClassName(){return this.getAttr("class")}getName(){return this.getAttr("name")}getFullName(){return this.parent?this.parent.getFullName()+"."+this.getName():this.getName()}getCaption(){return this.getAttr("caption")}getDataSource(t){return this.dataSources.find(e=>e.getName()===t)}createDataSources(){for(const t of this.data.dataSources)try{const e=FrontHostApp.getClassByName(t.class);if(!e)throw new Error(`no class ${t.class} class`);const r=new e(t,this);r.init(),this.dataSources.push(r)}catch(e){throw e.message=`${this.getFullName()}.${t.name}: `+e.message,e}}deinitDataSources(){for(const e of this.dataSources)e.deinit()}hasActions(){return 0<this.data.actions.length}getParent(){return this.parent}getData(){return this.data}}window.QForms.Model=Model;class Application extends Model{constructor(e){super(e),this.databases=[],this.dataSources=[]}init(){if(!this.data.theme)throw new Error("no theme attr");for(const e of this.data.databases){const t=new Database(e,this);t.init(),this.addDatabase(t)}this.createDataSources()}deinit(){this.deinitDataSources(),super.deinit()}addDatabase(e){this.databases.push(e)}async logout(){await this.request({action:"logout"});this.emit("logout",{source:this})}async request(e){var t=Date.now(),[r,e]=await FrontHostApp.doHttpRequest2(e);if(!r["qforms-platform-version"])throw new Error("no qforms-platform-version header");if(!r["qforms-app-version"])throw new Error("no qforms-app-version header");return this.emit("request",{time:Date.now()-t,remotePlatformVersion:r["qforms-platform-version"],remoteAppVersion:r["qforms-app-version"]}),e}getDatabase(t){var e=this.databases.find(e=>e.getName()===t);if(!e)throw new Error("no database: "+t);return e}getText(){return this.data.text}getUser(){return this.data.user}getDomain(){return this.data.domain}getVirtualPath(){return this.data.virtualPath}async rpc(e,t){if(console.log("Application.rpc",this.getFullName(),e,t),!e)throw new Error("no name");t=await this.request({uuid:this.getAttr("uuid"),action:"rpc",name:e,params:t});if(t.errorMessage)throw new Error(t.errorMessage);return t}emitResult(e,t=null){console.log("Application.emitResult",e,t);const r=[];for(const o in e)r.push(...this.getDatabase(o).emitResult(e[o],t));return Promise.allSettled(r)}getNodeEnv(){return this.data.nodeEnv}}window.QForms.Application=Application;class Column extends Model{constructor(e,t){if(super(e,t),!this.getAttr("type"))throw new Error(`column ${this.getFullName()}: no type`);if(!["string","number","boolean","object","date"].includes(this.getAttr("type")))throw new Error(this.getFullName()+": wrong column type: "+this.getAttr("type"))}init(){}getType(){return this.getAttr("type")}}window.QForms.Column=Column;class DataSource extends Model{constructor(e,t){super(e,t),this.rows=null,this.rowsByKey=null,this.news=[],this.changes=new Map}init(){if(this.setRows(this.data.rows),this.getAttr("table")){const e=this.getTable();e.on("insert",this.onTableInsert),e.on("update",this.onTableUpdate),e.on("delete",this.onTableDelete),e.on("refresh",this.onTableRefresh)}}deinit(){if(this.getAttr("table")){const e=this.getTable();e.off("insert",this.onTableInsert),e.off("update",this.onTableUpdate),e.off("delete",this.onTableDelete),e.off("refresh",this.onTableRefresh)}super.deinit()}setRows(e){this.rows=e,this.fillRowsByKey()}addRow(e){this.rows.push(e);var t=this.getRowKey(e);this.rowsByKey[t]=e}addRows(t){for(let e=0;e<t.length;e++)this.rows.push(t[e]);this.fillRowsByKey()}getRowsLength(){return this.rows.length}fillRowsByKey(){this.rowsByKey={};for(let e=0;e<this.rows.length;e++){var t=this.rows[e],r=this.getRowKey(t);this.rowsByKey[r]=t}}getType(e){throw new Error("DataSource column type not implemented")}discardRowColumn(e,t){this.changes.has(e)&&void 0!==this.changes.get(e)[t]&&delete this.changes.get(e)[t]}changeRowColumn(e,t,r){this.changes.has(e)||this.changes.set(e,{}),this.changes.get(e)[t]=r}setValue(e,t,r){if(void 0===r)throw new Error(this.getFullName()+": undefined is wrong value for data source");if("object"==typeof r&&null!==r)throw new Error(`setValue: ${this.getFullName()}.${t}: object must be in JSON format`);e[t]!==r?(this.changeRowColumn(e,t,r),void 0===e[t]&&null===r&&this.discardRowColumn(e,t)):this.discardRowColumn(e,t),this.changes.has(e)&&!Object.keys(this.changes.get(e)).length&&this.changes.delete(e)}isChanged(){return!!this.changes.size}hasNew(){return!!this.news.length}isRowColumnChanged(e,t){return e[t]!==this.getValue(e,t)}getValue(e,t){let r;if(r=(this.changes.has(e)&&void 0!==this.changes.get(e)[t]?this.changes.get(e):e)[t],void 0!==r&&"string"!=typeof r)throw new Error(`getValue: ${this.getFullName()}.${t}: object must be in JSON format, value: `+r);return r}getKeyValues(r){return this.data.keyColumns.reduce((e,t)=>(e[t]=JSON.parse(r[t]),e),{})}getRowKey(t){const e=[];for(const o of this.data.keyColumns){if(void 0===t[o])return null;if(null===t[o])throw new Error("wrong value null for data source value");try{var r=JSON.parse(t[o]);e.push(r)}catch(e){throw console.log("getRowKey: cannot parse: ",t[o]),e}}return JSON.stringify(e)}removeRow(e){var t=this.getRow(e);if(!t)throw new Error(this.getFullName()+`: no row with key ${e} to remove`);t=this.rows.indexOf(t);if(-1===t)throw new Error(this.getFullName()+`: no row with i ${t} to remove`);this.rows.splice(t,1),delete this.rowsByKey[e]}newRow(e){if(console.log("DataSource.newRow",this.getFullName(),e),0<this.rows.length)throw new Error("rows can be added to empty data sources only in new mode");this.news.push(e)}getSingleRow(e=!1){if(this.news[0])return this.news[0];var t=this.rows[0];if(!t)throw new Error("no single row");return e?this.getRowWithChanges(t):t}getForm(){return this.parent instanceof Form?this.parent:null}getPage(){return this.parent instanceof Page?this.parent:this.parent instanceof Form?this.parent.getPage():null}getApp(){return this.parent instanceof Application?this.parent:this.parent.getApp()}getRow(e){return this.rowsByKey[e]||null}getRows(){return this.rows}getRowByIndex(e){return this.rows[e]}discard(){if(console.log("DataSource.discard",this.getFullName()),!this.isChanged())throw new Error("no changes in data source "+this.getFullName());this.changes.clear()}static keyToParams(e,t="key"){if("string"!=typeof e)throw new Error("key not string");const r={};var o=JSON.parse(e);if(1===o.length)r[t]=o[0];else{if(!(1<o.length))throw new Error("invalid key: "+e);for(let e=0;e<o.length;e++)r[""+t+(e+1)]=o[e]}return r}getChangesByKey(){const e={};for(const t of this.changes.keys())e[this.getRowKey(t)]=this.changes.get(t);return e}getRowWithChanges(e){return this.changes.has(e)?{...e,...this.changes.get(e)}:e}hasNewRows(){return 0<this.news.length}static copyNewValues(e,t){for(const r in t)e[r]=t[r]}updateRow(e,t){if(console.log("DataSource.updateRow",this.getFullName(),e,t),!e)throw new Error("no key");var r=this.getRow(e);if(!r)throw new Error(this.getFullName()+": no row with key "+e);var o=this.getRowKey(t);DataSource.copyNewValues(r,t),e!==o&&(delete this.rowsByKey[e],this.rowsByKey[o]=r)}getTable(){if(!this.getAttr("table"))throw new Error(this.getFullName()+": table attr empty");return this.getDatabase().getTable(this.getAttr("table"))}getDatabase(){if(!this.getAttr("database"))throw new Error(this.getFullName()+": database attr empty");return this.getApp().getDatabase(this.getAttr("database"))}getType(e){return this.getTable().getColumn(e).getType()}async insert(){if(console.log("DataSource.insert",this.news),!this.news.length)throw new Error("no new rows to insert");const e=[];for(const s of this.news){var t=this.getRowWithChanges(s);DataSource.copyNewValues(s,t);t=this.getRowKey(s);if(!t)throw new Error("invalid insert row, no key");e.push(t)}this.changes.clear();for(const i of this.news)this.addRow(i);this.news=[],console.log("rows:",this.getRows()),console.log("inserts:",e),this.parent.onDataSourceInsert&&this.parent.onDataSourceInsert({source:this,inserts:e}),this.emit("insert",{source:this,inserts:e});var r=this.getAttr("database"),o=this.getAttr("table");if(r&&o){o={[r]:{[o]:{insert:e}}};return await this.getApp().emitResult(o,this),o}return null}async delete(e){if(console.log("DataSource.delete",e),!e)throw new Error("no key");this.removeRow(e);var t=[e];this.parent.onDataSourceDelete&&this.parent.onDataSourceDelete({source:this,deletes:t}),this.emit("delete",{source:this,deletes:t});var r=this.getAttr("database"),e=this.getAttr("table");if(r&&e){t={[r]:{[e]:{delete:t}}};return await this.getApp().emitResult(t,this),t}return null}async update(){if(console.log("DataSource.update",this.getFullName()),!this.news.length){if(!this.changes.size)throw new Error("no changes: "+this.getFullName());const s={};for(const i in this.getChangesByKey()){var e=this.getRow(i),t=this.getRowWithChanges(e),e=this.getRowKey(t);this.updateRow(i,t),s[i]=e}this.changes.clear(),this.parent.onDataSourceUpdate&&this.parent.onDataSourceUpdate({source:this,updates:s}),this.emit("update",{source:this,updates:s});var r=this.getAttr("database"),o=this.getAttr("table");if(r&&o){o={[r]:{[o]:{update:s}}};return await this.getApp().emitResult(o,this),o}return null}await this.insert()}onTableInsert=async e=>{if(this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableUpdate");if(e.source!==this){if(console.log("DataSource.onTableInsert",this.getFullName(),e),!e.inserts.length)throw new Error(this.getFullName()+": no inserts");for(const o of e.inserts){if(this.getRow(o))throw console.log("rows:",this.rows),console.log("rowsByKey:",this.rowsByKey),new Error(this.getFullName()+": row already in this data source: "+o);var t=e.source.getRow(o),r={};DataSource.copyNewValues(r,t),this.addRow(r)}this.parent.onDataSourceInsert&&this.parent.onDataSourceInsert(e),this.emit("insert",e)}};onTableUpdate=async e=>{if(this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableUpdate");if(e.source!==this){if(console.log("DataSource.onTableUpdate",this.getFullName(),e),!Object.keys(e.updates).length)throw new Error(this.getFullName()+": no updates");for(const r in e.updates){var t;this.getRow(r)&&(t=e.updates[r],t=e.source.getRow(t),this.updateRow(r,t))}this.parent.onDataSourceUpdate&&this.parent.onDataSourceUpdate(e),this.emit("update",e)}};onTableDelete=async e=>{if(this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableDelete");if(e.source!==this){if(console.log("DataSource.onTableDelete",this.getFullName(),e),!e.deletes.length)throw new Error(this.getFullName()+": no deletes");for(const t of e.deletes)this.getRow(t)&&this.removeRow(t);this.parent.onDataSourceDelete&&this.parent.onDataSourceDelete(e),this.emit("delete",e)}};onTableRefresh=async e=>{throw new Error("DataSource.onTableRefresh: not implemented")};isSurrogate(){return this.isAttr("database")}moveRow(e,t){console.log("DataSource.moveRow"),Helper.moveArrItem(this.rows,e,t);t={source:this};this.parent.onDataSourceRefresh&&this.parent.onDataSourceRefresh(t),this.emit("refresh",t)}}window.QForms.DataSource=DataSource;class SqlDataSource extends DataSource{constructor(e,t){super(e,t),this.frame=1,this.count=void 0!==e.count?e.count:null,this.lastFrame=1}async insert(e){console.log("SqlDataSource.insert",e);var t=this.getAttr("database"),r=this.getAttr("table");if(""===r)throw new Error("no data source table to insert");var o=await this.getApp().request({uuid:this.getApp().getAttr("uuid"),action:"insert",page:this.getForm().getPage().getName(),form:this.getForm().getName(),row:this.getRowWithChanges(e)}),[s]=Object.keys(o[t][r].insertEx);if(!s)throw new Error("no inserted row key");var i=o[t][r].insertEx[s];for(const a in i)e[a]=i[a];this.news.splice(this.news.indexOf(e),1),this.changes.clear(),this.addRow(e);r={source:this,inserts:o[t][r].insert};return this.parent.onDataSourceInsert&&this.parent.onDataSourceInsert(r),this.emit("insert",r),await this.getApp().emitResult(o,this),o}async update(){console.log("SqlDataSource.update",this.getFullName());var e=this.getAttr("database"),t=this.getAttr("table");if(""===t)throw new Error("no data source table to update");if(this.news[0])return this.insert(this.news[0]);if(!this.changes.size)throw new Error("no changes: "+this.getFullName());var r=await this.getApp().request({uuid:this.getApp().getAttr("uuid"),action:"update",page:this.getForm().getPage().getName(),form:this.getForm().getName(),changes:this.getChangesByKey()}),[o]=Object.keys(r[e][t].updateEx);if(!o)throw new Error("no updated row");var s=r[e][t].updateEx[o];this.changes.clear(),this.updateRow(o,s);t={source:this,updates:r[e][t].update};return this.parent.onDataSourceUpdate&&this.parent.onDataSourceUpdate(t),this.emit("update",t),await this.getApp().emitResult(r,this),r}async delete(e){if(console.log("SqlDataSource.delete:",this.getFullName(),e),!e)throw new Error("no key");var t=this.getAttr("database"),r=this.getAttr("table");if(!r)throw new Error("no table in SqlDataSource: "+this.getFullName());e=await this.getApp().request({uuid:this.getApp().getAttr("uuid"),action:"_delete",page:this.getForm().getPage().getName(),form:this.getForm().getName(),params:{key:e}});await this.refill();r={source:this,deletes:e[t][r].delete};return this.parent.onDataSourceDelete&&this.parent.onDataSourceDelete(r),this.emit("delete",r),await this.getApp().emitResult(e,this),e}onTableUpdate=async e=>{if(console.log("SqlDataSource.onTableUpdate",this.getFullName(),e),this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableUpdate");if(e.source!==this){if(!Object.keys(e.updates).length)throw new Error(this.getFullName()+": no updates");await this.refill(),this.parent.onDataSourceUpdate&&this.parent.onDataSourceUpdate(e),this.emit("update",e)}};onTableInsert=async e=>{if(console.log("SqlDataSource.onTableInsert",this.getFullName(),e),this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableInsert");e.source!==this&&(await this.refill(),this.parent.onDataSourceInsert&&this.parent.onDataSourceInsert(e),this.emit("insert",e))};onTableDelete=async e=>{if(console.log("SqlDataSource.onTableDelete",this.getFullName(),e),this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableDelete");e.source!==this&&(await this.refill(),this.parent.onDataSourceDelete&&this.parent.onDataSourceDelete(e),this.emit("delete",e))};onTableRefresh=async e=>{if(console.log("SqlDataSource.onTableRefresh",this.getFullName(),e),this.deinited)throw new Error(this.getFullName()+": this data source deinited for onTableDelete");if(e.source)throw new Error("refresh is foreign result so source must be null");await this.refill(),this.parent.onDataSourceRefresh&&this.parent.onDataSourceRefresh(e),this.emit("refresh",e)};getPageParams(){const e=this.getPage();return e?e.getParams():{}}async refresh(){console.log("SqlDataSource.refresh",this.getFullName()),await this.refill(),this.parent.onDataSourceRefresh&&this.parent.onDataSourceRefresh({source:this})}async refill(){if(console.log("SqlDataSource.refill",this.getFullName()),this.isChanged())throw new Error("cannot refill changed data source: "+this.getFullName());var e=await this.select(this.getLimit()?{frame:this.frame}:{});this.count=e.count,this.setRows(e.rows),this.lastFrame=1}async fill(e){if(this.isChanged())throw new Error("cannot fill changed data source: "+this.getFullName());e=await this.select(this.getLimit()?{frame:e}:{});this.count=e.count,this.addRows(e.rows)}async more(){if(!this.hasMore())throw new Error(this.getFullName()+": no more rows");this.lastFrame++,await this.fill(this.lastFrame)}async select(e={}){console.log("SqlDataSource.select",this.getFullName(),e);const t=this.getPage(),r=this.getForm();e=await this.getApp().request({action:"select",page:t?t.getName():null,form:r?r.getName():null,ds:this.getName(),params:{...this.getPageParams(),...e}});if(!(e.rows instanceof Array))throw new Error("rows must be array");return e}getFramesCount(){if(null===this.count)throw new Error(this.getFullName()+": no count info");return 0!==this.count&&this.getLimit()?Math.ceil(this.count/this.getLimit()):1}getLimit(){return this.getAttr("limit")?parseInt(this.getAttr("limit")):null}getCount(){if(null===this.count)throw new Error(this.getFullName()+": no count info");return this.count}getFrame(){return this.frame}getLastFrame(){return this.lastFrame}setFrame(e){this.frame=e}hasMore(){return this.lastFrame<this.getFramesCount()}}window.QForms.SqlDataSource=SqlDataSource;class Database extends Model{constructor(...e){super(...e),this.tables=[]}init(){for(const e of this.data.tables){const t=new Table(e,this);t.init(),this.addTable(t)}}addTable(e){this.tables.push(e)}getTable(t){var e=this.tables.find(e=>e.getName()===t);if(!e)throw new Error(this.getFullName()+": no table with name: "+t);return e}emitResult(e,t=null){console.log("Database.emitResult");const r=[];for(const o in e)r.push(...this.getTable(o).emitResult(e[o],t));return r}}window.QForms.Database=Database;class Field extends Model{init(){}replaceThis(e){return e.replace(/\{([@\w\.]+)\}/g,(e,t)=>{if(-1===t.indexOf("."))return e;let r=t.split(".");return"this"===r[0]&&(r[0]=this.getPage().getName()),`{${r.join(".")}}`})}fillDefaultValue(row){const column=this.getAttr("column");if(column){const defaultValue=this.replaceThis(this.getAttr("defaultValue")),js=Helper.templateToJsString(defaultValue,this.getPage().getParams());if("string"!=typeof js)throw new Error(this.getFullName()+": defaultValue must be templated to js string");try{const value=eval(js);void 0!==value&&(row[column]=this.valueToRaw(value))}catch(err){throw new Error(`[${this.getFullName()}] fillDefaultValue: `+err.toString())}}}valueToPageParams(e){this.isParam()&&(e=this.getValue(e),e=void 0!==(e=this.valueToRaw(e))?Helper.decodeValue(e):void 0,this.getPage().setParam(this.getFullName(),e))}isChanged(e){if(!this.getAttr("column"))throw new Error(this.getFullName()+": field has no column");return this.getDefaultDataSource().isRowColumnChanged(e,this.getAttr("column"))}hasColumn(){return!!this.getAttr("column")}getValue(row){if(!row&&this.parent instanceof RowForm&&(row=this.parent.getRow()),!row)throw new Error(this.getFullName()+": need row");let rawValue;if(this.getAttr("column"))rawValue=this.getRawValue(row);else{if(!this.getAttr("value"))throw new Error(this.getFullName()+": no column and no value in field");{const js=this.getAttr("value");try{rawValue=eval(js)}catch(err){throw console.error(err),new Error(this.getFullName()+": value eval error: "+err.message)}}}if(void 0!==rawValue){if(null===rawValue)throw new Error(`[${this.getFullName()}]: null is wrong raw value`);try{return this.rawToValue(rawValue)}catch(err){throw console.log("raw value decode error:",this.getFullName(),rawValue),err}}}setValue(e,t){if(!this.getAttr("column"))throw new Error("field has no column: "+this.getFullName());t=this.valueToRaw(t);this.getForm().getDefaultDataSource().setValue(e,this.getAttr("column"),t),this.valueToPageParams(e)}rawToValue(e){return Helper.decodeValue(e)}valueToRaw(e){return Helper.encodeValue(e)}getRawValue(e){if(!this.hasColumn())throw new Error(this.getFullName()+": no column");return this.getForm().getDefaultDataSource().getValue(e,this.getAttr("column"))}getDefaultDataSource(){return this.getForm().getDefaultDataSource()}getType(){if(this.getAttr("type"))return this.getAttr("type");if(this.getAttr("column")){const e=this.getDefaultDataSource();if(e.isSurrogate())return e.getType(this.getAttr("column"));throw new Error("field type empty")}throw new Error("field type and column empty")}getForm(){return this.parent}getPage(){return this.parent.parent}getApp(){return this.parent.parent.parent}isReadOnly(){return"true"===this.data.readOnly}isNotNull(){return"true"===this.data.notNull}isNullable(){return"false"===this.data.notNull}getWidth(){var e=parseInt(this.data.width);return isNaN(e)?null:0===e?100:e}getFullName(){return`${this.getPage().getName()}.${this.getForm().getName()}.`+this.getName()}isParam(){return"true"===this.data.param}validateOnChange(){return void 0===this.data.validateOnChange||"true"===this.data.validateOnChange}validateOnBlur(){return void 0!==this.data.validateOnBlur&&"true"===this.data.validateOnBlur}getCaption(){var e=this.getAttr("caption");if(""===e){var t=this.getAttr("column");if(t&&this.parent.hasDefaultSqlDataSource()){const r=this.parent.getDataSource("default");if(r.getAttr("table")){const o=r.getTable().getColumn(t);return o.getCaption()}}}return e}}window.QForms.Field=Field;class CheckBoxField extends Field{}window.QForms.CheckBoxField=CheckBoxField;class CheckBoxListField extends Field{getDisplayValue(r){let e=null;if(r[this.data.displayColumn])try{e=Helper.decodeValue(r[this.data.displayColumn])}catch(e){throw console.log("cannot parse:",r[this.data.displayColumn]),e}else e=this.data.displayColumn,e=e.replace(/\{([\w\.]+)\}/g,(e,t)=>r.hasOwnProperty(t)?r[t]||"":e);return e}getValueValue(e){if(!e[this.data.valueColumn])throw new Error("no valueColumn in CheckBoxList data source");return Helper.decodeValue(e[this.data.valueColumn])}getDataSource(){var e=this.data.dataSourceName;if(!e)throw new Error(this.getFullName()+": no dataSourceName");if(this.getForm().getDataSource(e))return this.getForm().getDataSource(e);if(this.getPage().getDataSource(e))return this.getPage().getDataSource(e);if(this.getApp().getDataSource(e))return this.getApp().getDataSource(e);throw new Error(this.getFullName()+": no data source: "+e)}findRowByRawValue(t){return this.getDataSource().getRows().find(e=>e[this.data.valueColumn]===t)}}window.QForms.CheckBoxListField=CheckBoxListField;class ComboBoxField extends Field{getDisplayValue(r){let e=null;if(r[this.data.displayColumn])try{e=Helper.decodeValue(r[this.data.displayColumn])}catch(e){throw console.log("cannot parse:",r[this.data.displayColumn]),e}else e=this.data.displayColumn,e=e.replace(/\{([\w\.]+)\}/g,(e,t)=>r.hasOwnProperty(t)?r[t]||"":e);return e}getValueValue(e){if(!e[this.data.valueColumn])throw new Error("no valueColumn in ComboBox data source");return Helper.decodeValue(e[this.data.valueColumn])}getComboBoxDataSource(){var e=this.data.dataSourceName;if(!e)throw new Error(this.getFullName()+": no dataSourceName");if(this.getForm().getDataSource(e))return this.getForm().getDataSource(e);if(this.getPage().getDataSource(e))return this.getPage().getDataSource(e);if(this.getApp().getDataSource(e))return this.getApp().getDataSource(e);throw new Error(this.getFullName()+": no data source: "+e)}findRowByRawValue(t){return this.getComboBoxDataSource().getRows().find(e=>e[this.data.valueColumn]===t)}}window.QForms.ComboBoxField=ComboBoxField;class DateField extends Field{getFormat(){return this.getAttr("format")}rawToValue(e){e=Helper.decodeValue(e);return e&&"false"===this.getAttr("timezone")&&Helper.addTimezoneOffset(e),e}valueToRaw(e){let t;var r;return t=e&&"false"===this.getAttr("timezone")?(r=Helper.cloneDate(e),Helper.removeTimezoneOffset(r),Helper.encodeValue(r)):Helper.encodeValue(e),t}}window.QForms.DateField=DateField;class DateTimeField extends Field{getFormat(){return this.getAttr("format")}rawToValue(e){e=Helper.decodeValue(e);return e&&"false"===this.getAttr("timezone")&&Helper.addTimezoneOffset(e),e}valueToRaw(e){let t;var r;return t=e&&"false"===this.getAttr("timezone")?(r=Helper.cloneDate(e),Helper.removeTimezoneOffset(r),Helper.encodeValue(r)):Helper.encodeValue(e),t}}window.QForms.DateTimeField=DateTimeField;class FileField extends Field{}window.QForms.FileField=FileField;class ImageField extends Field{}window.QForms.ImageField=ImageField;class LabelField extends Field{}window.QForms.LabelField=LabelField;class LinkField extends Field{}window.QForms.LinkField=LinkField;class PasswordField extends Field{}window.QForms.PasswordField=PasswordField;class PhoneField extends Field{}window.QForms.PhoneField=PhoneField;class RadioField extends Field{getDisplayValue(r){var t=this.getAttr("displayColumn");let e=null;if(r[t])try{e=Helper.decodeValue(r[t])}catch(e){throw console.log("cannot parse:",r[t]),e}else e=t,e=e.replace(/\{([\w\.]+)\}/g,(e,t)=>r.hasOwnProperty(t)?r[t]||"":e);return e}getValueValue(e){var t=this.getAttr("valueColumn");if(!e[t])throw new Error("no valueColumn in ComboBox data source");return Helper.decodeValue(e[t])}getDataSource(){var e=this.getAttr("dataSourceName");if(!e)throw new Error(this.getFullName()+": no dataSourceName");if(this.getForm().getDataSource(e))return this.getForm().getDataSource(e);if(this.getPage().getDataSource(e))return this.getPage().getDataSource(e);if(this.getApp().getDataSource(e))return this.getApp().getDataSource(e);throw new Error(this.getFullName()+": no data source: "+e)}findRowByRawValue(t){const r=this.getAttr("valueColumn");return this.getDataSource().getRows().find(e=>e[r]===t)}}class TextAreaField extends Field{getRows(){return this.data.rows}getCols(){return this.data.cols}}window.QForms.TextAreaField=TextAreaField;class TextBoxField extends Field{}window.QForms.TextBoxField=TextBoxField;class TimeField extends Field{}window.QForms.TimeField=TimeField;class Form extends Model{constructor(e,t){super(e,t),this.dataSources=[],this.fields=[]}init(){this.createDataSources();for(const e of this.data.fields){const t=FrontHostApp.getClassByName(e.class);if(!t)throw new Error(`no class ${e.class} class`);const r=new t(e,this);r.init(),this.fields.push(r)}}deinit(){this.deinitDataSources();for(const e of this.fields)e.deinit();super.deinit()}fillDefaultValues(e){for(const t of this.fields)t.fillDefaultValue(e)}onDataSourceRefresh(e){this.emit("refresh",e)}onDataSourceInsert(e){this.parent.onFormInsert(e),this.emit("insert",e)}onDataSourceUpdate(e){this.emit("update",e)}onDataSourceDelete(e){this.emit("delete",e)}async update(){if(console.log("Form.update",this.getFullName(),this.isChanged()),this.getPage().deinited)throw new Error("page already deinited");if(!this.isChanged()&&!this.getDefaultDataSource().hasNewRows())throw new Error("form model not changed or does not have new rows: "+this.getFullName());await this.getDefaultDataSource().update()}isChanged(){return this.getDefaultDataSource().isChanged()}hasNew(){return this.getDefaultDataSource().hasNew()}async rpc(e,t){if(console.log("Form.rpc",this.getFullName(),e,t),!e)throw new Error("no name");t=await this.getApp().request({uuid:this.getApp().getAttr("uuid"),action:"rpc",page:this.getPage().getName(),form:this.getName(),name:e,params:t});if(t.errorMessage)throw new Error(t.errorMessage);return t}getKey(){return null}getDefaultDataSource(){var e=this.getDataSource("default");if(!e)throw new Error(this.getFullName()+": no default data source");return e}getPage(){return this.parent}getApp(){return this.parent.parent}async refresh(){await this.getDefaultDataSource().refresh()}getField(t){return this.fields.find(e=>e.getName()===t)}hasDefaultSqlDataSource(){return"SqlDataSource"===this.getDefaultDataSource().getClassName()}decodeRow(e){const t={};for(const o of this.fields){var r=o.getAttr("column");r&&(t[r]=o.getValue(e))}return t}}window.QForms.Form=Form;class RowForm extends Form{init(){super.init(),this.isNewMode()&&this.getDefaultDataSource().newRow(this.createRow()),this.fillParams(this.getRow())}isNewMode(){var e=this.getAttr("newMode");return"true"===e||"false"!==e&&this.getPage().isNewMode()}fillParams(e){for(const t of this.fields)t.valueToPageParams(e)}onDataSourceUpdate(e){this.fillParams(this.getRow()),super.onDataSourceUpdate(e)}onDataSourceInsert(e){this.fillParams(this.getRow()),super.onDataSourceInsert(e)}getRow(e){return this.getDefaultDataSource().getSingleRow(e)}getKey(){const e=this.getDefaultDataSource();if("SqlDataSource"!==e.getClassName())return null;var t=this.getRow();return e.getRowKey(t)}createRow(){var e={};return this.fillDefaultValues(e),e}discard(e){console.log("RowForm.discard",e),this.getDefaultDataSource().isChanged()&&(this.getDefaultDataSource().discard(),e.forEach(e=>{this.getField(e).valueToPageParams(this.getRow())}))}}window.QForms.RowForm=RowForm;class TableForm extends Form{}window.QForms.TableForm=TableForm;class Page extends Model{constructor(e,t,r){super(e,t),this.options=r,this.dataSources=[],this.forms=[],this.params={},r.onCreate&&r.onCreate(this)}init(){this.createDataSources(),this.createForms(),console.log("page options:",this.options),console.log("page params:",this.getParams())}deinit(){if(this.deinited)throw new Error(`page ${this.getFullName()} is already deinited`);this.deinitDataSources(),this.deinitForms(),super.deinit()}getOptions(){return this.options}createForms(){for(const e of this.data.forms){const t=FrontHostApp.getClassByName(Model.getClassName(e)),r=new t(e,this);r.init(),this.forms.push(r)}}deinitForms(){for(const e of this.forms)e.deinit()}getParams(){return{...this.options.params||{},...this.params}}setParam(e,t){this.params[e]=void 0!==t?t:null}async update(){console.log("Page.update",this.getFullName());for(const e of this.forms)(e.isChanged()||e.hasNew())&&await e.update()}discard(){console.log("Page.discard",this.getFullName());for(const e of this.forms)e.discard()}getKey(){for(const e of this.forms)if("RowForm"===e.getClassName())return e.getKey();return null}hasRowFormWithDefaultDs(){for(const e of this.forms)if("RowForm"===e.getClassName()&&e.getDefaultDataSource())return!0;return!1}hasRowFormWithDefaultSqlDataSource(){for(const e of this.forms)if("RowForm"===e.getClassName()&&e.hasDefaultSqlDataSource())return!0;return!1}hasRowForm(){for(const e of this.forms)if("RowForm"===e.getClassName())return!0;return!1}hasTableForm(){for(const e of this.forms)if("TableForm"===e.getClassName())return!0;return!1}isNewMode(){return!!this.options.newMode}hasNew(){for(const e of this.forms)if(e.hasNew())return!0;return!1}getApp(){return this.parent}isModal(){return!!this.options.modal}onFormInsert(e){console.log("Page.onFormInsert",e);for(const r of e.inserts){var t=DataSource.keyToParams(r);for(const o in t)this.setParam(o,t[o])}}async rpc(e,t){if(!e)throw new Error("no name");t=await this.getApp().request({uuid:this.getApp().getAttr("uuid"),action:"rpc",page:this.getName(),name:e,params:t});if(t.errorMessage)throw new Error(t.errorMessage);return t}getForm(t){return this.forms.find(e=>e.getName()===t)}isSelectMode(){return!!this.options.selectMode}}window.QForms.Page=Page;class Table extends Model{constructor(e,t){super(e,t),this.columns=[]}init(){for(const e of this.data.columns){const t=new Column(e,this);t.init(),this.addColumn(t)}}addColumn(e){this.columns.push(e)}getColumn(t){var e=this.columns.find(e=>e.getName()===t);if(!e)throw new Error(`table ${this.getFullName()}: no column `+t);return e}emitResult(e,t=null){return console.log("Table.emitResult"),[...e.insert?[this.emitInsert(t,e.insert)]:[],...e.update?[this.emitUpdate(t,e.update)]:[],...e.delete?[this.emitDelete(t,e.delete)]:[],...e.refresh?[this.emitRefresh(t)]:[]]}emitInsert(e,t){return this.emit("insert",{source:e,inserts:t})}emitUpdate(e,t){return this.emit("update",{source:e,updates:t})}emitDelete(e,t){return this.emit("delete",{source:e,deletes:t})}emitRefresh(e){return this.emit("refresh",{source:e})}}window.QForms.Table=Table;
//# sourceMappingURL=viewer.6e9337d1b0ece1e55718424adee8039f.js.map
